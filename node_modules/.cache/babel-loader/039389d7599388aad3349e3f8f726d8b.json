{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\extrust\\eboard\\src\\webViewBridge.js","dependencies":[{"path":"D:\\extrust\\eboard\\src\\webViewBridge.js","mtime":1707983434822},{"path":"D:\\extrust\\eboard\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\eslint-loader\\index.js","mtime":1689230670675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiKTsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHByb21pc2VDaGFpbiA9IFByb21pc2UucmVzb2x2ZSgpOwogIHZhciBjYWxsYmFja3MgPSB7fTsKCiAgdmFyIGluaXQgPSBmdW5jdGlvbiBpbml0KCkgewogICAgLy8g7Jyg64uI7YGs7ZWcIOyVhOydtOuUlOulvCDsg53shLHtlZzri6QuCiAgICAvLyBuYXRpdmXsl5DshJwgY2FsbGJhY2sg67Cb7J2E65WMIGlk7J2YIGNhbGxiYWNr7J2EIO2YuOy2nO2VnOuLpC4KICAgIHZhciBndWlkID0gZnVuY3Rpb24gZ3VpZCgpIHsKICAgICAgZnVuY3Rpb24gczQoKSB7CiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzNCgpICsgczQoKSArICItIiArIHM0KCkgKyAiLSIgKyBzNCgpICsgIi0iICsgczQoKSArICItIiArIHM0KCkgKyBzNCgpICsgczQoKTsKICAgIH07CiAgICAvKioKICAgICAqIGphdmFzY3JpcHQgPT4gcmVhY3QtbmF0aXZlCiAgICAgKiBqYXZhc2NyaXB07JeQ7IScIHJlYWN0LW5hdGl2ZeyXkCDrqZTshLjsp4Drpbwg67O064K464ukLgogICAgICovCgoKICAgIHdpbmRvdy53ZWJWaWV3QnJpZGdlID0gewogICAgICBzZW5kOiBmdW5jdGlvbiBzZW5kKHRhcmdldEZ1bmMsIGRhdGEsIHN1Y2Nlc3MsIGVycm9yKSB7CiAgICAgICAgdmFyIG1zZ09iaiA9IHsKICAgICAgICAgIHRhcmdldEZ1bmM6IHRhcmdldEZ1bmMsCiAgICAgICAgICBkYXRhOiBkYXRhIHx8IHt9CiAgICAgICAgfTsKCiAgICAgICAgaWYgKHN1Y2Nlc3MgfHwgZXJyb3IpIHsKICAgICAgICAgIG1zZ09iai5tc2dJZCA9IGd1aWQoKTsKICAgICAgICB9CgogICAgICAgIHZhciBtc2cgPSBKU09OLnN0cmluZ2lmeShtc2dPYmopOwogICAgICAgIHByb21pc2VDaGFpbiA9IHByb21pc2VDaGFpbi50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZWFjdCBuYXRpdmXsl5Ag66mU7IS47KeA66W8IOuztOuDhCAiICsgbXNnT2JqLnRhcmdldEZ1bmMpOwoKICAgICAgICAgICAgaWYgKG1zZ09iai5tc2dJZCkgewogICAgICAgICAgICAgIGNhbGxiYWNrc1ttc2dPYmoubXNnSWRdID0gewogICAgICAgICAgICAgICAgb25zdWNjZXNzOiBzdWNjZXNzLAogICAgICAgICAgICAgICAgb25lcnJvcjogZXJyb3IKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CgogICAgICAgICAgICB3aW5kb3cuUmVhY3ROYXRpdmVXZWJWaWV3LnBvc3RNZXNzYWdlKG1zZyk7CiAgICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICAgIH0pOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCLrqZTshLjsp4Ag7Iuk7YyoICIgKyBlLm1lc3NhZ2UpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9OwogICAgLyoqCiAgICAgKiByZWFjdC1uYXRpdmUgPT4gamF2YXNjcmlwdAogICAgICogcmVhY3QgbmF0aXZl7JeQ7IScIO2ZlOuptOyXkCDqsrDqs7zrpbwg64SY6rKo7KSA64ukLgogICAgICogZm9yIGFuZHJvaWQKICAgICAqLwoKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLCBmdW5jdGlvbiAoZSkgewogICAgICB2YXIgbWVzc2FnZTsKCiAgICAgIHRyeSB7CiAgICAgICAgbWVzc2FnZSA9IEpTT04ucGFyc2UoZS5kYXRhKTsKICAgICAgICBhbGVydCgiY2FsbCBiYWNrIGV2ZW50IGUuZGF0YSA6OiIgKyBlLmRhdGEpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAvL2NvbnNvbGUuZXJyb3IoJ+uplOyEuOyngOulvCDtjIzsi7HtlaDsiJgg7JeG7J2MICcgKyBlcnIpOwogICAgICAgIHJldHVybjsKICAgICAgfSAvLyBjYWxsYmFja+ydhCDtirjrpqzqsbDtlZzri6QuCgoKICAgICAgaWYgKGNhbGxiYWNrc1ttZXNzYWdlLm1zZ0lkXSkgewogICAgICAgIGlmIChtZXNzYWdlLmlzU3VjY2Vzc2Z1bGwpIHsKICAgICAgICAgIGNhbGxiYWNrc1ttZXNzYWdlLm1zZ0lkXS5vbnN1Y2Nlc3MobWVzc2FnZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNhbGxiYWNrc1ttZXNzYWdlLm1zZ0lkXS5vbmVycm9yKG1lc3NhZ2UpOwogICAgICAgIH0KCiAgICAgICAgZGVsZXRlIGNhbGxiYWNrc1ttZXNzYWdlLm1zZ0lkXTsKICAgICAgfQogICAgfSk7CiAgICAvKioKICAgICAqIHJlYWN0LW5hdGl2ZSA9PiBqYXZhc2NyaXB0CiAgICAgKiByZWFjdCBuYXRpdmXsl5DshJwg7ZmU66m07JeQIOqysOqzvOulvCDrhJjqsqjspIDri6QuCiAgICAgKiBmb3IgaW9zCiAgICAgKi8KCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigibWVzc2FnZSIsIGZ1bmN0aW9uIChlKSB7CiAgICAgIHZhciBtZXNzYWdlOwoKICAgICAgdHJ5IHsKICAgICAgICBtZXNzYWdlID0gSlNPTi5wYXJzZShlLmRhdGEpOwogICAgICAgIGFsZXJ0KCJjYWxsIGJhY2sgZXZlbnQgZS5kYXRhIDo6IiArIGUuZGF0YSk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIC8vY29uc29sZS5lcnJvcign66mU7IS47KeA66W8IO2MjOyLse2VoOyImCDsl4bsnYwgJyArIGVycik7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIGNhbGxiYWNr7J2EIO2KuOumrOqxsO2VnOuLpC4KCgogICAgICBpZiAoY2FsbGJhY2tzW21lc3NhZ2UubXNnSWRdKSB7CiAgICAgICAgaWYgKG1lc3NhZ2UuaXNTdWNjZXNzZnVsbCkgewogICAgICAgICAgY2FsbGJhY2tzW21lc3NhZ2UubXNnSWRdLm9uc3VjY2VzcyhtZXNzYWdlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY2FsbGJhY2tzW21lc3NhZ2UubXNnSWRdLm9uZXJyb3IobWVzc2FnZSk7CiAgICAgICAgfQoKICAgICAgICBkZWxldGUgY2FsbGJhY2tzW21lc3NhZ2UubXNnSWRdOwogICAgICB9CiAgICB9KTsKICB9OwoKICBpbml0KCk7Cn0pKCk7"},{"version":3,"sources":["D:/extrust/eboard/src/webViewBridge.js"],"names":["promiseChain","Promise","resolve","callbacks","init","guid","s4","Math","floor","random","toString","substring","window","webViewBridge","send","targetFunc","data","success","error","msgObj","msgId","msg","JSON","stringify","then","reject","console","log","onsuccess","onerror","ReactNativeWebView","postMessage","catch","e","message","document","addEventListener","parse","alert","err","isSuccessfull"],"mappings":"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","sourcesContent":["(function () {\n  var promiseChain = Promise.resolve();\n  var callbacks = {};\n  var init = function () {\n    // 유니크한 아이디를 생성한다.\n    // native에서 callback 받을때 id의 callback을 호출한다.\n    const guid = function () {\n      function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n      }\n      return (\n        s4() +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        \"-\" +\n        s4() +\n        s4() +\n        s4()\n      );\n    };\n\n    /**\n     * javascript => react-native\n     * javascript에서 react-native에 메세지를 보낸다.\n     */\n    window.webViewBridge = {\n      send: function (targetFunc, data, success, error) {\n        var msgObj = {\n          targetFunc: targetFunc,\n          data: data || {},\n        };\n\n        if (success || error) {\n          msgObj.msgId = guid();\n        }\n\n        var msg = JSON.stringify(msgObj);\n\n        promiseChain = promiseChain\n          .then(function () {\n            return new Promise(function (resolve, reject) {\n              console.log(\"react native에 메세지를 보냄 \" + msgObj.targetFunc);\n\n              if (msgObj.msgId) {\n                callbacks[msgObj.msgId] = {\n                  onsuccess: success,\n                  onerror: error,\n                };\n              }\n\n              window.ReactNativeWebView.postMessage(msg);\n              resolve();\n            });\n          })\n          .catch(function (e) {\n            console.error(\"메세지 실패 \" + e.message);\n          });\n      },\n    };\n\n    /**\n     * react-native => javascript\n     * react native에서 화면에 결과를 넘겨준다.\n     * for android\n     */\n    document.addEventListener(\"message\", function (e) {\n      var message;\n      try {\n        message = JSON.parse(e.data);\n        alert(\"call back event e.data ::\" + e.data);\n      } catch (err) {\n        //console.error('메세지를 파싱할수 없음 ' + err);\n        return;\n      }\n\n      // callback을 트리거한다.\n      if (callbacks[message.msgId]) {\n        if (message.isSuccessfull) {\n          callbacks[message.msgId].onsuccess(message);\n        } else {\n          callbacks[message.msgId].onerror(message);\n        }\n        delete callbacks[message.msgId];\n      }\n    });\n\n    /**\n     * react-native => javascript\n     * react native에서 화면에 결과를 넘겨준다.\n     * for ios\n     */\n    window.addEventListener(\"message\", function (e) {\n      var message;\n      try {\n        message = JSON.parse(e.data);\n        alert(\"call back event e.data ::\" + e.data);\n      } catch (err) {\n        //console.error('메세지를 파싱할수 없음 ' + err);\n        return;\n      }\n\n      // callback을 트리거한다.\n      if (callbacks[message.msgId]) {\n        if (message.isSuccessfull) {\n          callbacks[message.msgId].onsuccess(message);\n        } else {\n          callbacks[message.msgId].onerror(message);\n        }\n        delete callbacks[message.msgId];\n      }\n    });\n  };\n  init();\n})();\n"]}]}