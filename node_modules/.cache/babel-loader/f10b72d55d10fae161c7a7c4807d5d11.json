{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\performance\\netSales\\netSalesReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\performance\\netSales\\netSalesReport.vue","mtime":1710841857644},{"path":"D:\\extrust\\eboard\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAidnVlLWFwZXhjaGFydHMiOwppbXBvcnQgbmV0U2FsZXNMZXZlbDJSZXBvcnQgZnJvbSAiLi9uZXRTYWxlc0xldmVsMlJlcG9ydCI7CmltcG9ydCBuZXRTYWxlc0xldmVsM1JlcG9ydCBmcm9tICIuL25ldFNhbGVzTGV2ZWwzUmVwb3J0IjsKaW1wb3J0IG5ldFNhbGVzTGV2ZWw0UmVwb3J0IGZyb20gIi4vbmV0U2FsZXNMZXZlbDRSZXBvcnQiOwppbXBvcnQgc3RvcmUgZnJvbSAiQC9zdG9yZSI7CmltcG9ydCBuZXRTYWxlc1N0b3JlTW9kdWxlIGZyb20gIi4vbmV0U2FsZXNTdG9yZU1vZHVsZSI7CnZhciBwZXJmb3JtYW5jZU5ldFNhbGVzID0gImFwcFBlcmZvcm1hbmNlTmV0U2FsZXMiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgYXBleGNoYXJ0OiBWdWVBcGV4Q2hhcnRzLAogICAgbmV0U2FsZXNMZXZlbDJSZXBvcnQ6IG5ldFNhbGVzTGV2ZWwyUmVwb3J0LAogICAgbmV0U2FsZXNMZXZlbDNSZXBvcnQ6IG5ldFNhbGVzTGV2ZWwzUmVwb3J0LAogICAgbmV0U2FsZXNMZXZlbDRSZXBvcnQ6IG5ldFNhbGVzTGV2ZWw0UmVwb3J0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgaWYgKCFzdG9yZS5oYXNNb2R1bGUocGVyZm9ybWFuY2VOZXRTYWxlcykpIHsKICAgICAgc3RvcmUucmVnaXN0ZXJNb2R1bGUocGVyZm9ybWFuY2VOZXRTYWxlcywgbmV0U2FsZXNTdG9yZU1vZHVsZSk7CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgY2hhcnREYXRhOiBbXSwKICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgaGVpZ2h0OiAzNTAsCiAgICAgICAgICBzdGFja2VkOiBmYWxzZSwKICAgICAgICAgIC8vIOupgO2LsCDrp4nrjIAg7LCo7Yq466W8IOyKpO2DneycvOuhnCDshKTsoJXtlanri4jri6QuCiAgICAgICAgICBhbmltYXRpb25zOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgIGVhc2luZzogJ2Vhc2Vpbm91dCcsCiAgICAgICAgICAgIHNwZWVkOiA4MDAsCiAgICAgICAgICAgIGFuaW1hdGVHcmFkdWFsbHk6IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgIGRlbGF5OiAyNTAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZHluYW1pY0FuaW1hdGlvbjogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgc3BlZWQ6IDM1MAogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZXZlbnRzOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhldmVudCwgY2hhcnRDb250ZXh0LCBjb25maWcpIHsKICAgICAgICAgICAgICAvLyBUaGUgbGFzdCBwYXJhbWV0ZXIgY29uZmlnIGNvbnRhaW5zIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gbGlrZSBgc2VyaWVzSW5kZXhgIGFuZCBgZGF0YVBvaW50SW5kZXhgIGZvciBjYXJ0ZXNpYW4gY2hhcnRzCiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgYmFyOiB7CiAgICAgICAgICAgIGhvcml6b250YWw6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4YXhpczogewogICAgICAgICAgY2F0ZWdvcmllczogWydOZXRTYWxlcyddIC8vIFjstpUg7Lm07YWM6rOg66asCgogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcKICAgICAgICB9LAogICAgICAgIGZpbGw6IHsKICAgICAgICAgIG9wYWNpdHk6IDEwCiAgICAgICAgfQogICAgICB9LAogICAgICBzZWxlY3RlZEJhckluZGV4OiBudWxsIC8vIO2BtOumreuQnCDrp4nrjIAg6re4656Y7ZSE7J2YIOyduOuNseyKpOulvCDsoIDsnqXtlZjripQg67OA7IiYCgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydFNlcmllczI6IGZ1bmN0aW9uIGNoYXJ0U2VyaWVzMigpIHsKICAgICAgcmV0dXJuIFt7CiAgICAgICAgbmFtZTogJ+uLueyblCBOZXRTYWxlcycsCiAgICAgICAgZGF0YTogdGhpcy4kc3RvcmUuc3RhdGUuYXBwUGVyZm9ybWFuY2VOZXRTYWxlcy5kYXRhTmFtZUl0ZW1OZXRTYWxlc0xldmVsMUxpc3QKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IHRoaXMuJHN0b3JlLnN0YXRlLmFwcFBlcmZvcm1hbmNlTmV0U2FsZXMuZGF0YU5hbWVJdGVtUE1OZXRTYWxlc0xldmVsMUxpc3QKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITrhYQg64+Z7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiB0aGlzLiRzdG9yZS5zdGF0ZS5hcHBQZXJmb3JtYW5jZU5ldFNhbGVzLmRhdGFOYW1lSXRlbVBZTmV0U2FsZXNMZXZlbDFMaXN0CiAgICAgIH1dOwogICAgfSwKICAgIGNoYXJ0U2VyaWVzOiBmdW5jdGlvbiBjaGFydFNlcmllcygpIHsKICAgICAgcmV0dXJuIFt7CiAgICAgICAgbmFtZTogJ+uLueyblCBOZXRTYWxlcycsCiAgICAgICAgZGF0YTogdGhpcy4kc3RvcmUuc3RhdGUuYXBwUGVyZm9ybWFuY2VOZXRTYWxlcy5kYXRhTmFtZUl0ZW1DVG90YWxOZXRTYWxlc0xldmVsMUxpc3QKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IHRoaXMuJHN0b3JlLnN0YXRlLmFwcFBlcmZvcm1hbmNlTmV0U2FsZXMuZGF0YU5hbWVJdGVtUE1Ub3RhbE5ldFNhbGVzTGV2ZWwxTGlzdAogICAgICB9LCB7CiAgICAgICAgbmFtZTogJ+yghOuFhOuPmeyblCBOZXRTYWxlcycsCiAgICAgICAgZGF0YTogdGhpcy4kc3RvcmUuc3RhdGUuYXBwUGVyZm9ybWFuY2VOZXRTYWxlcy5kYXRhTmFtZUl0ZW1QWVRvdGFsTmV0U2FsZXNMZXZlbDFMaXN0CiAgICAgIH1dOwogICAgfSwKICAgIGxpa2VzU29tZVRhcmdldDogZnVuY3Rpb24gbGlrZXNTb21lVGFyZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEZpbHRlci5sZW5ndGggPiAwICYmICF0aGlzLmNsaWNrQWxsVGFyZ2V0OwogICAgfSwKICAgIGNhdGVnb3JpZXM6IGZ1bmN0aW9uIGNhdGVnb3JpZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5hcHBQZXJmb3JtYW5jZU5ldFNhbGVzLmRhdGFOYW1lSXRlbUxldmVsMUxpc3Q7CiAgICB9LAogICAgY2hhcnRPcHRpb25zMjogZnVuY3Rpb24gY2hhcnRPcHRpb25zMigpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBjaGFydDogewogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBoZWlnaHQ6IDM1MCwKICAgICAgICAgIHN0YWNrZWQ6IGZhbHNlLAogICAgICAgICAgLy8g66mA7YuwIOunieuMgCDssKjtirjrpbwg7Iqk7YOd7Jy866GcIOyEpOygle2VqeuLiOuLpC4KICAgICAgICAgIGFuaW1hdGlvbnM6IHsKICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgZWFzaW5nOiAnZWFzZWlub3V0JywKICAgICAgICAgICAgc3BlZWQ6IDgwMCwKICAgICAgICAgICAgYW5pbWF0ZUdyYWR1YWxseTogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgZGVsYXk6IDI1MAogICAgICAgICAgICB9LAogICAgICAgICAgICBkeW5hbWljQW5pbWF0aW9uOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICBzcGVlZDogMzUwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBldmVudHM6IHsKICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGV2ZW50LCBjaGFydENvbnRleHQsIGNvbmZpZykgewogICAgICAgICAgICAgIHZhciBvdiA9IHsKICAgICAgICAgICAgICAgIGluZGV4OiBjb25maWcuZGF0YVBvaW50SW5kZXgKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCIiLmNvbmNhdChwZXJmb3JtYW5jZU5ldFNhbGVzLCAiL2ZldGNoTGV2ZWwyRXZlbnRzIiksIG92KTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgcGxvdE9wdGlvbnM6IHsKICAgICAgICAgIGJhcjogewogICAgICAgICAgICBob3Jpem9udGFsOiBmYWxzZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgeGF4aXM6IHsKICAgICAgICAgIGNhdGVnb3JpZXM6IHRoaXMuY2F0ZWdvcmllcwogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcKICAgICAgICB9LAogICAgICAgIGZpbGw6IHsKICAgICAgICAgIG9wYWNpdHk6IDEwCiAgICAgICAgfQogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0Q1RvdG9hbE5ldFNhbGVzZm9yTGV2ZWwxY2F0ZWdvcmllczogZnVuY3Rpb24gZ2V0Q1RvdG9hbE5ldFNhbGVzZm9yTGV2ZWwxY2F0ZWdvcmllcygpIHsKICAgICAgc3RvcmUuZGlzcGF0Y2goIiIuY29uY2F0KHBlcmZvcm1hbmNlTmV0U2FsZXMsICIvZmV0Y2hHZXRUb3RhbE5lc3RTYWxlc0xldmVsMSIpKTsKICAgIH0sCiAgICBnZXROYW1lZm9yTGV2ZWwxY2F0ZWdvcmllczogZnVuY3Rpb24gZ2V0TmFtZWZvckxldmVsMWNhdGVnb3JpZXMoKSB7CiAgICAgIHN0b3JlLmRpc3BhdGNoKCIiLmNvbmNhdChwZXJmb3JtYW5jZU5ldFNhbGVzLCAiL2ZldGNoR2V0TmFtZUxldmVsMSIpKTsKICAgIH0sCiAgICBnZXRDTmV0U2FsZXNmb3JMZXZlbDFjYXRlZ29yaWVzOiBmdW5jdGlvbiBnZXRDTmV0U2FsZXNmb3JMZXZlbDFjYXRlZ29yaWVzKCkgewogICAgICBzdG9yZS5kaXNwYXRjaCgiIi5jb25jYXQocGVyZm9ybWFuY2VOZXRTYWxlcywgIi9mZXRjaEdldE5lc3RTYWxlc0xldmVsMSIpKTsKICAgIH0sCiAgICBoYW5kbGVDaGFydENsaWNrOiBmdW5jdGlvbiBoYW5kbGVDaGFydENsaWNrKGV2ZW50LCBjaGFydENvbnRleHQsIGNvbmZpZykgewogICAgICB2YXIgc2VyaWVzSW5kZXggPSBjb25maWcuc2VyaWVzSW5kZXg7CiAgICAgIHZhciBkYXRhUG9pbnRJbmRleCA9IGNvbmZpZy5kYXRhUG9pbnRJbmRleDsgLy8g7YG066at65CcIOunieuMgCDqt7jrnpjtlITsnZgg7J24642x7Iqk66W8IOyggOyepQoKICAgICAgdGhpcy5zZWxlY3RlZEJhckluZGV4ID0gZGF0YVBvaW50SW5kZXg7CiAgICAgIGNvbnNvbGUubG9nKHNlcmllc0luZGV4KTsKICAgICAgY29uc29sZS5sb2coY29uZmlnKTsKICAgICAgdGhpcy5nZXROYW1lZm9yTGV2ZWwxY2F0ZWdvcmllcygpOwogICAgICB0aGlzLmdldENOZXRTYWxlc2ZvckxldmVsMWNhdGVnb3JpZXMoKTsKICAgIH0gLy8gZ2V0QmFyQ29sb3IoaW5kZXgpIHsKICAgIC8vICAgICBjb25zb2xlLmxvZyhpbmRleCkKICAgIC8vICAgICAvLyDtgbTrpq3rkJwg66eJ64yAIOq3uOuemO2UhOydmCDsnbjrjbHsiqTsmYAg7ZiE7J6sIOunieuMgCDqt7jrnpjtlITsnZgg7J24642x7Iqk6rCAIOqwmeycvOuptCDtirnsoJUg7IOJ7IOB7Jy866GcIOuzgOqyvQogICAgLy8gICAgIHJldHVybiBpbmRleCA9PT0gdGhpcy5zZWxlY3RlZEJhckluZGV4ID8gJyNGRjU3MzMnIDogbnVsbDsKICAgIC8vIH0sCgogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0Q1RvdG9hbE5ldFNhbGVzZm9yTGV2ZWwxY2F0ZWdvcmllcygpOwogIH0KfTs="},{"version":3,"sources":["netSalesReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"3\" class=\"align-center\">\r\n            <v-card  class=\"scroll-card\">\r\n                <v-card-text >\r\n                    <apexchart   ref=\"chart\" type=\"bar\" :options=\"chartOptions\" :series=\"chartSeries\" height=\"350\"  @click=\"handleChartClick\"/>\r\n                </v-card-text >\r\n            </v-card>\r\n        \r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"9\" >\r\n            <v-card class=\"scroll-card\">\r\n                <v-card-text >\r\n                        <apexchart ref=\"chart2\" type=\"bar\" :options=\"chartOptions2\" :series=\"chartSeries2\" height=\"350\"  />\r\n\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"4\">\r\n            <netSalesLevel2Report/>\r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"4\">\r\n          <netSalesLevel3Report/>\r\n        </v-col>\r\n              \r\n        <v-col cols=\"12\" md=\"4\">\r\n          <netSalesLevel4Report/>\r\n        </v-col>\r\n    </v-row>\r\n  </template>\r\n  \r\n  <script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport netSalesLevel2Report from \"./netSalesLevel2Report\";\r\nimport netSalesLevel3Report from \"./netSalesLevel3Report\";\r\nimport netSalesLevel4Report from \"./netSalesLevel4Report\";\r\n\r\nimport store from \"@/store\";\r\nimport netSalesStoreModule from \"./netSalesStoreModule\";\r\nconst  performanceNetSales  = \"appPerformanceNetSales\";\r\n\r\n\r\nexport default {\r\n    components: {\r\n      apexchart: VueApexCharts,netSalesLevel2Report ,netSalesLevel3Report,netSalesLevel4Report\r\n    },\r\n    data() {\r\n      \r\n      if (!store.hasModule(performanceNetSales)) {\r\n          store.registerModule( performanceNetSales,netSalesStoreModule );\r\n      }\r\n\r\n\r\n      return {\r\n        chartData :[],\r\n        chartOptions: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 800,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 250\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350\r\n                }\r\n            },\r\n            events: {\r\n                click: function(event, chartContext, config) {\r\n                    // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                    console.log(event);\r\n                }\r\n            }\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: ['NetSales'], // X축 카테고리\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          fill: {\r\n            opacity: 10,\r\n          },\r\n         \r\n        },\r\n        selectedBarIndex: null, // 클릭된 막대 그래프의 인덱스를 저장하는 변수\r\n      };\r\n    },\r\n\r\n\r\n    computed: {\r\n        chartSeries2() {\r\n          return[\r\n              {\r\n                name: '당월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemNetSalesLevel1List\r\n              },\r\n              {\r\n                name: '전월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPMNetSalesLevel1List\r\n              },\r\n              {\r\n                name: '전년 동월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPYNetSalesLevel1List\r\n              }\r\n         ]\r\n        },\r\n\r\n\r\n        chartSeries(){\r\n             return  [\r\n                    {\r\n                      name: '당월 NetSales',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemCTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: '전월 NetSales',\r\n                      data:this.$store.state.appPerformanceNetSales.dataNameItemPMTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: '전년동월 NetSales',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemPYTotalNetSalesLevel1List,\r\n                    }\r\n            ]\r\n        },\r\n\r\n\r\n        likesSomeTarget() {\r\n             return this.selectedFilter.length > 0 && !this.clickAllTarget;\r\n        },\r\n\r\n        categories(){\r\n          return this.$store.state.appPerformanceNetSales.dataNameItemLevel1List;\r\n        },\r\n\r\n        chartOptions2() {\r\n           return { \r\n                chart: {\r\n                      type: 'bar',\r\n                      height: 350,\r\n                      stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n                      animations: {\r\n                          enabled: true,\r\n                          easing: 'easeinout',\r\n                          speed: 800,\r\n                          animateGradually: {\r\n                              enabled: true,\r\n                              delay: 250\r\n                          },\r\n                          dynamicAnimation: {\r\n                              enabled: true,\r\n                              speed: 350\r\n                          }\r\n                },\r\n                events: {\r\n                      click: function(event, chartContext, config) {\r\n                          const ov = {index:config.dataPointIndex};\r\n                          store.dispatch(`${performanceNetSales}/fetchLevel2Events`,ov);\r\n                      }\r\n                  }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                      horizontal: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: this.categories\r\n                },\r\n                legend: {\r\n                    position: 'top',\r\n                },\r\n                fill: {\r\n                    opacity: 10,\r\n                },\r\n            }\r\n        },\r\n\r\n    \r\n    },\r\n    \r\n    methods:{\r\n\r\n        getCTotoalNetSalesforLevel1categories() {\r\n            store.dispatch(`${performanceNetSales}/fetchGetTotalNestSalesLevel1`);\r\n        },\r\n      \r\n        getNameforLevel1categories() {\r\n          store.dispatch(`${performanceNetSales}/fetchGetNameLevel1`);\r\n        },\r\n\r\n        getCNetSalesforLevel1categories(){\r\n          store.dispatch(`${performanceNetSales}/fetchGetNestSalesLevel1`);\r\n        },\r\n\r\n\r\n        handleChartClick(event, chartContext, config) {\r\n            const seriesIndex = config.seriesIndex;\r\n            const dataPointIndex = config.dataPointIndex;\r\n            // 클릭된 막대 그래프의 인덱스를 저장\r\n            this.selectedBarIndex = dataPointIndex;\r\n\r\n            console.log(seriesIndex)\r\n            console.log(config)\r\n\r\n            this.getNameforLevel1categories();\r\n            this.getCNetSalesforLevel1categories();\r\n\r\n            \r\n        },\r\n        \r\n       \r\n\r\n        // getBarColor(index) {\r\n        //     console.log(index)\r\n        //     // 클릭된 막대 그래프의 인덱스와 현재 막대 그래프의 인덱스가 같으면 특정 색상으로 변경\r\n        //     return index === this.selectedBarIndex ? '#FF5733' : null;\r\n        // },\r\n      },\r\n\r\n      created(){\r\n          this.getCTotoalNetSalesforLevel1categories();\r\n      },\r\n\r\n    \r\n  };\r\n  </script>\r\n  \r\n\r\n  <style scoped>\r\n    .scroll-card {\r\n        overflow-x: auto;\r\n    }\r\n  </style>"],"sourceRoot":"src/views/performance/netSales"}]}