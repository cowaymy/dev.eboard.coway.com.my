{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\extrust\\eboard\\src\\views\\dashboard\\sales\\salesApiStoreModule.js","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\dashboard\\sales\\salesApiStoreModule.js","mtime":1707983434805},{"path":"D:\\extrust\\eboard\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\eslint-loader\\index.js","mtime":1689230670675}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7Ci8vaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGJ1cyBmcm9tICIuLi8uLi8uLi91dGlscy9idXMuanMiOwppbXBvcnQgc2FsZXNBcGkgZnJvbSAiLi4vLi4vLi4vYXBpL3NhbGVzQXBpIjsKaW1wb3J0IHN0b3JlIGZyb20gIkAvc3RvcmUiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgYXBpQ3VyTW9udGhEYXRhOiB7fSwKICAgIGFwaVRhcmdldERhdGE6IHt9CiAgfSwKICBnZXR0ZXJzOiB7CiAgICBhcGlDdXJNb250aERhdGE6IGZ1bmN0aW9uIGFwaUN1ck1vbnRoRGF0YShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuYXBpQ3VyTW9udGhEYXRhOwogICAgfSwKICAgIGFwaVRhcmdldERhdGE6IGZ1bmN0aW9uIGFwaVRhcmdldERhdGEoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmFwaVRhcmdldERhdGE7CiAgICB9CiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldEFwaUN1ck1vbnRoRGF0YTogZnVuY3Rpb24gc2V0QXBpQ3VyTW9udGhEYXRhKHN0YXRlLCBkYXRhKSB7CiAgICAgIGNvbnNvbGUubG9nKGRhdGEpOwogICAgICBzdGF0ZS5hcGlDdXJNb250aERhdGEgPSBkYXRhOwogICAgfSwKICAgIHNldEFwaVRhcmdldERhdGE6IGZ1bmN0aW9uIHNldEFwaVRhcmdldERhdGEoc3RhdGUsIGRhdGEpIHsKICAgICAgY29uc29sZS5sb2coZGF0YSk7CiAgICAgIHN0YXRlLmFwaVRhcmdldERhdGEgPSBkYXRhOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgZmV0Y2hDdXJNb250aERhdGE6IGZ1bmN0aW9uIGZldGNoQ3VyTW9udGhEYXRhKF9yZWYpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAvL3N0YXJ0IHNwaW5uZXIKICAgICAgYnVzLiRlbWl0KCJzdGFydDpzcGlubmVyIik7CiAgICAgIHZhciB1c2VySW5mbyA9IHN0b3JlLnN0YXRlLnVzZXJJbmZvOwogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHNhbGVzQXBpLmdldEN1ck1vbnRoRGF0YSh1c2VySW5mbykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbW1pdCgic2V0QXBpQ3VyTW9udGhEYXRhIiwgcmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpOwogICAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24gKCkgewogICAgICAgICAgYnVzLiRlbWl0KCJlbmQ6c3Bpbm5lciIpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBmZXRjaFRhcmdldERhdGE6IGZ1bmN0aW9uIGZldGNoVGFyZ2V0RGF0YShfcmVmMikgewogICAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICBidXMuJGVtaXQoInN0YXJ0OnNwaW5uZXIiKTsKICAgICAgdmFyIHVzZXJJbmZvID0gc3RvcmUuc3RhdGUudXNlckluZm87CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgc2FsZXNBcGkuZ2V0VGFyZ2V0RGF0YSh1c2VySW5mbykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGNvbW1pdCgic2V0QXBpVGFyZ2V0RGF0YSIsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTsKICAgICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGJ1cy4kZW1pdCgiZW5kOnNwaW5uZXIiKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9IC8vIGFkZEV2ZW50KGN0eCwgeyBldmVudCB9KSB7CiAgICAvLyAJcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgIC8vIAkJYXhpb3MKICAgIC8vIAkJCS5wb3N0KCcvYXBwcy9jYWxlbmRhci9ldmVudHMnLCB7IGV2ZW50IH0pCiAgICAvLyAJCQkudGhlbihyZXNwb25zZSA9PiByZXNvbHZlKHJlc3BvbnNlKSkKICAgIC8vIAkJCS5jYXRjaChlcnJvciA9PiByZWplY3QoZXJyb3IpKTsKICAgIC8vIAl9KTsKICAgIC8vIH0sCiAgICAvLyB1cGRhdGVFdmVudChjdHgsIHsgZXZlbnQgfSkgewogICAgLy8gCXJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAvLyAJCWF4aW9zCiAgICAvLyAJCQkucG9zdChgL2FwcHMvY2FsZW5kYXIvZXZlbnRzLyR7ZXZlbnQuaWR9YCwgeyBldmVudCB9KQogICAgLy8gCQkJLnRoZW4ocmVzcG9uc2UgPT4gcmVzb2x2ZShyZXNwb25zZSkpCiAgICAvLyAJCQkuY2F0Y2goZXJyb3IgPT4gcmVqZWN0KGVycm9yKSk7CiAgICAvLyAJfSk7CiAgICAvLyB9LAogICAgLy8gcmVtb3ZlRXZlbnQoY3R4LCB7IGlkIH0pIHsKICAgIC8vIAlyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgLy8gCQlheGlvcwogICAgLy8gCQkJLmRlbGV0ZShgL2FwcHMvY2FsZW5kYXIvZXZlbnRzLyR7aWR9YCkKICAgIC8vIAkJCS50aGVuKHJlc3BvbnNlID0+IHJlc29sdmUocmVzcG9uc2UpKQogICAgLy8gCQkJLmNhdGNoKGVycm9yID0+IHJlamVjdChlcnJvcikpOwogICAgLy8gCX0pOwogICAgLy8gfSwKCiAgfQp9Ow=="},{"version":3,"sources":["D:/extrust/eboard/src/views/dashboard/sales/salesApiStoreModule.js"],"names":["bus","salesApi","store","namespaced","state","apiCurMonthData","apiTargetData","getters","mutations","setApiCurMonthData","data","console","log","setApiTargetData","actions","fetchCurMonthData","commit","$emit","userInfo","Promise","resolve","reject","getCurMonthData","then","response","catch","error","finally","fetchTargetData","getTargetData"],"mappings":";AAAA;AACA,OAAOA,GAAP,MAAgB,uBAAhB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EAAE,EADZ;AAELC,IAAAA,aAAa,EAAE;AAFV,GAFM;AAMbC,EAAAA,OAAO,EAAE;AACPF,IAAAA,eADO,2BACSD,KADT,EACgB;AACrB,aAAOA,KAAK,CAACC,eAAb;AACD,KAHM;AAIPC,IAAAA,aAJO,yBAIOF,KAJP,EAIc;AACnB,aAAOA,KAAK,CAACE,aAAb;AACD;AANM,GANI;AAcbE,EAAAA,SAAS,EAAE;AACTC,IAAAA,kBADS,8BACUL,KADV,EACiBM,IADjB,EACuB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,KAAK,CAACC,eAAN,GAAwBK,IAAxB;AACD,KAJQ;AAMTG,IAAAA,gBANS,4BAMQT,KANR,EAMeM,IANf,EAMqB;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,KAAK,CAACE,aAAN,GAAsBI,IAAtB;AACD;AATQ,GAdE;AAyBbI,EAAAA,OAAO,EAAE;AACPC,IAAAA,iBADO,mCACuB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AAC5B;AACAhB,MAAAA,GAAG,CAACiB,KAAJ,CAAU,eAAV;AACA,UAAMC,QAAQ,GAAGhB,KAAK,CAACE,KAAN,CAAYc,QAA7B;AAEA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCpB,QAAAA,QAAQ,CACLqB,eADH,CACmBJ,QADnB,EAEGK,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClBR,UAAAA,MAAM,CAAC,oBAAD,EAAuBQ,QAAQ,CAACd,IAAhC,CAAN;AACAU,UAAAA,OAAO,CAACI,QAAD,CAAP;AACD,SALH,EAMGC,KANH,CAMS,UAACC,KAAD;AAAA,iBAAWL,MAAM,CAACK,KAAD,CAAjB;AAAA,SANT,EAOGC,OAPH,CAOW,YAAM;AACb3B,UAAAA,GAAG,CAACiB,KAAJ,CAAU,aAAV;AACD,SATH;AAUD,OAXM,CAAP;AAYD,KAlBM;AAoBPW,IAAAA,eApBO,kCAoBqB;AAAA,UAAVZ,MAAU,SAAVA,MAAU;AAC1BhB,MAAAA,GAAG,CAACiB,KAAJ,CAAU,eAAV;AAEA,UAAMC,QAAQ,GAAGhB,KAAK,CAACE,KAAN,CAAYc,QAA7B;AAEA,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCpB,QAAAA,QAAQ,CACL4B,aADH,CACiBX,QADjB,EAEGK,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClBR,UAAAA,MAAM,CAAC,kBAAD,EAAqBQ,QAAQ,CAACd,IAA9B,CAAN;AACAU,UAAAA,OAAO,CAACI,QAAD,CAAP;AACD,SALH,EAMGC,KANH,CAMS,UAACC,KAAD;AAAA,iBAAWL,MAAM,CAACK,KAAD,CAAjB;AAAA,SANT,EAOGC,OAPH,CAOW,YAAM;AACb3B,UAAAA,GAAG,CAACiB,KAAJ,CAAU,aAAV;AACD,SATH;AAUD,OAXM,CAAP;AAYD,KArCM,CAuCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9DO;AAzBI,CAAf","sourcesContent":["//import axios from 'axios';\nimport bus from \"../../../utils/bus.js\";\nimport salesApi from \"../../../api/salesApi\";\nimport store from \"@/store\";\n\nexport default {\n  namespaced: true,\n  state: {\n    apiCurMonthData: {},\n    apiTargetData: {},\n  },\n  getters: {\n    apiCurMonthData(state) {\n      return state.apiCurMonthData;\n    },\n    apiTargetData(state) {\n      return state.apiTargetData;\n    },\n  },\n  mutations: {\n    setApiCurMonthData(state, data) {\n      console.log(data);\n      state.apiCurMonthData = data;\n    },\n\n    setApiTargetData(state, data) {\n      console.log(data);\n      state.apiTargetData = data;\n    },\n  },\n  actions: {\n    fetchCurMonthData({ commit }) {\n      //start spinner\n      bus.$emit(\"start:spinner\");\n      const userInfo = store.state.userInfo;\n\n      return new Promise((resolve, reject) => {\n        salesApi\n          .getCurMonthData(userInfo)\n          .then((response) => {\n            commit(\"setApiCurMonthData\", response.data);\n            resolve(response);\n          })\n          .catch((error) => reject(error))\n          .finally(() => {\n            bus.$emit(\"end:spinner\");\n          });\n      });\n    },\n\n    fetchTargetData({ commit }) {\n      bus.$emit(\"start:spinner\");\n\n      const userInfo = store.state.userInfo;\n\n      return new Promise((resolve, reject) => {\n        salesApi\n          .getTargetData(userInfo)\n          .then((response) => {\n            commit(\"setApiTargetData\", response.data);\n            resolve(response);\n          })\n          .catch((error) => reject(error))\n          .finally(() => {\n            bus.$emit(\"end:spinner\");\n          });\n      });\n    },\n\n    // addEvent(ctx, { event }) {\n    // \treturn new Promise((resolve, reject) => {\n    // \t\taxios\n    // \t\t\t.post('/apps/calendar/events', { event })\n    // \t\t\t.then(response => resolve(response))\n    // \t\t\t.catch(error => reject(error));\n    // \t});\n    // },\n    // updateEvent(ctx, { event }) {\n    // \treturn new Promise((resolve, reject) => {\n    // \t\taxios\n    // \t\t\t.post(`/apps/calendar/events/${event.id}`, { event })\n    // \t\t\t.then(response => resolve(response))\n    // \t\t\t.catch(error => reject(error));\n    // \t});\n    // },\n    // removeEvent(ctx, { id }) {\n    // \treturn new Promise((resolve, reject) => {\n    // \t\taxios\n    // \t\t\t.delete(`/apps/calendar/events/${id}`)\n    // \t\t\t.then(response => resolve(response))\n    // \t\t\t.catch(error => reject(error));\n    // \t});\n    // },\n  },\n};\n"]}]}