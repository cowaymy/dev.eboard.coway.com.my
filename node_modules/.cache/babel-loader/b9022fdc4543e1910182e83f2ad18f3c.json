{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingsNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingsNotification.vue","mtime":1709875360825},{"path":"D:\\extrust\\eboard\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AccountSettingsNotification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-card flat class=\"pa-3\">\n    <v-form class=\"multi-col-validation\" @submit.prevent=\"submitForm\">\n\n      <v-card-text class=\"pt-5\">\n        <v-row class=\"fill-height \">          \n          <v-col cols=\"12\">\n            <v-text-field\n              v-model=\"subject\"\n              label=\"Subject\"\n              dense\n              hide-details\n              outlined\n            ></v-text-field>\n          </v-col>\n\n          <v-col cols=\"12\">\n            <div class=\"example\">\n                <quill-editor\n                  ref=\"quillio\"\n                  class=\"editor\"\n                  v-model=\"contents\"\n                  :options=\"editorOption\"\n                  placeholder= \"Insert text here ...\"\n                  @blur=\"onEditorBlur($event)\"\n                  @focus=\"onEditorFocus($event)\"\n                  @ready=\"onEditorReady($event)\"\n                />\n              </div>\n            </v-col>\n            <v-divider></v-divider>\n          <v-col cols=\"12\" md=\"6\">\n          <div>\n            <v-dialog\n              ref=\"dialog\"\n              v-model=\"smodal\"\n              :return-value.sync=\"date\"\n              persistent\n              width=\"290px\"\n            >\n              <template v-slot:activator=\"{ on, attrs }\">\n                <v-text-field\n                  v-model=\"date\"\n                  label=\"Start Date\"\n                  :prepend-icon=\"icons.mdiCalendar\"\n                  readonly\n                  v-bind=\"attrs\"\n                  v-on=\"on\"\n                ></v-text-field>\n              </template>\n\n              <v-date-picker v-model=\"date\" scrollable color=\"primary\">\n                <v-btn text color=\"primary\" @click=\"smodal = false\">\n                  Cancel\n                </v-btn>\n                <v-btn text color=\"primary\" @click=\"$refs.dialog.save(date)\">\n                  OK\n                </v-btn>\n              </v-date-picker>\n            </v-dialog>\n          </div>\n        </v-col>\n     \n        <v-col cols=\"12\" md=\"6\">\n          <v-dialog\n            ref=\"dialog2\"\n            v-model=\"emodal\"\n            :return-value.sync=\"enddate\"\n            persistent\n            width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"enddate\"\n                label=\"End Date\"\n                :prepend-icon=\"icons.mdiCalendar\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n            <v-date-picker v-model=\"enddate\" scrollable color=\"primary\">\n              <v-btn text color=\"primary\" @click=\"emodal = false\">\n                Cancel\n              </v-btn>\n              <v-btn text color=\"primary\" @click=\"$refs.dialog2.save(enddate)\">\n                OK\n              </v-btn>\n            </v-date-picker>\n          </v-dialog>\n        </v-col>\n       \n        <v-col cols=\"12\" md=\"6\">\n          <label class=\"text-1xl font-weight-semibold\">Target </label>\n          <v-treeview\n            v-model=\"selection\"\n            :items=\"items\"\n            :selection-type=\"selectionType\"\n            selectable\n            return-object\n          ></v-treeview>\n        </v-col>\n        <v-divider vertical></v-divider>\n\n        <v-col cols=\"12\" md=\"6\">\n          <template v-if=\"!selection.length\"> No nodes selected. </template>\n          <template v-else>\n            <div>\n              <v-chip-group\n                column\n                active-class=\"primary accent-4  font-weight-semibold\"\n              >\n                <v-chip v-for=\"node in selection\" :key=\"node.id\">\n                  {{ node.name }}\n                </v-chip>\n              </v-chip-group>\n            </div>\n          </template>\n        </v-col>\n        <v-divider></v-divider>\n\n        <v-col cols=\"12\" md=\"6\">\n          <label class=\"text-1xl font-weight-semibold\">Use </label>\n          <v-switch\n            v-model=\"useYn\"\n            :label=\"`${useYn.toString()}`\"\n            hide-details\n          ></v-switch>\n        </v-col>\n\n\n        <v-col cols=\"12\" md=\"6\">\n          <label class=\"text-1xl font-weight-semibold\">Notification Type</label>\n          <v-radio-group v-model=\"nType\" mandatory row>\n            <v-radio label=\"Emergency\" value=\"E\"></v-radio>\n            <v-radio label=\"Normal\" value=\"N\"></v-radio>\n          </v-radio-group>\n        </v-col>\n        <v-col cols=\"12\">\n          <div>\n            <v-file-input\n            multiple\n            label=\"File Input\"\n            v-model=\"selectedFile\"\n            @change=\"fileSelected\"\n          ></v-file-input>\n            <p class=\"text-sm mt-5\">Allowed JPG, GIF or PNG. Max size of 800K</p>\n          </div>\n        </v-col>\n      </v-row>  \n      </v-card-text>\n      <v-card-actions>\n        <v-btn color=\"primary\" type=\"submit\" :disabled=\"btIsActive\">\n            Submit\n        </v-btn>\n      </v-card-actions>\n    </v-form>\n  </v-card>\n</template>\n\n<script>\nimport { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar } from \"@mdi/js\";\n\nimport bus from \"../../utils/bus\";\nimport utils from \"../../utils/utils\";\nimport comApi from \"../../api/index\";\n\n\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\n\n// import { quillEditor } from 'vue-quill-editor'\n\nimport { quillEditor } from 'vue-quill-editor';\n\nexport default {\n  props: {\n    notificationData: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  components: {\n    quillEditor\n  },\n\n  data(props) {\n    const optionsLocale = JSON.parse(JSON.stringify(props.notificationData));\n    const useYn = true;\n\n    const items = [\n      {\n        id: \"ALL\",\n        name: \"ALL\",\n        children: [\n          {\n            id: \"SAL\",\n            name: \"SALES\",\n            children: [\n              { id: \"GM\", name: \"GM\" },\n              { id: \"SM\", name: \"SM\" },\n              { id: \"HM\", name: \"HM\" },\n              { id: \"HP\", name: \"HP\" },\n            ],\n          },\n          {\n            id: \"COD\",\n            name: \"CODY\",\n            children: [\n              { id: \"GCM\", name: \"GCM\" },\n              { id: \"SCM\", name: \"SCM\" },\n              { id: \"CM\", name: \"CM\" },\n              { id: \"CODY\", name: \"CODY\" },\n            ],\n          },\n        ],\n      },\n    ];\n\n    const date = new Date().toISOString().substr(0, 10);\n    const enddate = new Date().toISOString().substr(0, 10);\n\n    const smodal = \"\";\n    const emodal = \"\";\n    const nType = \"Emergency\";\n    const subject = \"\";\n    return {\n      selectionType: \"leaf\",\n      selection: [],\n      items,\n      optionsLocale,\n      date,\n      enddate,\n      smodal,\n      emodal,\n      nType,\n      useYn,\n      subject,\n      btIsActive: false,\n      selectedFile : null,\n      icons: { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar },\n      contents: '',\n      editorOption: {\n          modules: {\n            toolbar: [\n              ['bold', 'italic', 'underline', 'strike'],\n              ['blockquote', 'code-block'],\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],\n              [{ 'indent': '-1' }, { 'indent': '+1' }],\n              [{ 'direction': 'rtl' }],\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n              [{ 'font': [] }],\n              [{ 'color': [] }, { 'background': [] }],\n              [{ 'align': [] }],\n              ['link', 'image', 'video']\n            ]\n        }  \n      }\n    };\n  },\n\n  methods: {\n    // imageButtonClickHandler() {\n\n    //   console.log('imageButtonClickHandler ====>')\n    //   // Add a file input element to the document, then click it (open file).\n    //   const input = document.createElement('input');\n    //   input.setAttribute('type', 'file');\n    //   input.click();\n\n    //   // Once file is selected.\n    //   input.onchange = () => {\n    //       const file = input.files[0];\n\n    //       // Validate file type is an image.\n    //       if (/^image\\//.test(file.type)) {\n\n    //           // Create form.\n    //           const formData = new FormData();\n    //           formData.append('image', file);\n              \n              \n    //           // Upload image to AWS via app route handler.\n    //           comApi.fileUpLoad(formData)\n    //           .then(function (response) {\n\n    //               // Set returned image URL to variable.\n    //               const url = response.data;\n\n    //               // Get the current cursor position.\n    //               const range = this.$refs.quillio.quill.getSelection();\n\n    //               // Insert the image via URL where the cursor is.\n    //               this.$refs.quillio.quill.insertEmbed(range.index, 'image', url);\n\n    //               // Move the cursor past the image.\n    //               this.$refs.quillio.quill.setSelection(range.index + 1);\n\n    //           })\n    //           .catch(function (error) {\n    //               console.log(error);\n    //           });\n    //       }\n\n    //       // Not an image.\n    //       else {\n    //           console.warn('You could only upload images.');\n    //       }\n    //   };\n    // },\n    async submitForm() {\n      try {\n        let target = \"\";\n        this.selection.forEach(function (v) {\n          console.log(v);\n          target += \"^\" + v.id;\n        });\n\n        const notiObj = {\n          SUBJECT: this.subject,\n          CONTENTS:   utils.escapeHtml( this.contents),\n          STD_DATE: this.date,\n          END_DATE: this.enddate,\n          TYPE: this.nType,\n          STATUS: this.useYn ? \"A\" : \"P\",\n          TARGET: target,\n          CRD_USER : this.$store.state.userInfo.userName\n\n        };\n        //start spinner\n        bus.$emit(\"start:spinner\");\n\n        const result = await comApi.saveNotification(notiObj);\n\n        if (result.data.success) {\n          this.$toasted\n            .success(\"It has been processed\", {\n              icon: \"check\",\n              position: \"bottom-right\",\n              action: {\n                text: \"Close\",\n                onClick: (e, toastObject) => {\n                  this.btIsActive = true;\n                  toastObject.goAway(0);\n                },\n              },\n            })\n            .goAway(2500);\n\n          this.btIsActive = true;\n        } else {\n          this.$toasted.show(result.message);\n        }\n      } catch (error) {\n        console.log(\"=========>\" + error);\n        bus.$emit(\"end:spinner\");\n      } finally {\n        bus.$emit(\"end:spinner\");\n      }\n    },\n\n    onEditorBlur(quill) {\n        //console.log('editor blur!', quill)\n      },\n      onEditorFocus(quill) {\n       // console.log('editor focus!', quill)\n      },\n      onEditorReady(quill) {\n       // quill.getModule('toolbar').addHandler('image', this.imageButtonClickHandler);\n        console.log('editor ready!', quill)\n      },\n      onEditorChange({ quill, html, text }) {\n       // console.log('editor change!', quill, html, text)\n        this.content = html\n      },\n\n      fileSelected(file) {\n        console.log('선택된 파일:', file);\n        // 선택된 파일을 여기서 처리할 수 있습니다.\n        this.uploadFile(file);\n      },\n      \n    async uploadFile(vFile) {\n      let form = new FormData();\n      form.append(\"name\", this.$store.state.userName);\n      form.append(\"files\", vFile);\n\n\n\n\n            \n      fetch('http://localhost:3000/apps/api/upload/mFileUpload', {\n          method: 'POST',\n          body: form,\n      })\n      .then((response) => { \n          console.log(response);\n      })\n      .catch((error) => {\n          console.error(error);\n      });\n\n\n\n      // //start spinner\n      // bus.$emit(\"start:spinner\");\n      // const result = await comApi.mfileUpLoad(form);\n\n      // if (result.data.success) {\n      //   this.$toasted\n      //     .success(\"It has been processed\", {\n      //       icon: \"check\",\n      //       position: \"bottom-right\",\n      //       action: {\n      //         text: \"Close\",\n      //         onClick: (e, toastObject) => {\n      //           toastObject.goAway(0);\n      //         },\n      //       },\n      //     })\n      //     .goAway(2500);\n      // }\n      // bus.$emit(\"end:spinner\");\n      // console.log(result);\n    },\n  }, \n\n  computed: {\n      editor() {\n        return this.$refs.quillio.quill\n      }\n    },\n    mounted() {\n      console.log('this is current quill instance object', this.editor)\n    }\n\n};\n</script>\n<style lang=\"scss\" scoped>\n  .example {\n    display: flex;\n    flex-direction: column;\n    height: 23rem;\n    .editor {\n      height: 15rem;\n      margin-bottom: 0;\n    }\n  \n  }\n</style>"],"sourceRoot":"src/views/account-settings"}]}