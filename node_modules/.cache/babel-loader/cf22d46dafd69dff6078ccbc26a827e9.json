{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\performance\\netSalesReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\performance\\netSalesReport.vue","mtime":1710479565336},{"path":"D:\\extrust\\eboard\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFZ1ZUFwZXhDaGFydHMgZnJvbSAidnVlLWFwZXhjaGFydHMiOwppbXBvcnQgRGFzaGJvYXJkQ2FyZFNhbGVzUmFua2luZ2J5R00gZnJvbSAiLi4vZGFzaGJvYXJkL3NhbGVzL0Rhc2hib2FyZENhcmRTYWxlc1JhbmtpbmdieUdNLnZ1ZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBhcGV4Y2hhcnQ6IFZ1ZUFwZXhDaGFydHMsCiAgICBEYXNoYm9hcmRDYXJkU2FsZXNSYW5raW5nYnlHTTogRGFzaGJvYXJkQ2FyZFNhbGVzUmFua2luZ2J5R00KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydERhdGE6IFtdLAogICAgICBjaGFydE9wdGlvbnM6IHsKICAgICAgICBjaGFydDogewogICAgICAgICAgdHlwZTogJ2JhcicsCiAgICAgICAgICBoZWlnaHQ6IDM1MCwKICAgICAgICAgIHN0YWNrZWQ6IGZhbHNlLAogICAgICAgICAgLy8g66mA7YuwIOunieuMgCDssKjtirjrpbwg7Iqk7YOd7Jy866GcIOyEpOygle2VqeuLiOuLpC4KICAgICAgICAgIGFuaW1hdGlvbnM6IHsKICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgZWFzaW5nOiAnZWFzZWlub3V0JywKICAgICAgICAgICAgc3BlZWQ6IDgwMCwKICAgICAgICAgICAgYW5pbWF0ZUdyYWR1YWxseTogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgZGVsYXk6IDI1MAogICAgICAgICAgICB9LAogICAgICAgICAgICBkeW5hbWljQW5pbWF0aW9uOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICBzcGVlZDogMzUwCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBldmVudHM6IHsKICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uIGNsaWNrKGV2ZW50LCBjaGFydENvbnRleHQsIGNvbmZpZykgewogICAgICAgICAgICAgIC8vIFRoZSBsYXN0IHBhcmFtZXRlciBjb25maWcgY29udGFpbnMgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBsaWtlIGBzZXJpZXNJbmRleGAgYW5kIGBkYXRhUG9pbnRJbmRleGAgZm9yIGNhcnRlc2lhbiBjaGFydHMKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhldmVudCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHBsb3RPcHRpb25zOiB7CiAgICAgICAgICBiYXI6IHsKICAgICAgICAgICAgaG9yaXpvbnRhbDogZmFsc2UKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHhheGlzOiB7CiAgICAgICAgICBjYXRlZ29yaWVzOiBbJ1JFTlRBTCcsICdPVVRSSUdIVCddIC8vIFjstpUg7Lm07YWM6rOg66asCgogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBwb3NpdGlvbjogJ3RvcCcKICAgICAgICB9LAogICAgICAgIGZpbGw6IHsKICAgICAgICAgIG9wYWNpdHk6IDEwCiAgICAgICAgfQogICAgICB9LAogICAgICBjaGFydE9wdGlvbnMyOiB7CiAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgaGVpZ2h0OiAzNTAsCiAgICAgICAgICBzdGFja2VkOiBmYWxzZSwKICAgICAgICAgIC8vIOupgO2LsCDrp4nrjIAg7LCo7Yq466W8IOyKpO2DneycvOuhnCDshKTsoJXtlanri4jri6QuCiAgICAgICAgICBhbmltYXRpb25zOiB7CiAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgIGVhc2luZzogJ2Vhc2Vpbm91dCcsCiAgICAgICAgICAgIHNwZWVkOiA4MDAsCiAgICAgICAgICAgIGFuaW1hdGVHcmFkdWFsbHk6IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgIGRlbGF5OiAyNTAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZHluYW1pY0FuaW1hdGlvbjogewogICAgICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICAgICAgc3BlZWQ6IDM1MAogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZXZlbnRzOiB7CiAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiBjbGljayhldmVudCwgY2hhcnRDb250ZXh0LCBjb25maWcpIHsKICAgICAgICAgICAgICAvLyBUaGUgbGFzdCBwYXJhbWV0ZXIgY29uZmlnIGNvbnRhaW5zIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gbGlrZSBgc2VyaWVzSW5kZXhgIGFuZCBgZGF0YVBvaW50SW5kZXhgIGZvciBjYXJ0ZXNpYW4gY2hhcnRzCiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBwbG90T3B0aW9uczogewogICAgICAgICAgYmFyOiB7CiAgICAgICAgICAgIGhvcml6b250YWw6IGZhbHNlCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB4YXhpczogewogICAgICAgICAgY2F0ZWdvcmllczogdGhpcy5jYXRlZ29yaWVzKCkKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgcG9zaXRpb246ICd0b3AnCiAgICAgICAgfSwKICAgICAgICBmaWxsOiB7CiAgICAgICAgICBvcGFjaXR5OiAxMAogICAgICAgIH0KICAgICAgfSwKICAgICAgc2VsZWN0ZWRCYXJJbmRleDogbnVsbCwKICAgICAgLy8g7YG066at65CcIOunieuMgCDqt7jrnpjtlITsnZgg7J24642x7Iqk66W8IOyggOyepe2VmOuKlCDrs4DsiJgKICAgICAgY2hhcnRTZXJpZXM6IFt7CiAgICAgICAgbmFtZTogJ+uLueyblCBOZXRTYWxlcycsCiAgICAgICAgZGF0YTogWzIwLCAzXSAvLyDssqsg67KI7Ke4IOyLnOumrOymiCDrjbDsnbTthLAKCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn7KCE7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMTAsIDJdIC8vIOyyqyDrsojsp7gg7Iuc66as7KaIIOuNsOydtO2EsAoKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITrhYTrj5nsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IFs0MCwgMV0gLy8g7LKrIOuyiOynuCDsi5zrpqzspogg642w7J207YSwCgogICAgICB9XQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjaGFydFNlcmllczI6IGZ1bmN0aW9uIGNoYXJ0U2VyaWVzMigpIHsKICAgICAgcmV0dXJuIHRoaXMuY2hhcnREYXRhOwogICAgfSwKICAgIGxpa2VzU29tZVRhcmdldDogZnVuY3Rpb24gbGlrZXNTb21lVGFyZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZEZpbHRlci5sZW5ndGggPiAwICYmICF0aGlzLmNsaWNrQWxsVGFyZ2V0OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY2F0ZWdvcmllczogZnVuY3Rpb24gY2F0ZWdvcmllcygpIHsKICAgICAgcmV0dXJuIFsnR00xJywgJ0dNMicsICdHTTMnLCAnR000JywgJ0dNNScsICdHTTYnLCAnR003JywgJ0dNOCcsICdHTTknLCAnR00xMCcsICdHTTExJywgJ0dNMTInLCAnR00xMycsICdHTTE0JywgJ0dNMTUnLCAnR00xNiddOwogICAgfSwKICAgIGhhbmRsZUNoYXJ0Q2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNoYXJ0Q2xpY2soZXZlbnQsIGNoYXJ0Q29udGV4dCwgY29uZmlnKSB7CiAgICAgIHZhciBzZXJpZXNJbmRleCA9IGNvbmZpZy5zZXJpZXNJbmRleDsKICAgICAgdmFyIGRhdGFQb2ludEluZGV4ID0gY29uZmlnLmRhdGFQb2ludEluZGV4OyAvLyDtgbTrpq3rkJwg66eJ64yAIOq3uOuemO2UhOydmCDsnbjrjbHsiqTrpbwg7KCA7J6lCgogICAgICB0aGlzLnNlbGVjdGVkQmFySW5kZXggPSBkYXRhUG9pbnRJbmRleDsKICAgICAgY29uc29sZS5sb2coc2VyaWVzSW5kZXgpOwogICAgICBjb25zb2xlLmxvZyhjb25maWcpOwoKICAgICAgc3dpdGNoIChzZXJpZXNJbmRleCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIHRoaXMuc2FtcGxlRGF0YV8xKCk7CiAgICAgICAgICBicmVhazsKCiAgICAgICAgY2FzZSAxOgogICAgICAgICAgdGhpcy5zYW1wbGVEYXRhXzIoKTsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlIDI6CiAgICAgICAgICB0aGlzLnNhbXBsZURhdGFfMygpOwogICAgICAgICAgYnJlYWs7CgogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgfSwKICAgIGdldEJhckNvbG9yOiBmdW5jdGlvbiBnZXRCYXJDb2xvcihpbmRleCkgewogICAgICBjb25zb2xlLmxvZyhpbmRleCk7IC8vIO2BtOumreuQnCDrp4nrjIAg6re4656Y7ZSE7J2YIOyduOuNseyKpOyZgCDtmITsnqwg66eJ64yAIOq3uOuemO2UhOydmCDsnbjrjbHsiqTqsIAg6rCZ7Jy866m0IO2KueyglSDsg4nsg4HsnLzroZwg67OA6rK9CgogICAgICByZXR1cm4gaW5kZXggPT09IHRoaXMuc2VsZWN0ZWRCYXJJbmRleCA/ICcjRkY1NzMzJyA6IG51bGw7CiAgICB9LAogICAgc2FtcGxlRGF0YV8xOiBmdW5jdGlvbiBzYW1wbGVEYXRhXzEoKSB7CiAgICAgIHRoaXMuY2hhcnREYXRhID0gW3sKICAgICAgICBuYW1lOiAn64u57JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMzAsIDQwLCA0NSwgNzAsIDgwLCA5MCwgMTAwLCAzMCwgNDAsIDQ1LCA3MCwgODAsIDkwLCAxMDAsIDAsIDMwXSAvLyDssqsg67KI7Ke4IOyLnOumrOymiCDrjbDsnbTthLAKCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn7KCE7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMjAsIDEwLCAzNSwgOTAsIDEwLCAyMCwgMTM5LCA0MCwgMjAsIDE1LCA3MCwgODAsIDkwLCA3MCwgMTAsIDMwXSAvLyDrkZAg67KI7Ke4IOyLnOumrOymiCDrjbDsnbTthLAKCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn7KCE64WE64+Z7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMzAsIDEwLCA0NSwgMzAsIDYwLCA5MCwgMTAwLCAzMCwgOTAsIDQ1LCAxMCwgODAsIDMwLCAyMCwgMCwgMzBdIC8vIOuRkCDrsojsp7gg7Iuc66as7KaIIOuNsOydtO2EsAoKICAgICAgfSAvLyDtlYTsmpTtlZwg66eM7YG8IOyLnOumrOymiCDstpTqsIAg6rCA64qlCiAgICAgIF07CiAgICB9LAogICAgc2FtcGxlRGF0YV8yOiBmdW5jdGlvbiBzYW1wbGVEYXRhXzIoKSB7CiAgICAgIHRoaXMuY2hhcnREYXRhID0gW3sKICAgICAgICBuYW1lOiAn64u57JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMzAsIDQwLCA0NSwgNzAsIDgwLCA5MCwgMTAwLCAzMCwgNDAsIDQ1LCA3MCwgODAsIDkwLCAxMDAsIDAsIDMwXSAvLyDssqsg67KI7Ke4IOyLnOumrOymiCDrjbDsnbTthLAKCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn7KCE7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMzAsIDQwLCA0NSwgNzAsIDgwLCA5MCwgMTAwLCAzMCwgNDAsIDQ1LCA3MCwgODAsIDkwLCAxMDAsIDAsIDMwXSAvLyDrkZAg67KI7Ke4IOyLnOumrOymiCDrjbDsnbTthLAKCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn7KCE64WE64+Z7JuUIE5ldFNhbGVzJywKICAgICAgICBkYXRhOiBbMzAsIDQwLCA0NSwgMjAsIDEzMCwgMTAsIDE0MCwgMTAsIDkwLCAzNSwgMjAsIDMwLCA5MCwgMzAsIDEwLCA5MF0gLy8g65GQIOuyiOynuCDsi5zrpqzspogg642w7J207YSwCgogICAgICB9IC8vIO2VhOyalO2VnCDrp4ztgbwg7Iuc66as7KaIIOy2lOqwgCDqsIDriqUKICAgICAgXTsKICAgIH0sCiAgICBzYW1wbGVEYXRhXzM6IGZ1bmN0aW9uIHNhbXBsZURhdGFfMygpIHsKICAgICAgdGhpcy5jaGFydERhdGEgPSBbewogICAgICAgIG5hbWU6ICfri7nsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IFszMCwgMTAsIDQ1LCAzMCwgNjAsIDkwLCAxMDAsIDMwLCA5MCwgNDUsIDEwLCA4MCwgMzAsIDIwLCAwLCAzMF0gLy8vIOyyqyDrsojsp7gg7Iuc66as7KaIIOuNsOydtO2EsAoKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IFsyMCwgMTAsIDM1LCA5MCwgMTAsIDIwLCAxMzksIDQwLCAyMCwgMTUsIDcwLCA4MCwgOTAsIDcwLCAxMCwgMzBdIC8vIOuRkCDrsojsp7gg7Iuc66as7KaIIOuNsOydtO2EsAoKICAgICAgfSwgewogICAgICAgIG5hbWU6ICfsoITrhYTrj5nsm5QgTmV0U2FsZXMnLAogICAgICAgIGRhdGE6IFszMCwgNDAsIDQ1LCA3MCwgODAsIDkwLCAxMDAsIDMwLCA0MCwgNDUsIDcwLCA4MCwgOTAsIDEwMCwgMCwgMzBdIC8vIOuRkCDrsojsp7gg7Iuc66as7KaIIOuNsOydtO2EsAoKICAgICAgfSAvLyDtlYTsmpTtlZwg66eM7YG8IOyLnOumrOymiCDstpTqsIAg6rCA64qlCiAgICAgIF07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["netSalesReport.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"4\" class=\"align-center\">\r\n            <v-card  class=\"scroll-card\">\r\n                <v-card-text >\r\n                    <apexchart   ref=\"chart\" type=\"bar\" :options=\"chartOptions\" :series=\"chartSeries\" height=\"350\"  @click=\"handleChartClick\"/>\r\n                </v-card-text >\r\n            </v-card>\r\n        \r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"8\" >\r\n            <v-card class=\"scroll-card\">\r\n                <v-card-text >\r\n                        <apexchart ref=\"chart2\" type=\"bar\" :options=\"chartOptions2\" :series=\"chartSeries2\" height=\"350\"  @click=\"handleChartClick\"/>\r\n\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"4\">\r\n            <DashboardCardSalesRankingbyGM />\r\n        </v-col>\r\n    </v-row>\r\n  </template>\r\n  \r\n  <script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport DashboardCardSalesRankingbyGM from \"../dashboard/sales/DashboardCardSalesRankingbyGM.vue\";\r\n  export default {\r\n    components: {\r\n      apexchart: VueApexCharts,DashboardCardSalesRankingbyGM\r\n    },\r\n    data() {\r\n      return {\r\n        chartData :[],\r\n        chartOptions: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 800,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 250\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350\r\n                }\r\n            },\r\n            events: {\r\n                click: function(event, chartContext, config) {\r\n                    // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                    console.log(event);\r\n                }\r\n            }\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: ['RENTAL','OUTRIGHT'], // X축 카테고리\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          fill: {\r\n            opacity: 10,\r\n          },\r\n         \r\n        },\r\n\r\n        chartOptions2: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 800,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 250\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350\r\n                }\r\n            },\r\n            events: {\r\n                click: function(event, chartContext, config) {\r\n                    // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                    console.log(event);\r\n                }\r\n            }\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: this.categories()\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          fill: {\r\n            opacity: 10,\r\n          },\r\n        },\r\n\r\n        selectedBarIndex: null, // 클릭된 막대 그래프의 인덱스를 저장하는 변수\r\n        chartSeries: [\r\n          {\r\n            name: '당월 NetSales',\r\n            data: [20, 3], // 첫 번째 시리즈 데이터\r\n          },\r\n          {\r\n            name: '전월 NetSales',\r\n            data: [10, 2], // 첫 번째 시리즈 데이터\r\n          },\r\n          {\r\n            name: '전년동월 NetSales',\r\n            data: [40, 1], // 첫 번째 시리즈 데이터\r\n          }\r\n        ],\r\n      \r\n      };\r\n    },\r\n\r\n\r\n    computed: {\r\n        chartSeries2() {\r\n             return this.chartData;\r\n        },\r\n        likesSomeTarget() {\r\n             return this.selectedFilter.length > 0 && !this.clickAllTarget;\r\n        },\r\n    \r\n    },\r\n    \r\n    methods:{\r\n        categories() {\r\n            return ['GM1','GM2','GM3','GM4','GM5','GM6','GM7','GM8','GM9','GM10','GM11','GM12','GM13','GM14','GM15','GM16']\r\n        },\r\n        handleChartClick(event, chartContext, config) {\r\n            const seriesIndex = config.seriesIndex;\r\n            const dataPointIndex = config.dataPointIndex;\r\n            // 클릭된 막대 그래프의 인덱스를 저장\r\n            this.selectedBarIndex = dataPointIndex;\r\n\r\n            console.log(seriesIndex)\r\n            console.log(config)\r\n\r\n            switch (seriesIndex) {\r\n                case 0:\r\n                    this.sampleData_1();\r\n                    break;\r\n                case 1:\r\n                    this.sampleData_2();\r\n                    break;\r\n                case 2:\r\n                    this.sampleData_3();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        },\r\n        getBarColor(index) {\r\n            console.log(index)\r\n            // 클릭된 막대 그래프의 인덱스와 현재 막대 그래프의 인덱스가 같으면 특정 색상으로 변경\r\n            return index === this.selectedBarIndex ? '#FF5733' : null;\r\n        },\r\n\r\n        sampleData_1(){\r\n            this.chartData= [\r\n                    {\r\n                        name: '당월 NetSales',\r\n                        data: [30, 40, 45,70,80,90 ,100,30, 40, 45,70,80,90 ,100,0,30], // 첫 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전월 NetSales',\r\n                        data: [20, 10, 35,90,10,20 ,139,40, 20, 15,70,80,90 ,70,10,30], // 두 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전년동월 NetSales',\r\n                        data: [30, 10, 45,30,60,90 ,100,30, 90, 45,10,80,30 ,20,0,30], // 두 번째 시리즈 데이터\r\n                    }\r\n                    // 필요한 만큼 시리즈 추가 가능\r\n            ]\r\n        },\r\n        \r\n        sampleData_2(){\r\n            this.chartData= [\r\n                    {\r\n                        name: '당월 NetSales',\r\n                        data: [30, 40, 45,70,80,90 ,100,30, 40, 45,70,80,90 ,100,0,30], // 첫 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전월 NetSales',\r\n                        data: [30, 40, 45,70,80,90 ,100,30, 40, 45,70,80,90 ,100,0,30], // 두 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전년동월 NetSales',\r\n                        data: [30, 40, 45,20,130,10 ,140,10, 90, 35,20,30,90 ,30,10,90], // 두 번째 시리즈 데이터\r\n                    }\r\n                    // 필요한 만큼 시리즈 추가 가능\r\n            ]\r\n        },\r\n        sampleData_3(){\r\n            this.chartData= [\r\n                    {\r\n                        name: '당월 NetSales',\r\n                        data: [30, 10, 45,30,60,90 ,100,30, 90, 45,10,80,30 ,20,0,30],  /// 첫 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전월 NetSales',\r\n                        data: [20, 10, 35,90,10,20 ,139,40, 20, 15,70,80,90 ,70,10,30], // 두 번째 시리즈 데이터\r\n                    },\r\n                    {\r\n                        name: '전년동월 NetSales',\r\n                        data: [30, 40, 45,70,80,90 ,100,30, 40, 45,70,80,90 ,100,0,30], // 두 번째 시리즈 데이터\r\n                    }\r\n                    // 필요한 만큼 시리즈 추가 가능\r\n            ]\r\n        }\r\n    }\r\n\r\n    \r\n  };\r\n  </script>\r\n  \r\n\r\n  <style scoped>\r\n    .scroll-card {\r\n        overflow-x: auto;\r\n    }\r\n  </style>"],"sourceRoot":"src/views/performance"}]}