{"remainingRequest":"D:\\extrust\\eboard.coway.com.my\\node_modules\\babel-loader\\lib\\index.js!D:\\extrust\\eboard.coway.com.my\\node_modules\\vuetify\\lib\\components\\VOtpInput\\VOtpInput.js","dependencies":[{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vuetify\\lib\\components\\VOtpInput\\VOtpInput.js","mtime":1689230701870},{"path":"D:\\extrust\\eboard.coway.com.my\\babel.config.js","mtime":1707983434823},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VOtpInput/VOtpInput.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../VTextField/VTextField.sass'\nimport './VOtpInput.sass'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VInput,\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    input: HTMLInputElement[]\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-otp-input',\n\n  directives: {\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    length: {\n      type: [Number, String],\n      default: 6,\n    },\n    type: {\n      type: String,\n      default: 'text',\n    },\n    plain: Boolean,\n  },\n\n  data: () => ({\n    badInput: false,\n    initialValue: null,\n    isBooted: false,\n    otp: [] as string[],\n  }),\n\n  computed: {\n    outlined (): Boolean {\n      return !this.plain\n    },\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        ...VTextField.options.computed.classes.call(this),\n        'v-otp-input--plain': this.plain,\n      }\n    },\n    isDirty (): boolean {\n      return VInput.options.computed.isDirty.call(this) || this.badInput\n    },\n  },\n\n  watch: {\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    this.otp = this.internalValue?.split('') || []\n  },\n\n  mounted () {\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus (e: Event, otpIdx: number) {\n      this.onFocus(e, otpIdx || 0)\n    },\n    genInputSlot (otpIdx: number) {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: { height: convertToUnit(this.height) },\n        on: {\n          click: () => this.onClick(otpIdx),\n          mousedown: (e: Event) => this.onMouseDown(e, otpIdx),\n          mouseup: (e: Event) => this.onMouseUp(e, otpIdx),\n        },\n      }), [this.genDefaultSlot(otpIdx)])\n    },\n    genControl (otpIdx: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control',\n      }, [\n        this.genInputSlot(otpIdx),\n      ])\n    },\n    genDefaultSlot (otpIdx: number) {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(otpIdx),\n      ]\n    },\n    genContent () {\n      return Array.from({ length: +this.length }, (_, i) => {\n        return this.$createElement('div', this.setTextColor(this.validationState, {\n          staticClass: 'v-input',\n          class: this.classes,\n        }), [this.genControl(i)])\n      })\n    },\n    genFieldset () {\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLegend () {\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: '0px',\n        },\n      }, [span])\n    },\n    genInput (otpIdx: number) {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.otp[otpIdx],\n          min: this.type === 'number' ? 0 : null,\n        },\n        attrs: {\n          ...this.attrs$,\n          disabled: this.isDisabled,\n          readonly: this.isReadonly,\n          type: this.type,\n          id: `${this.computedId}--${otpIdx}`,\n          class: `otp-field-box--${otpIdx}`,\n          maxlength: 1,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: (e: Event) => this.onInput(e, otpIdx),\n          focus: (e: Event) => this.onFocus(e, otpIdx),\n          paste: (e: ClipboardEvent) => this.onPaste(e, otpIdx),\n          keydown: this.onKeyDown,\n          keyup: (e: KeyboardEvent) => this.onKeyUp(e, otpIdx),\n        }),\n        ref: 'input',\n        refInFor: true,\n      })\n    },\n    genTextFieldSlot (otpIdx: number): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genInput(otpIdx),\n      ])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick (otpIdx: number) {\n      if (this.isFocused || this.isDisabled || !this.$refs.input[otpIdx]) return\n\n      this.onFocus(undefined, otpIdx)\n    },\n    onFocus (e?: Event, otpIdx?: number) {\n      e?.preventDefault()\n      e?.stopPropagation()\n      const elements = this.$refs.input as HTMLInputElement[]\n      const ref = this.$refs.input && elements[otpIdx || 0]\n      if (!ref) return\n\n      if (document.activeElement !== ref) {\n        ref.focus()\n        return ref.select()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        ref.select()\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event, otpIdx: number) {\n      const target = e.target as HTMLInputElement\n      const value = target.value\n      this.applyValue(otpIdx, target.value, () => {\n        this.internalValue = this.otp.join('')\n      })\n      this.badInput = target.validity && target.validity.badInput\n\n      const nextIndex = otpIdx + 1\n      if (value) {\n        if (nextIndex < +this.length) {\n          this.changeFocus(nextIndex)\n        } else {\n          this.clearFocus(otpIdx)\n          this.onCompleted()\n        }\n      }\n    },\n    clearFocus (index: number) {\n      const input = this.$refs.input[index] as HTMLInputElement\n      input.blur()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) {\n        this.$emit('change', this.internalValue)\n      }\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event, otpIdx: number) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input[otpIdx]) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event, otpIdx: number) {\n      if (this.hasMouseDown) this.focus(e, otpIdx)\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    onPaste (event: ClipboardEvent, index: number) {\n      const maxCursor = +this.length - 1\n      const inputVal = event?.clipboardData?.getData('Text')\n      const inputDataArray = inputVal?.split('') || []\n      event.preventDefault()\n      const newOtp: string[] = [...this.otp]\n      for (let i = 0; i < inputDataArray.length; i++) {\n        const appIdx = index + i\n        if (appIdx > maxCursor) break\n        newOtp[appIdx] = inputDataArray[i].toString()\n      }\n      this.otp = newOtp\n      const targetFocus = Math.min(index + inputDataArray.length, maxCursor)\n      this.changeFocus(targetFocus)\n\n      if (newOtp.length === +this.length) { this.onCompleted(); this.clearFocus(targetFocus) }\n    },\n    applyValue (index: number, inputVal: string, next: Function) {\n      const newOtp: string[] = [...this.otp]\n      newOtp[index] = inputVal\n      this.otp = newOtp\n      next()\n    },\n    changeFocus (index: number) {\n      this.onFocus(undefined, index || 0)\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onKeyUp (event: KeyboardEvent, index: number) {\n      event.preventDefault()\n      const eventKey = event.key\n      if (['Tab', 'Shift', 'Meta', 'Control', 'Alt'].includes(eventKey)) {\n        return\n      }\n      if (['Delete'].includes(eventKey)) {\n        return\n      }\n      if (eventKey === 'ArrowLeft' || (eventKey === 'Backspace' && !this.otp[index])) {\n        return index > 0 && this.changeFocus(index - 1)\n      }\n      if (eventKey === 'ArrowRight') {\n        return index + 1 < +this.length && this.changeFocus(index + 1)\n      }\n    },\n    onCompleted () {\n      const rsp = this.otp.join('')\n      if (rsp.length === +this.length) {\n        this.$emit('finish', rsp)\n      }\n    },\n  },\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-otp-input',\n      class: this.themeClasses,\n    }, this.genContent())\n  },\n})\n"],"sourceRoot":""}]}