{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\comm\\calendar\\Calendar.vue?vue&type=style&index=0&id=562005ec&scoped=true&lang=css&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\comm\\calendar\\Calendar.vue","mtime":1709258483420},{"path":"D:\\extrust\\eboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm15LWV2ZW50IHsKICBtYXJnaW4tbGVmdDogNnB4Owp9CgoubXktZXZlbnQud2l0aC10aW1lIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDRweDsKICBoZWlnaHQ6IDEwMDsKICBtYXJnaW4tcmlnaHQ6IDBweDsKfQo="},{"version":3,"sources":["Calendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Calendar.vue","sourceRoot":"src/views/comm/calendar","sourcesContent":["<template>\n  <v-row class=\"fill-height\">\n    <v-col>\n      <v-sheet height=\"68\">\n        <v-toolbar flat>\n          <v-btn outlined class=\"mr-4\" color=\"grey darken-2\" @click=\"setToday\">\n            Today\n          </v-btn>\n          <v-btn fab text small color=\"grey darken-2\" @click=\"prev\">\n            <v-icon> mdi-chevron-left </v-icon>\n          </v-btn>\n          <v-btn fab text small color=\"grey darken-2\" @click=\"next\">\n            <v-icon> mdi-chevron-right </v-icon>\n          </v-btn>\n          <v-toolbar-title v-if=\"$refs.calendar\">\n            {{ $refs.calendar.title }}\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-menu bottom right>\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-btn outlined color=\"grey darken-2\" v-bind=\"attrs\" v-on=\"on\">\n                <span>{{ typeToLabel[type] }}</span>\n                <v-icon right> mdi-menu-down </v-icon>\n              </v-btn>\n            </template>\n            <v-list>\n              <v-list-item @click=\"type = 'month'\">\n                <v-list-item-title>Month</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </v-toolbar>\n      </v-sheet>\n      <v-sheet height=\"600\">\n        <v-calendar\n          ref=\"calendar\"\n          v-model=\"focus\"\n          :events=\"events\"\n          :event-height=\"40\"\n          :event-margin-bottom=\"5\"\n          :event-margin-left=\"20\"\n          :event-more=\"false\"\n          :event-color=\"getEventColor\"\n          type=\"month\"\n          @click:event=\"showEvent\"\n          @click:more=\"viewDay\"\n          @click:date=\"viewDay\"\n          @change=\"updateRange\"\n        >\n          <template v-slot:event=\"{ event }\">\n            <div>\n              <div class=\"mr-12 my-event\" style=\"display: flow-root\">\n                <div style=\"float: left\">\n                  <div style=\"float: left\">\n                    <v-btn id=\"btn-open\" text icon color=\"error\"\n                      ><v-icon>{{ icons.mdiCheckUnderline }}</v-icon></v-btn\n                    >\n                  </div>\n                </div>\n                <div style=\"float: right\">\n                  <v-btn text style=\"font-weight: bold\">{{\n                    selectedEventStartText(event.start)\n                  }}</v-btn>\n                </div>\n              </div>\n            </div>\n          </template>\n        </v-calendar>\n      </v-sheet>\n      <v-menu\n        v-model=\"selectedOpen\"\n        :close-on-content-click=\"false\"\n        :activator=\"selectedElement\"\n        offset-x\n      >\n        <v-card color=\"grey lighten-4\" min-width=\"200px\" flat>\n          <v-card-text>\n            <div class=\"text-center\">\n              <p class=\"text-h6 text--primary\">{{ selectedEvent.title }}</p>\n            </div>\n          </v-card-text>\n          <v-card-text>\n            <div class=\"text-center\">\n              <v-icon size=\"30\" color=\"error\">\n                {{ icons.mdiCheckCircle }}\n              </v-icon>\n              <p class=\"font-weight-semibold text-xl text--primary\">\n                {{ selectedEventStart }}\n              </p>\n            </div>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn text color=\"info\" @click=\"selectedOpen = false\">\n              close\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-menu>\n    </v-col>\n  </v-row>\n</template>\n<script>\nimport {\n  mdiChevronLeft,\n  mdiChevronRight,\n  mdiMenu,\n  mdiCheckCircle,\n  mdiCheckUnderline,\n} from \"@mdi/js\";\n\nimport { format } from \"date-fns\";\nimport store from \"@/store\";\nimport calendarStoreModule from \"./calendarStoreModule\";\n\nconst CALENDAR_APP_STORE_MODULE_NAME = \"app-calendar\";\n\nexport default {\n  data() {\n    if (!store.hasModule(CALENDAR_APP_STORE_MODULE_NAME)) {\n      store.registerModule(CALENDAR_APP_STORE_MODULE_NAME, calendarStoreModule);\n      console.log(store.hasModule(CALENDAR_APP_STORE_MODULE_NAME));\n    }\n\n    return {\n      focus: \"\",\n      type: \"month\",\n      typeToLabel: {\n        month: \"Month\",\n        day: \"Day\",\n      },\n      selectedEvent: {},\n      selectedElement: null,\n      selectedOpen: false,\n      events: [],\n      // colors: [\n      // \t'error',\n      // \t'info',\n      // \t'secondary',\n      // \t'success',\n      // \t'warning',\n      // \t'primary',\n      // \t'grey darken-1',\n      // ],\n      // names: [\n      // \t'Meeting',\n      // \t'Holiday',\n      // \t'PTO',\n      // \t'Travel',\n      // \t'Event',\n      // \t'Birthday',\n      // \t'Conference',\n      // \t'Party',\n      // ],\n      icons: {\n        mdiChevronLeft,\n        mdiChevronRight,\n        mdiMenu,\n        mdiCheckCircle,\n        mdiCheckUnderline,\n      },\n    };\n  },\n  mounted() {\n    this.$refs.calendar.checkChange();\n  },\n  computed: {\n    selectedEventStart() {\n      return (\n        this.selectedEvent &&\n        this.selectedEvent.start &&\n        format(new Date(this.selectedEvent.start), \"h:mm a\")\n      );\n    },\n  },\n\n  methods: {\n    selectedEventStartText(val) {\n      return format(new Date(val), \"h:mm a\");\n    },\n\n    viewDay({ date }) {\n      this.focus = date;\n      this.type = \"day\";\n    },\n    getEventColor(event) {\n      return event.color;\n    },\n    setToday() {\n      this.focus = \"\";\n    },\n    prev() {\n      this.$refs.calendar.prev();\n    },\n    next() {\n      this.$refs.calendar.next();\n    },\n\n    selectedEventTitle() {\n      return this.selectedEvent.title;\n    },\n\n    showEvent({ nativeEvent, event }) {\n      const open = () => {\n        this.selectedEvent = event;\n        this.selectedElement = nativeEvent.target;\n        requestAnimationFrame(() =>\n          requestAnimationFrame(() => (this.selectedOpen = true))\n        );\n      };\n\n      if (this.selectedOpen) {\n        this.selectedOpen = false;\n        requestAnimationFrame(() => requestAnimationFrame(() => open()));\n      } else {\n        open();\n      }\n\n      nativeEvent.stopPropagation();\n    },\n    updateRange({ start, end }) {\n      const _events = [\n        {\n          name: \"\",\n          start: \"2023-05-01T09:40:00\",\n          color: \"#FFFFFF\",\n          title: \"sales office a\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-02T09:10\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office b\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-03 08:10:30\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office c\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-04 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-06 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-11 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-18 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-25 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n        {\n          name: \"\",\n          start: \"2023-05-30 08:50:00\",\n          timed: true,\n          color: \"#FFFFFF\",\n          title: \"sales office d\",\n        },\n      ];\n\n      // const newEventItem = [];\n      // _events.forEach(item => {\n      // \tnewEventItem.push({\n      // \t\tname: '',\n      // \t\tstart: item.start,\n      // \t\tend: item.end,\n      // \t\tcolor: item.color,\n      // \t\ttimed: item.timed,\n      // \t});\n\n      // \tconsole.log(newEventItem);\n      // });\n      // this.events = newEventItem;\n      // console.log(this.events);\n      // const events = [];\n      // const min = new Date(`${start.date}T00:00:00`);\n      // const max = new Date(`${end.date}T23:59:59`);\n      // const days = (max.getTime() - min.getTime()) / 86400000;\n      // const eventCount = this.rnd(days, days + 20);\n      // for (let i = 0; i < eventCount; i++) {\n      // \tconst allDay = this.rnd(0, 3) === 0;\n      // \tconst firstTimestamp = this.rnd(min.getTime(), max.getTime());\n      // \tconst first = new Date(firstTimestamp - (firstTimestamp % 900000));\n      // \tconst secondTimestamp = this.rnd(2, allDay ? 288 : 8) * 900000;\n      // \tconst second = new Date(first.getTime() + secondTimestamp);\n      // \tevents.push({\n      // \t\tname: this.names[this.rnd(0, this.names.length - 1)],\n      // \t\tstart: first,\n      // \t\tend: second,\n      // \t\tcolor: this.colors[this.rnd(0, this.colors.length - 1)],\n      // \t\ttimed: !allDay,\n      // \t});\n      // }\n      // this.events = events;\n      //this.events = [..._events];\n\n      this.fetchEvents();\n    },\n\n    fetchEvents() {\n      console.log(\"fetchevents ==>\", this.$refs.calendar);\n\n      let yyyy = this.$refs.calendar.parsedValue.year.toString();\n      let mon = this.$refs.calendar.parsedValue.month.toString();\n\n      console.log(mon.length);\n\n      let cmon = mon.length == 1 ? \"0\".concat(mon) : mon;\n\n      const parsedValue = yyyy.concat(cmon);\n      store\n        .dispatch(`${CALENDAR_APP_STORE_MODULE_NAME}/fetchEvents`, parsedValue)\n        .then((response) => {\n          console.log(response.data.dataList);\n          const _events = response.data.dataList;\n          _events.forEach((fetchedEvent) => {\n            console.log(fetchedEvent);\n            /* eslint-disable no-param-reassign */\n          });\n\n          this.events = [..._events];\n        })\n        .catch((error) => {\n          console.error(error);\n          console.error(error.response);\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.my-event {\n  margin-left: 6px;\n}\n\n.my-event.with-time {\n  position: absolute;\n  right: 4px;\n  height: 100;\n  margin-right: 0px;\n}\n</style>\n"]}]}