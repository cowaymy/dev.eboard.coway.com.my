{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\components\\appBar\\AppBarNotification.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\components\\appBar\\AppBarNotification.vue","mtime":1708506983492},{"path":"D:\\extrust\\eboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689230669010},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIn52dWV0aWZ5L3NyYy9zdHlsZXMvc3R5bGVzLnNhc3MiOwoKLmFwcC1iYXItbm90aWZpY2F0aW9uLWNvbnRlbnQtY29udGFpbmVyIHsKICAucmVhZC1hbGwtYnRuLWxpc3QtaXRlbSB7CiAgICBwYWRkaW5nLXRvcDogMTRweDsKICAgIHBhZGRpbmctYm90dG9tOiAxNHB4OwogICAgbWluLWhlaWdodDogdW5zZXQ7CiAgfQp9CgoucHMtdXNlci1ub3RpZmljYXRpb25zIHsKICBtYXgtaGVpZ2h0OiBjYWxjKHZhcigtLXZoLCAxdmgpICogODApOwp9Cgoubm90aWZpY2F0aW9uLW1lbnUtY29udGVudCB7CiAgQG1lZGlhICN7bWFwLWdldCgkZGlzcGxheS1icmVha3BvaW50cywgJ3hzLW9ubHknKX0gewogICAgbWluLXdpZHRoOiBjYWxjKDEwMHZ3IC0gKDEuNXJlbSAqIDIpKSAhaW1wb3J0YW50OwogICAgbGVmdDogNTAlICFpbXBvcnRhbnQ7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CiAgfQp9Cg=="},{"version":3,"sources":["AppBarNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppBarNotification.vue","sourceRoot":"src/components/appBar","sourcesContent":["<template>\n  <v-menu\n    offset-y\n    left\n    nudge-bottom=\"22\"\n    :elevation=\"$vuetify.theme.dark ? 9 : 8\"\n    content-class=\"list-style notification-menu-content\"\n  >\n    <template v-slot:activator=\"{ on, attrs }\">\n      <template v-if=\"$store.state.newNotifiCnt != 0\">\n        <v-badge\n          color=\"error\"\n          :content=\"$store.state.newNotifiCnt\"\n          offset-x=\"10\"\n          offset-y=\"10\"\n        >\n          <v-icon v-bind=\"attrs\" v-on=\"on\">\n            {{ icons.mdiBellOutline }}\n          </v-icon>\n        </v-badge>\n      </template>\n    </template>\n    <v-card class=\"app-bar-notification-content-container\">\n      <perfect-scrollbar\n        class=\"ps-user-notifications\"\n        :options=\"perfectScrollbarOptions\"\n      >\n        <v-list class=\"py-0\">\n          <!-- Header -->\n          <v-list-item class=\"d-flex\" link>\n            <div class=\"d-flex align-center justify-space-between flex-grow-1\">\n              <span class=\"font-weight-semibold\">Notifications</span>\n              <v-chip\n                class=\"v-chip-light-bg primary--text font-weight-semibold\"\n                small\n              >\n                {{ $store.state.newNotifiCnt }} NEW\n              </v-chip>\n            </div>\n          </v-list-item>\n          <v-divider></v-divider>\n\n          <!-- Notifications -->\n          <template v-for=\"(notification, index) in notificationsData\">\n            <v-list-item :key=\"notification.ID\" link>\n              <!-- Avatar -->\n              <v-list-item-avatar\n                :class=\"getTypeClass(notification.TYPE)\"\n                size=\"38\"\n              >\n                <v-tooltip top>\n                  <template v-slot:activator=\"{ on, attrs }\">\n                    <v-btn\n                      color=\"#2A3B4D\"\n                      :class=\"getTypeClass(notification.TYPE)\"\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                    >\n                      <span class=\"text-lg\">{{ notification.TYPE }}</span>\n                    </v-btn>\n                  </template>\n                  <span>{{ notification.TYPE_NM }}</span>\n                </v-tooltip>\n              </v-list-item-avatar>\n\n              <!-- Content -->\n              <v-list-item-content class=\"d-block\">\n                <v-list-item-title class=\"text-sm font-weight-semibold\">\n                  {{ setLimitText(\"T\", notification.SUBJECT) }}\n                </v-list-item-title>\n                <v-list-item-subtitle class=\"text-sm\">\n                  {{ setLimitText(\"S\", notification.CONTENTS) }}\n                </v-list-item-subtitle>\n              </v-list-item-content>\n\n              <!-- Item Action/Time -->\n              <v-list-item-action>\n                <span class=\"text--secondary text-xs\">{{\n                  notification.STD_DATE\n                }}</span>\n              </v-list-item-action>\n            </v-list-item>\n            <v-divider :key=\"index\"></v-divider>\n          </template>\n          <router-link to=\"/NotificationList\">\n            <v-list-item key=\"read-all-btn\" class=\"read-all-btn-list-item\">\n              <v-btn block color=\"primary\"> Read All Notifications </v-btn>\n            </v-list-item>\n          </router-link>\n\n          <v-divider></v-divider>\n        </v-list>\n      </perfect-scrollbar>\n    </v-card>\n  </v-menu>\n</template>\n\n<script>\nimport { mdiBellOutline } from \"@mdi/js\";\nimport baseApi from \"../../api/index.js\";\n\n// 3rd Party\nimport { PerfectScrollbar } from \"vue2-perfect-scrollbar\";\n\nexport default {\n  components: {\n    PerfectScrollbar,\n  },\n  data() {\n    const perfectScrollbarOptions = {\n      maxScrollbarLength: 60,\n      wheelPropagation: false,\n    };\n\n    const notificationsData = [];\n    return {\n      notificationsData,\n      perfectScrollbarOptions,\n\n      icons: { mdiBellOutline },\n    };\n  },\n\n  methods: {\n    async callApiDetailNewNotification() {\n      //start spinner\n      try {\n        const userInfo = this.$store.state.userInfo;\n        const data = await baseApi.getDetailNewNotification(userInfo);\n        return data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    getTypeClass(value) {\n      return value == \"E\"\n        ? \"v-avatar-light-bg error--text justify-center\"\n        : \"v-avatar-light-bg primary--text justify-center\";\n    },\n\n    setLimitText(type, value) {\n      let rtnValue = \"\";\n\n      if (type == \"T\") {\n        rtnValue = value.length > 20 ? value.substring(0, 20) + \" ...\" : value;\n      }\n\n      if (type == \"S\") {\n        rtnValue = value.length > 40 ? value.substring(0, 40) + \" ...\" : value;\n      }\n\n      return rtnValue;\n    },\n  },\n\n  created() {\n    this.callApiDetailNewNotification();\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"~vuetify/src/styles/styles.sass\";\n\n.app-bar-notification-content-container {\n  .read-all-btn-list-item {\n    padding-top: 14px;\n    padding-bottom: 14px;\n    min-height: unset;\n  }\n}\n\n.ps-user-notifications {\n  max-height: calc(var(--vh, 1vh) * 80);\n}\n\n.notification-menu-content {\n  @media #{map-get($display-breakpoints, 'xs-only')} {\n    min-width: calc(100vw - (1.5rem * 2)) !important;\n    left: 50% !important;\n    transform: translateX(-50%);\n  }\n}\n</style>\n"]}]}