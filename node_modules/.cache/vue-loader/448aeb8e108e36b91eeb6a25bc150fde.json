{"remainingRequest":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard.coway.com.my\\src\\views\\performance\\active\\ds\\activeHPHMReport.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\extrust\\eboard.coway.com.my\\src\\views\\performance\\active\\ds\\activeHPHMReport.vue","mtime":1711959937997},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zY3JvbGwtY2FyZCB7CiAgd2lkdGg6IDEwMCU7IC8qIOuqqOuwlOydvCDtmZTrqbTsl5DshJzripQg6rCA66GcIOyghOyytCDrhIjruYTrpbwg7IKs7JqpICovCiAgb3ZlcmZsb3cteDogYXV0bzsgLyog7ZWE7JqU7ZWcIOqyveyasOyXkOunjCDqsIDroZwg7Iqk7YGs66Gk7J2EIO2XiOyaqSAqLwp9CgogICAgCg=="},{"version":3,"sources":["activeHPHMReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyQA;AACA;AACA;AACA","file":"activeHPHMReport.vue","sourceRoot":"src/views/performance/active/ds","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"12\">\r\n            <v-alert border=\"left\" color=\"black\" dark elevation=\"1\">\r\n              <div class=\"nocard\">NetSales e-Performance</div>\r\n            </v-alert>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"3\" class=\"align-center\">\r\n            <v-card  class=\"scroll-card\">\r\n              <v-overlay :value=\"loading\">\r\n                    <v-progress-circular\r\n                      indeterminate\r\n                      color=\"info\"\r\n                    ></v-progress-circular>\r\n                  </v-overlay>\r\n                <v-card-text >\r\n                    <apexchart   ref=\"chart\" type=\"bar\" :options=\"chartOptions\" :series=\"chartSeries\" height=\"350\"  @dataPointSelection=\"handleChartClick\"/>\r\n                </v-card-text >\r\n            </v-card>\r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"9\" >\r\n            <v-card  >\r\n                <v-card-text class=\"scroll-card\" >\r\n                    <apexchart  ref=\"chart2\" type=\"bar\" :options=\"chartOptions2\" :series=\"chartSeries2\" height=\"350\"   @dataPointSelection=\"chart2HandleChartClick\"  />\r\n                </v-card-text>\r\n            </v-card>\r\n\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"4\">\r\n        \r\n        </v-col>\r\n              \r\n        <v-col cols=\"12\" md=\"4\">\r\n\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"4\">\r\n        </v-col>\r\n        \r\n\r\n    </v-row>\r\n  </template>\r\n  \r\n  <script>\r\nimport apexchart from \"vue-apexcharts\";\r\n//import netSalesLevel4Report from \"./netSalesLevel4Report\";\r\n\r\nimport store from \"@/store\";\r\nimport activeHPStoreModule from \"./activeHPStoreModule\";\r\nconst  performanceActiveHP  = \"appPerformanceActiveHP\";\r\n\r\n\r\nexport default {\r\n    components: {\r\n      apexchart \r\n    },\r\n    data() {\r\n      \r\n      if (!store.hasModule(performanceActiveHP)) {\r\n          store.registerModule( performanceActiveHP,activeHPStoreModule );\r\n      }\r\n\r\n\r\n      return {\r\n        chartData :[],\r\n        chartOptions: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 800,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 20\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350\r\n                }\r\n            }\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: ['NetSales'], // X축 카테고리\r\n          },\r\n         \r\n          fill: {\r\n            opacity: 10,\r\n          },\r\n          cursorStyle: 'default',\r\n        },\r\n        selectedBarIndex: null, // 클릭된 막대 그래프의 인덱스를 저장하는 변수\r\n      };\r\n    },\r\n\r\n\r\n    computed: {\r\n        loading(){\r\n          return this.$store.state.appPerformanceNetSales.loading\r\n        },\r\n\r\n        chartSeries2() {\r\n          return[\r\n              {\r\n                name: 'Current month',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemNetSalesLevel1List\r\n              },\r\n              {\r\n                name: 'Prev month',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPMNetSalesLevel1List\r\n              },\r\n              {\r\n                name: 'Last Year same month',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPYNetSalesLevel1List\r\n              }\r\n         ]\r\n        },\r\n\r\n\r\n        chartSeries(){\r\n             return  [\r\n                    {\r\n                      name: 'Curr.Month',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemCTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: 'Prev.Month',\r\n                      data:this.$store.state.appPerformanceNetSales.dataNameItemPMTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: 'Last yr.same Month',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemPYTotalNetSalesLevel1List,\r\n                    }\r\n            ]\r\n        },\r\n\r\n\r\n        likesSomeTarget() {\r\n             return this.selectedFilter.length > 0 && !this.clickAllTarget;\r\n        },\r\n\r\n        categories(){\r\n          return this.$store.state.appPerformanceNetSales.dataNameItemLevel1List;\r\n        },\r\n\r\n        chartOptions2() {\r\n           return { \r\n                chart: {\r\n                      type: 'bar',\r\n                      height: 350,\r\n                      width : this.getWidth(),\r\n                      stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n                      animations: {\r\n                          enabled: true,\r\n                          easing: 'easeinout',\r\n                          speed: 800,\r\n                          animateGradually: {\r\n                              enabled: true,\r\n                              delay: 50\r\n                          },\r\n                          dynamicAnimation: {\r\n                              enabled: true,\r\n                              speed: 350\r\n                          }\r\n                      },\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                      horizontal: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: this.categories,\r\n                    tickPlacement: 'on'\r\n                },\r\n                // legend: {\r\n                //     position: 'top',\r\n                // },\r\n                fill: {\r\n                    opacity: 10,\r\n                },\r\n\r\n                zoom: {\r\n                    enabled: true,\r\n                    type: 'x',\r\n                    autoScaleYaxis: true,\r\n                  },\r\n            }\r\n        },\r\n    \r\n    },\r\n\r\n    mounted() {\r\n       //this.$refs.chart2.on('dblclick', this.chart2HandleChartClick);\r\n    },\r\n    methods:{\r\n\r\n        getWidth(){\r\n          const breakpoint = this.$vuetify.breakpoint;\r\n          if(breakpoint.mobile){\r\n            return  '900'\r\n          }else{\r\n            return  '100%'\r\n          }\r\n        },\r\n\r\n        getCTotoalNetSalesforLevel1categories() {\r\n            store.dispatch(`${performanceActiveHP}/fetchGetTotalNestSalesLevel1`);\r\n        },\r\n      \r\n        getNameforLevel1categories() {\r\n          store.dispatch(`${performanceActiveHP}/fetchGetNameLevel1`);\r\n        },\r\n\r\n        getCNetSalesforLevel1categories(){\r\n          store.dispatch(`${performanceActiveHP}/fetchGetNestSalesLevel1`);\r\n        },\r\n\r\n\r\n        handleChartClick(event, chartContext, config) {\r\n            //const seriesIndex = config.seriesIndex;\r\n            const dataPointIndex = config.dataPointIndex;\r\n            // 클릭된 막대 그래프의 인덱스를 저장\r\n            this.selectedBarIndex = dataPointIndex;\r\n\r\n            //this.getNameforLevel1categories();\r\n            this.getCNetSalesforLevel1categories();\r\n        },\r\n\r\n        chart2HandleChartClick(event, chartContext, config){\r\n\r\n              const dataPointIndex = config.dataPointIndex;\r\n              console.log('클릭 이벤트' ,dataPointIndex)\r\n\r\n              this.$store.state.appPerformanceNetSales.dataItemLevel4List  =[];\r\n         \r\n              const param ={};\r\n              param.deptCode =  this.$store.state.appPerformanceNetSales.dataNameItemLevel1List[dataPointIndex];\r\n              store.dispatch(`${performanceActiveHP}/fetchLevel4Events`,param);\r\n        }\r\n      },\r\n\r\n      created(){\r\n          this.getCTotoalNetSalesforLevel1categories();\r\n      },\r\n\r\n    \r\n  };\r\n  </script>\r\n  \r\n\r\n  <style >\r\n \r\n\r\n\r\n  .scroll-card {\r\n    width: 100%; /* 모바일 화면에서는 가로 전체 너비를 사용 */\r\n    overflow-x: auto; /* 필요한 경우에만 가로 스크롤을 허용 */\r\n  }\r\n\r\n      \r\n  </style>"]}]}