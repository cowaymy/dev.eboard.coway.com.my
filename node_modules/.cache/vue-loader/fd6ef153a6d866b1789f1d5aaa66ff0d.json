{"remainingRequest":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard.coway.com.my\\src\\views\\dashboard\\sales\\DashboardSalesStatisticsTotalSales.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\extrust\\eboard.coway.com.my\\src\\views\\dashboard\\sales\\DashboardSalesStatisticsTotalSales.vue","mtime":1707983434801},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689230669010},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2NoYXJ0LXN0YXRzLXRvdGFsLXNhbGVzIHsKICBtYXgtd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiBhdXRvOwogIC5hcGV4Y2hhcnRzLXBpZSB7CiAgICAuYXBleGNoYXJ0cy1waWUtc2VyaWVzIC5hcGV4Y2hhcnRzLXBpZS1hcmVhIHsKICAgICAgc3Ryb2tlLXdpZHRoOiAxMDsKICAgIH0KICB9CiAgLmFwZXhjaGFydHMtY2FudmFzIHsKICAgIC5hcGV4Y2hhcnRzLXRleHQgewogICAgICAmLmFwZXhjaGFydHMtZGF0YWxhYmVsLXZhbHVlIHsKICAgICAgICBmb250LXdlaWdodDogNjAwOwogICAgICAgIGZvbnQtc2l6ZTogMS4yNXJlbTsKICAgICAgfQogICAgICAmLmFwZXhjaGFydHMtZGF0YWxhYmVsLWxhYmVsIHsKICAgICAgICBmb250LXNpemU6IDAuNzVyZW07CiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTsKICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTdweCk7CiAgICAgIH0KICAgIH0KICB9Cn0KCi52LWFwcGxpY2F0aW9uIHsKICAmLnRoZW1lLS1kYXJrIHsKICAgICNjaGFydC1zdGF0cy10b3RhbC1zYWxlcyB7CiAgICAgIHBhdGggewogICAgICAgIHN0cm9rZTogIzMxMmQ0YjsKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["DashboardSalesStatisticsTotalSales.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DashboardSalesStatisticsTotalSales.vue","sourceRoot":"src/views/dashboard/sales","sourcesContent":["<template>\n  <v-card elevation=\"1\">\n    <div>\n      <div>\n        <v-card-title>\n          <v-avatar color=\"white\" size=\"38\">\n            <v-icon size=\"24\" color=\"error\" class=\"rounded-0\">\n              {{ icons.mdiBullseyeArrow }}\n            </v-icon>\n          </v-avatar>\n          Target Sales\n        </v-card-title>\n      </div>\n      <v-card-text>\n        <VueApexCharts\n          id=\"chart-stats-total-sales\"\n          height=\"150\"\n          :options=\"chartOptions\"\n          :series=\"chartSeries\"\n        />\n        <div class=\"font-weight-semibold text-1xl mb-0\">\n          Target Sales :\n          <span class=\"font-weight-semibold text-2xl primary--text mb-0\">\n            {{ totalsales }}\n          </span>\n        </div>\n      </v-card-text>\n    </div>\n  </v-card>\n</template>\n\n<script>\nimport VueApexCharts from \"vue-apexcharts\";\n\nimport { mdiChevronUp, mdiBullseyeArrow } from \"@mdi/js\";\nimport store from \"@/store\";\n\nexport default {\n  props: {\n    isDoneTartgetApi: Boolean,\n    isDoneCurMonthApi: Boolean,\n  },\n  components: {\n    VueApexCharts,\n  },\n\n  methods: {\n    setData() {\n      // this.totalsales = request.data.data[0];\n\n      this.totalsales = this.fun_numFormat(\n        store.state.app_salseEpapan.apiTargetData.data[0].TARGET_AMT\n      );\n\n      let _totalsales = Number(\n        store.state.app_salseEpapan.apiTargetData.data[0].TARGET_AMT\n      );\n      let _netsales = Number(\n        store.state.app_salseEpapan.apiCurMonthData.data[0].SAL_NET_SALES\n      );\n      //console.log('_totalsales', _totalsales);\n      //console.log('_netsales', _netsales);\n\n      //this.chartSeries.push(_totalsales);\n      this.chartSeries.push(Math.round((_netsales / _totalsales) * 100));\n    },\n    // getNetSaleAmt() {\n    // \tlet chartSeries = [];\n    // \tchartSeries[0] =\n    // \t\tstore.state.app_salseEpapan.apiCurMonthData.data[0].SAL_NET_SALES;\n\n    // \tconsole.log(chartSeries);\n    // \treturn chartSeries;\n    // },\n    // async callApiTargetData() {\n    // \ttry {\n    // \t\tconst userInfo = this.$store.state.userInfo;\n    // \t\treturn await salesApi.getTargetData(userInfo);\n    // \t} catch (error) {\n    // \t\tconsole.log(error);\n    // \t}\n    // },\n    fun_numFormat(number) {\n      if (number != undefined) {\n        const neFor = number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        //console.log(neFor);\n        return neFor;\n      }\n    },\n\n    // },\n    // \tthis.totalsales = store.state.app_salseEpapan.apiTargetData[0].TARGET_AMT;\n    // \tlet _totalsales = Number(this.totalsales);\n    // \tlet _netsales = Number(\n    // \t\tstore.state.app_salseEpapan.apiCurMonthData.data[0].SAL_NET_SALES,\n    // \t);\n  },\n\n  watch: {\n    isDoneTartgetApi(val) {\n      console.log(\"isDoneCurMonthApi :\", this.isDoneCurMonthApi);\n      if (val && this.isDoneCurMonthApi) {\n        console.log(store.state.app_salseEpapan.apiTargetData);\n        this.setData();\n      } else {\n        this.totalsales = 0;\n      }\n    },\n\n    isDoneCurMonthApi(val) {\n      console.log(\"isDoneCurMonthApi :\", this.isDoneCurMonthApi);\n      if (val && this.isDoneTartgetApi) {\n        console.log(store.state.app_salseEpapan.apiTargetData);\n        this.setData();\n      }\n    },\n  },\n\n  computed: {\n    // ...mapState({\n    // \tloginInfo: state => store.state.app_salseEpapan.apiTargetData,\n    // }),\n    // totalsalesAmt() {\n    // \tlet rtnValue = 0;\n    // \tif (this.doneTartgetApi) {\n    // \t\tconsole.log(store.state.app_salseEpapan.apiTargetData);\n    // \t\tthis.fun_numFormat(\n    // \t\t\tutil.checkNull(\n    // \t\t\t\tstore.state.app_salseEpapan.apiTargetData[0].TARGET_AMT,\n    // \t\t\t),\n    // \t\t);\n    // \t}\n    // \tconsole.log(rtnValue);\n    // \treturn rtnValue;\n    // },\n    // \tthis.totalsales = store.state.app_salseEpapan.apiTargetData[0].TARGET_AMT;\n    // \tlet _totalsales = Number(this.totalsales);\n    // \tlet _netsales = Number(\n    // \t\tstore.state.app_salseEpapan.apiCurMonthData.data[0].SAL_NET_SALES,\n    // \t);\n    // \tconsole.log('_totalsales', _totalsales);\n    // \tconsole.log('_netsales', _netsales);\n  },\n\n  created() {\n    // this.callApiTargetData().then(request => {\n    // \tconsole.log(request);\n    // \trequest.data.data.forEach(function (v) {\n    // \t\t//console.log(v.RATE);\n    // \t\t//cData = v.RATE;\n    // \t});\n    // \t//console.log(vRate);\n    // });\n    //this.setData();\n    //this.getApiTargetData();\n    // //isDoneTartgetApi(val) {\n    // console.log('===========>', this.isDoneTartgetApi);\n    // //clearTimeout(this.timer);\n    // if (this.isDoneTartgetApi) {\n    // \tconsole.log(store.state.app_salseEpapan.apiTargetData);\n    // \tthis.totalsales = this.fun_numFormat(\n    // \t\tutil.checkNull(store.state.app_salseEpapan.apiTargetData[0].TARGET_AMT),\n    // \t);\n    // } else {\n    // \tthis.totalsales = 0;\n    // }\n    //},\n  },\n\n  data() {\n    const chartSeries = [];\n\n    const chartOptions2 = {\n      labels: [\"Achieved Sales\", \"Target Sales\"],\n      chart: {\n        offsetY: 7,\n        type: \"donut\",\n        sparkline: {\n          enabled: true,\n        },\n        animations: {\n          enabled: false,\n        },\n      },\n      stroke: {\n        colors: [\"#fff\"],\n        width: 8,\n      },\n      grid: {\n        padding: {\n          bottom: 10,\n        },\n      },\n      colors: [\"#FF4500\", \"#E9EAEC\"],\n      plotOptions: {\n        pie: {\n          donut: {\n            labels: {\n              show: true,\n              name: {\n                fontSize: \"14px\",\n                offsetY: 25,\n              },\n              value: {\n                offsetY: -13,\n                formatter(val) {\n                  return val;\n                },\n              },\n              total: {\n                show: false,\n                label: \"Target Sales\",\n                formatter: function (w) {\n                  return w.globals.seriesTotals.reduce((a, b) => {\n                    return a + b;\n                  }, 0);\n                },\n              },\n            },\n          },\n        },\n      },\n    };\n    const chartOptions = {\n      chart: {\n        type: \"radialBar\",\n        animations: {\n          enabled: false,\n        },\n        sparkline: {\n          enabled: true,\n        },\n      },\n      stroke: {\n        colors: [\"#fff\"],\n        width: 50,\n      },\n      plotOptions: {\n        radialBar: {\n          hollow: {\n            size: \"70%\",\n          },\n        },\n      },\n      labels: [\"Achieved\"],\n    };\n\n    // const chartOptions = {\n    // \tchart: {\n    // \t\toffsetY: 2,\n    // \t\ttype: 'radialBar',\n    // \t},\n    // \tcolors: ['#56C6F6'],\n    // \tplotOptions: {\n    // \t\tradialBar: {\n    // \t\t\thollow: {\n    // \t\t\t\tmargin: 15,\n    // \t\t\t\tsize: '70%',\n    // \t\t\t},\n\n    // \t\t\tdataLabels: {\n    // \t\t\t\tshowOn: 'always',\n    // \t\t\t\tname: {\n    // \t\t\t\t\toffsetY: 0,\n    // \t\t\t\t\tshow: true,\n    // \t\t\t\t\tcolor: '#888',\n    // \t\t\t\t\tfontSize: '23px',\n    // \t\t\t\t},\n    // \t\t\t\tvalue: {\n    // \t\t\t\t\tcolor: '#111',\n    // \t\t\t\t\tfontSize: '30px',\n    // \t\t\t\t\tshow: true,\n    // \t\t\t\t},\n    // \t\t\t},\n    // \t\t},\n    // \t},\n    // \tlabels: ['Total'],\n    // };\n\n    return {\n      chartSeries,\n      chartOptions,\n      chartOptions2,\n      totalsales: {},\n      icons: {\n        mdiChevronUp,\n        mdiBullseyeArrow,\n      },\n    };\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#chart-stats-total-sales {\n  max-width: 100%;\n  height: auto;\n  .apexcharts-pie {\n    .apexcharts-pie-series .apexcharts-pie-area {\n      stroke-width: 10;\n    }\n  }\n  .apexcharts-canvas {\n    .apexcharts-text {\n      &.apexcharts-datalabel-value {\n        font-weight: 600;\n        font-size: 1.25rem;\n      }\n      &.apexcharts-datalabel-label {\n        font-size: 0.75rem;\n        margin-bottom: 2rem;\n        transform: translateY(-7px);\n      }\n    }\n  }\n}\n\n.v-application {\n  &.theme--dark {\n    #chart-stats-total-sales {\n      path {\n        stroke: #312d4b;\n      }\n    }\n  }\n}\n</style>\n"]}]}