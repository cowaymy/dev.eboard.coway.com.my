{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue","mtime":1709258483415},{"path":"D:\\extrust\\eboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689230669010},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgIkBjb3JlL3ByZXNldC9wcmVzZXQvcGFnZXMvYXV0aC5zY3NzIjsK"},{"version":3,"sources":["AccountSettingASQRCodeSettingResult.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA","file":"AccountSettingASQRCodeSettingResult.vue","sourceRoot":"src/views/account-settings","sourcesContent":["<template>\n  <v-card color=\"text-center\">\n    <v-card-text class=\"d-flex flex-column justify-center align-center\">\n      <!-- <v-avatar\n\t\t\t\tcolor=\"success\"\n\t\t\t\tclass=\"v-avatar-light-bg primary--text mt-10\"\n\t\t\t\ticon\n\t\t\t\tsize=\"100\"\n\t\t\t> -->\n      <v-icon size=\"4rem\" :color=\"proColor\">\n        {{ proIcon }}\n      </v-icon>\n      <!-- </v-avatar> -->\n      <h6 class=\"text-5xl mt-4 font-weight-semibold\">{{ proText }}</h6>\n    </v-card-text>\n    <v-card-text>\n      {{ resultMessage }}\n    </v-card-text>\n    <!-- <v-card-text>\n\t\t\t<v-btn\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclass=\"mt-4\"\n\t\t\t\t@click.native=\"$router.push('AttendHistory')\"\n\t\t\t>\n\t\t\t\tcheck Histroy</v-btn\n\t\t\t>\n\t\t</v-card-text> -->\n  </v-card>\n</template>\n\n<script>\nimport {\n  mdiClose,\n  mdiCheckBold,\n  mdiCheckDecagramOutline,\n  mdiHelpCircleOutline,\n  //mdiCheckUnderline,\n  //mdiAlertCircleOutline,\n  mdiAlertCircleCheck,\n  mdiCommentProcessingOutline,\n  mdiCheckCircle,\n  mdiAlertCircleOutline,\n} from \"@mdi/js\";\n\nimport { getMonthName, getDate } from \"../../utils/validation\";\nimport baseApi from \"../../api/index.js\";\n\nexport default {\n  name: \"AccountSettingASQRCodeSettingResult\",\n  components: {},\n  props: {\n    scandata: { type: String, default: \"\" },\n    // resultCode: { type: String, default::'' 'fail' },\n    // resultMessage: { type: String, default: '' },\n  },\n  data() {\n    console.log(this.scandata.data);\n    return {\n      // icon\n      icons: {\n        mdiClose,\n      },\n\n      month: getMonthName(),\n      ndate: getDate(),\n      mdiCheckBold,\n      mdiCheckDecagramOutline,\n      mdiHelpCircleOutline,\n      proColor: \"secondary\",\n      proText: \"\",\n      proIcon: mdiAlertCircleCheck,\n      resultCode: \"process\",\n      resultMessage: null,\n      mdiCheckCircle,\n    };\n  },\n\n  computed: {},\n  created() {\n    console.log(\"======>\" + this.scandata);\n\n    this.initProgress();\n    this.updateAttendData();\n  },\n  methods: {\n    goToAttendHisty() {\n      //console.log('1231');\n    },\n    initProgress() {\n      if (this.resultCode == \"process\") {\n        this.proColor = \"secondary \";\n        this.proText = \"progress\";\n        this.resultMessage = \"validation in progress...\";\n        this.proIcon = mdiCommentProcessingOutline;\n      }\n    },\n\n    /**\n     *\n     */\n    updateProgress(data) {\n      console.log(data);\n      if (data.success) {\n        this.proColor = \"success\";\n        this.proText = \"Success\";\n        this.resultMessage = data.message;\n        this.proIcon = mdiCheckCircle;\n      } else {\n        this.proColor = \"error\";\n        this.proText = \"Failed\";\n        this.resultMessage = data.message;\n        this.proIcon = mdiAlertCircleOutline;\n      }\n    },\n\n    async updateAttendData() {\n      console.log(this.scandata);\n\n      //{\"deviceId\":\"3f71f820c5781065\",\"c urrentTime\":\"09:47:04\" ,date:\"yyyymmdd\"}\n\n      try {\n        const param = this.scandata;\n        let obj = JSON.parse(param);\n\n        console.log(obj);\n\n        const payload = {\n          scanDate: obj.date,\n          scanTime: obj.currentTime,\n          scanDevice: obj.deviceId,\n          userName: this.$store.state.userInfo.userName,\n          userBranchId: this.$store.state.userInfo.businessAreaId,\n          userBranchName: this.$store.state.userInfo.businessAreaDesc,\n          userBranchCode: this.$store.state.userInfo.code,\n          userBranchLatitude: obj.branchLatitude,\n          userBranchLongitude: obj.branchLongitude,\n        };\n\n        const { data } = await baseApi.updateAttendQRBranchData(payload);\n\n        this.updateProgress(data);\n      } catch (e) {\n        console.log(e.toString());\n        let data = new Object();\n        data.success = false;\n        data.message = e.toString();\n        this.updateProgress(data);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@core/preset/preset/pages/auth.scss\";\n</style>\n"]}]}