{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\performance\\netSales\\netSalesReport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\performance\\netSales\\netSalesReport.vue","mtime":1710841857644},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["netSalesReport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA","file":"netSalesReport.vue","sourceRoot":"src/views/performance/netSales","sourcesContent":["<template>\r\n    <v-row>\r\n        <v-col cols=\"12\" md=\"3\" class=\"align-center\">\r\n            <v-card  class=\"scroll-card\">\r\n                <v-card-text >\r\n                    <apexchart   ref=\"chart\" type=\"bar\" :options=\"chartOptions\" :series=\"chartSeries\" height=\"350\"  @click=\"handleChartClick\"/>\r\n                </v-card-text >\r\n            </v-card>\r\n        \r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"9\" >\r\n            <v-card class=\"scroll-card\">\r\n                <v-card-text >\r\n                        <apexchart ref=\"chart2\" type=\"bar\" :options=\"chartOptions2\" :series=\"chartSeries2\" height=\"350\"  />\r\n\r\n                </v-card-text>\r\n            </v-card>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" md=\"4\">\r\n            <netSalesLevel2Report/>\r\n        </v-col>\r\n        \r\n        <v-col cols=\"12\" md=\"4\">\r\n          <netSalesLevel3Report/>\r\n        </v-col>\r\n              \r\n        <v-col cols=\"12\" md=\"4\">\r\n          <netSalesLevel4Report/>\r\n        </v-col>\r\n    </v-row>\r\n  </template>\r\n  \r\n  <script>\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport netSalesLevel2Report from \"./netSalesLevel2Report\";\r\nimport netSalesLevel3Report from \"./netSalesLevel3Report\";\r\nimport netSalesLevel4Report from \"./netSalesLevel4Report\";\r\n\r\nimport store from \"@/store\";\r\nimport netSalesStoreModule from \"./netSalesStoreModule\";\r\nconst  performanceNetSales  = \"appPerformanceNetSales\";\r\n\r\n\r\nexport default {\r\n    components: {\r\n      apexchart: VueApexCharts,netSalesLevel2Report ,netSalesLevel3Report,netSalesLevel4Report\r\n    },\r\n    data() {\r\n      \r\n      if (!store.hasModule(performanceNetSales)) {\r\n          store.registerModule( performanceNetSales,netSalesStoreModule );\r\n      }\r\n\r\n\r\n      return {\r\n        chartData :[],\r\n        chartOptions: {\r\n          chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 800,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 250\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350\r\n                }\r\n            },\r\n            events: {\r\n                click: function(event, chartContext, config) {\r\n                    // The last parameter config contains additional information like `seriesIndex` and `dataPointIndex` for cartesian charts\r\n                    console.log(event);\r\n                }\r\n            }\r\n          },\r\n          plotOptions: {\r\n            bar: {\r\n              horizontal: false,\r\n            },\r\n          },\r\n          xaxis: {\r\n            categories: ['NetSales'], // X축 카테고리\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n          },\r\n          fill: {\r\n            opacity: 10,\r\n          },\r\n         \r\n        },\r\n        selectedBarIndex: null, // 클릭된 막대 그래프의 인덱스를 저장하는 변수\r\n      };\r\n    },\r\n\r\n\r\n    computed: {\r\n        chartSeries2() {\r\n          return[\r\n              {\r\n                name: '당월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemNetSalesLevel1List\r\n              },\r\n              {\r\n                name: '전월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPMNetSalesLevel1List\r\n              },\r\n              {\r\n                name: '전년 동월 NetSales',\r\n                data : this.$store.state.appPerformanceNetSales.dataNameItemPYNetSalesLevel1List\r\n              }\r\n         ]\r\n        },\r\n\r\n\r\n        chartSeries(){\r\n             return  [\r\n                    {\r\n                      name: '당월 NetSales',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemCTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: '전월 NetSales',\r\n                      data:this.$store.state.appPerformanceNetSales.dataNameItemPMTotalNetSalesLevel1List, \r\n                    },\r\n                    {\r\n                      name: '전년동월 NetSales',\r\n                      data: this.$store.state.appPerformanceNetSales.dataNameItemPYTotalNetSalesLevel1List,\r\n                    }\r\n            ]\r\n        },\r\n\r\n\r\n        likesSomeTarget() {\r\n             return this.selectedFilter.length > 0 && !this.clickAllTarget;\r\n        },\r\n\r\n        categories(){\r\n          return this.$store.state.appPerformanceNetSales.dataNameItemLevel1List;\r\n        },\r\n\r\n        chartOptions2() {\r\n           return { \r\n                chart: {\r\n                      type: 'bar',\r\n                      height: 350,\r\n                      stacked: false, // 멀티 막대 차트를 스택으로 설정합니다.\r\n                      animations: {\r\n                          enabled: true,\r\n                          easing: 'easeinout',\r\n                          speed: 800,\r\n                          animateGradually: {\r\n                              enabled: true,\r\n                              delay: 250\r\n                          },\r\n                          dynamicAnimation: {\r\n                              enabled: true,\r\n                              speed: 350\r\n                          }\r\n                },\r\n                events: {\r\n                      click: function(event, chartContext, config) {\r\n                          const ov = {index:config.dataPointIndex};\r\n                          store.dispatch(`${performanceNetSales}/fetchLevel2Events`,ov);\r\n                      }\r\n                  }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                      horizontal: false,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: this.categories\r\n                },\r\n                legend: {\r\n                    position: 'top',\r\n                },\r\n                fill: {\r\n                    opacity: 10,\r\n                },\r\n            }\r\n        },\r\n\r\n    \r\n    },\r\n    \r\n    methods:{\r\n\r\n        getCTotoalNetSalesforLevel1categories() {\r\n            store.dispatch(`${performanceNetSales}/fetchGetTotalNestSalesLevel1`);\r\n        },\r\n      \r\n        getNameforLevel1categories() {\r\n          store.dispatch(`${performanceNetSales}/fetchGetNameLevel1`);\r\n        },\r\n\r\n        getCNetSalesforLevel1categories(){\r\n          store.dispatch(`${performanceNetSales}/fetchGetNestSalesLevel1`);\r\n        },\r\n\r\n\r\n        handleChartClick(event, chartContext, config) {\r\n            const seriesIndex = config.seriesIndex;\r\n            const dataPointIndex = config.dataPointIndex;\r\n            // 클릭된 막대 그래프의 인덱스를 저장\r\n            this.selectedBarIndex = dataPointIndex;\r\n\r\n            console.log(seriesIndex)\r\n            console.log(config)\r\n\r\n            this.getNameforLevel1categories();\r\n            this.getCNetSalesforLevel1categories();\r\n\r\n            \r\n        },\r\n        \r\n       \r\n\r\n        // getBarColor(index) {\r\n        //     console.log(index)\r\n        //     // 클릭된 막대 그래프의 인덱스와 현재 막대 그래프의 인덱스가 같으면 특정 색상으로 변경\r\n        //     return index === this.selectedBarIndex ? '#FF5733' : null;\r\n        // },\r\n      },\r\n\r\n      created(){\r\n          this.getCTotoalNetSalesforLevel1categories();\r\n      },\r\n\r\n    \r\n  };\r\n  </script>\r\n  \r\n\r\n  <style scoped>\r\n    .scroll-card {\r\n        overflow-x: auto;\r\n    }\r\n  </style>"]}]}