{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\notification\\NotificationItemDetailEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\notification\\NotificationItemDetailEdit.vue","mtime":1710315523268},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NotificationItemDetailEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2LA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"NotificationItemDetailEdit.vue","sourceRoot":"src/views/notification","sourcesContent":["<template>\r\n  <v-card flat class=\"pa-3\">\r\n    <v-form class=\"multi-col-validation\" @submit.prevent=\"submitForm\">\r\n\r\n      <v-card-text class=\"pt-5\">\r\n        <v-row class=\"fill-height \">          \r\n          <v-col cols=\"12\">\r\n            <v-text-field\r\n              v-model=\"subject\"\r\n              label=\"Subject\"\r\n              dense\r\n              hide-details\r\n              outlined\r\n            ></v-text-field>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\">\r\n            <div class=\"example\">\r\n                <quill-editor\r\n                  ref=\"quillio\"\r\n                  class=\"editor\"\r\n                  v-model=\"contents\"\r\n                  :options=\"editorOption\"\r\n                  placeholder= \"Insert text here ...\"\r\n                  @blur=\"onEditorBlur($event)\"\r\n                  @focus=\"onEditorFocus($event)\"\r\n                  @ready=\"onEditorReady($event)\"\r\n                />\r\n              </div>\r\n            </v-col>\r\n            <v-divider></v-divider>\r\n          <v-col cols=\"12\" md=\"6\">\r\n          <div>\r\n            <v-dialog\r\n              ref=\"dialog\"\r\n              v-model=\"smodal\"\r\n              :return-value.sync=\"date\"\r\n              persistent\r\n              width=\"290px\"\r\n            >\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-text-field\r\n                  v-model=\"date\"\r\n                  label=\"Start Date\"\r\n                  :prepend-icon=\"icons.mdiCalendar\"\r\n                  readonly\r\n                  v-bind=\"attrs\"\r\n                  v-on=\"on\"\r\n                ></v-text-field>\r\n              </template>\r\n\r\n              <v-date-picker v-model=\"date\" scrollable color=\"primary\">\r\n                <v-btn text color=\"primary\" @click=\"smodal = false\">\r\n                  Cancel\r\n                </v-btn>\r\n                <v-btn text color=\"primary\" @click=\"$refs.dialog.save(date)\">\r\n                  OK\r\n                </v-btn>\r\n              </v-date-picker>\r\n            </v-dialog>\r\n          </div>\r\n        </v-col>\r\n     \r\n        <v-col cols=\"12\" md=\"6\">\r\n          <v-dialog\r\n            ref=\"dialog2\"\r\n            v-model=\"emodal\"\r\n            :return-value.sync=\"enddate\"\r\n            persistent\r\n            width=\"290px\"\r\n          >\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-text-field\r\n                v-model=\"enddate\"\r\n                label=\"End Date\"\r\n                :prepend-icon=\"icons.mdiCalendar\"\r\n                readonly\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n              ></v-text-field>\r\n            </template>\r\n            <v-date-picker v-model=\"enddate\" scrollable color=\"primary\">\r\n              <v-btn text color=\"primary\" @click=\"emodal = false\">\r\n                Cancel\r\n              </v-btn>\r\n              <v-btn text color=\"primary\" @click=\"$refs.dialog2.save(enddate)\">\r\n                OK\r\n              </v-btn>\r\n            </v-date-picker>\r\n          </v-dialog>\r\n        </v-col>\r\n       \r\n        <v-col cols=\"12\" md=\"6\">\r\n          <label class=\"text-1xl font-weight-semibold\">Target </label>\r\n          <v-treeview\r\n            v-model=\"selection\"\r\n            :items=\"items\"\r\n            :selection-type=\"selectionType\"\r\n            selectable\r\n            return-object\r\n            @input=\"handleInput\"\r\n          ></v-treeview>\r\n        </v-col>\r\n        <v-divider vertical></v-divider>\r\n\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <template v-if=\"!selection.length\"> No nodes selected. </template>\r\n          <template v-else>\r\n            <div>\r\n              <v-chip-group\r\n                column\r\n                active-class=\"primary accent-4  font-weight-semibold\"\r\n              >\r\n                <v-chip v-for=\"node in selection\" :key=\"node.id\">\r\n                  {{ node.name }}\r\n                </v-chip>\r\n              </v-chip-group>\r\n            </div>\r\n          </template>\r\n        </v-col>\r\n        <v-divider></v-divider>\r\n\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <label class=\"text-1xl font-weight-semibold\">Use </label>\r\n          <v-switch\r\n            v-model=\"useYn\"\r\n            :label=\"`${useYn.toString()}`\"\r\n            hide-details\r\n          ></v-switch>\r\n        </v-col>\r\n\r\n\r\n        <v-col cols=\"12\" md=\"6\">\r\n          <label class=\"text-1xl font-weight-semibold\">Notification Type</label>\r\n          <v-radio-group v-model=\"nType\" mandatory row>\r\n            <v-radio label=\"Emergency\" value=\"E\"></v-radio>\r\n            <v-radio label=\"Normal\" value=\"N\"></v-radio>\r\n          </v-radio-group>\r\n        </v-col>\r\n        <v-col cols=\"12\">\r\n         \r\n          <div>\r\n              <!-- 파일 업로드 컴포넌트 -->\r\n              <vue-dropzone\r\n                ref=\"dropzone\"\r\n                id=\"dropzone\"\r\n                :destroyDropzone=false \r\n                :options=\"dropzoneOptions\"\r\n                @vdropzone-success=\"onSuccess\"\r\n                @vdropzone-error=\"onError\"\r\n                @vdropzone-complete=\"onComplete\"\r\n                @vdropzone-removed-file=\"onRemovedfile\"\r\n              ></vue-dropzone>\r\n                        \r\n              <!-- 업로드된 파일 목록 -->\r\n              <ul>\r\n                <li v-for=\"(file, index) in uploadedFiles\" :key=\"index\">{{ file.name }}</li>\r\n              </ul>\r\n          </div>\r\n        </v-col>\r\n      </v-row>  \r\n      </v-card-text>\r\n      <v-card-actions>\r\n        <router-link\r\n            class=\"font-weight-medium text-decoration-none\"\r\n            :to=\"{ name: 'NotificationList'}\"\r\n          >\r\n              <v-btn  color=\"info\"  >\r\n                        <v-icon> \r\n                        {{ icons.mdiBackburger }}\r\n                        </v-icon>\r\n                        <span>LIST</span>\r\n              </v-btn>\r\n        </router-link>\r\n\r\n   \r\n\r\n        <v-spacer></v-spacer> \r\n        <v-btn color=\"primary\" type=\"submit\" :disabled=\"btIsActive\">\r\n            Submit\r\n        </v-btn>\r\n      </v-card-actions>\r\n    </v-form>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar ,mdiBackburger} from \"@mdi/js\";\r\n\r\nimport bus from \"../../utils/bus\";\r\nimport utils from \"../../utils/utils\";\r\nimport comApi from \"../../api/index\";\r\n\r\n\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\n\r\n// import { quillEditor } from 'vue-quill-editor'\r\n\r\nimport { quillEditor } from 'vue-quill-editor';\r\n\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\r\nimport vueDropzone from 'vue2-dropzone';\r\n\r\nexport default {\r\n\r\n  components: {\r\n    quillEditor ,vueDropzone\r\n  },\r\n\r\n  data() {\r\n    const useYn = true;\r\n\r\n  \r\n    const date = new Date().toISOString().substr(0, 10);\r\n    const enddate = new Date().toISOString().substr(0, 10);\r\n\r\n    const smodal = \"\";\r\n    const emodal = \"\";\r\n    const nType = \"Emergency\";\r\n    const subject = \"\";\r\n    return {\r\n      selectionType: \"leaf\",\r\n      selection:[],\r\n      date,\r\n      enddate,\r\n      smodal,\r\n      emodal,\r\n      nType,\r\n      useYn,\r\n      subject,\r\n      btIsActive: false,\r\n      selectedFile : null,\r\n      fileGrpId:null,\r\n      icons: { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar ,mdiBackburger},\r\n      contents: '',\r\n      editorOption: {\r\n          modules: {\r\n            toolbar: [\r\n              ['bold', 'italic', 'underline', 'strike'],\r\n              ['blockquote', 'code-block'],\r\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n              [{ 'script': 'sub' }, { 'script': 'super' }],\r\n              [{ 'indent': '-1' }, { 'indent': '+1' }],\r\n              [{ 'direction': 'rtl' }],\r\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n              [{ 'font': [] }],\r\n              [{ 'color': [] }, { 'background': [] }],\r\n              [{ 'align': [] }],\r\n              ['link', 'image', 'video']\r\n            ]\r\n        }  \r\n      },\r\n      dropzoneOptions: {\r\n        url: 'http://localhost:3000/apps/api/upload/mFileUpload', // 파일 업로드를 처리할 서버의 엔드포인트\r\n        paramName: 'file', // 서버로 전송될 파일의 이름\r\n        maxFilesize: 5, // 최대 파일 크기 (MB)\r\n        // acceptedFiles: '.jpg, .jpeg, .png, .gif', // 허용되는 파일 형식\r\n        headers: { \"My-Awesome-Header\": \"header value\" },\r\n        addRemoveLinks: true,\r\n      },\r\n      uploadedFiles: [] // 업로드된 파일 목록을 저장할 배열\r\n    };\r\n  },\r\n\r\n  methods: {\r\n\r\n    \r\n    unescapeHTML(str){\r\n        return utils.unescapeHTML(str);\r\n    },\r\n\r\n    onSuccess(file, response) {\r\n      console.log('파일 업로드 성공:', file, response.path);\r\n      this.uploadedFiles.push(file);\r\n    },\r\n    onError(file, error, xhr) {\r\n      console.error('파일 업로드 실패:', file, error, xhr);\r\n    },\r\n    onComplete(file) {\r\n      //console.log('파일 업로드 완료:', JSON.parse(file.xhr.response.path));\r\n    },\r\n\r\n    onRemovedfile(file){\r\n      console.log('파일  삭제 :', file);\r\n      this.removeFile(file) ;\r\n    },\r\n\r\n\r\n    //set tartget value\r\n    handleInput(value){\r\n    },\r\n\r\n    async removeFile(file) {\r\n      const obj ={fileName:file.name }\r\n      const {data} = await comApi.removeFile(obj);\r\n      console.log('removed ::::', data);\r\n    },\r\n\r\n    async selectNotification() {\r\n        if( this.$route.query.id != undefined){\r\n            const obj ={ID:this.$route.query.id}\r\n            const data = await comApi.getNotification(obj);\r\n            if(data.data.dataList){\r\n                this.item = data.data.dataList[0];\r\n               // console.log(data.data.dataList[0]);\r\n                this.contents = this.unescapeHTML(data.data.dataList[0].CONTENTS);\r\n                this.subject =  this.unescapeHTML(data.data.dataList[0].SUBJECT);\r\n\r\n                this.date= this.unescapeHTML(data.data.dataList[0].STD_DATE);\r\n                this.enddate=this.unescapeHTML(data.data.dataList[0].END_DATE);\r\n\r\n                let t = data.data.dataList[0].TARGET.split('^');\r\n                t.forEach((e) =>{\r\n                   if(e !=\"\"){\r\n                    let tJson ={'id': e, 'name' : e };\r\n                    this.selection.push(tJson);\r\n                   }\r\n                });\r\n                \r\n                //console.log()\r\n                this.nType = data.data.dataList[0].TYPE =='E' ? 'E' : 'N';\r\n                this.useYn = data.data.dataList[0].STATUS =='A' ? true : false ;\r\n                \r\n                //this.contents = data.data.dataList[0].CONTENTS;\r\n                this.userImg = `https://epapanapis.malaysia.coway.do/users/${data.data.dataList[0].imgPath}`\r\n            }\r\n        } \r\n    },\r\n\r\n    changeItemValue(itemId, newValue) {\r\n      const item = this.findItemById(this.items, itemId);\r\n      if (item) {\r\n        item.checked = true;\r\n      }\r\n    },\r\n\r\n    findItemById(items, id) {\r\n      for (const item of items) {\r\n        if (item.id === id) {\r\n          return item;\r\n        }\r\n        if (item.children) {\r\n          const found = this.findItemById(item.children, id);\r\n          if (found) {\r\n            return found;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    },\r\n\r\n    async selectAttachedFiles() {\r\n        if( this.$route.query.id != undefined){\r\n            const obj ={ID:this.$route.query.id }\r\n            const {data} = await comApi.selectAttachedNotificationFiles(obj);\r\n           \r\n           // console.log(data)\r\n            this.files = data.dataList;\r\n            \r\n            data.dataList.forEach(e =>{\r\n                if(e.size>0){\r\n                    var file = { size: e.size, name: e.file_Path , type: e.mime_type };\r\n                    var url = `http://localhost:3000/${e.fileurl}`;\r\n                    this.$refs.dropzone.manuallyAddFile(file ,url);\r\n                    this.fileGrpId = e.file_Grp_Id;\r\n                }\r\n            }); \r\n        } \r\n    },\r\n\r\n\r\n    async submitForm() {\r\n      try {\r\n          let target = \"\";\r\n          this.selection.forEach(function (v) {\r\n           // console.log(v);\r\n            target += \"^\" + v.id;\r\n          });\r\n\r\n\r\n        //console.log(this.$refs.dropzone.getAcceptedFiles())\r\n        let uploadedFileId   =[];\r\n        let uploadedFileName =[];\r\n        let uploadedFileSize =[];\r\n        let uploadedFileType =[];\r\n        \r\n        this.$refs.dropzone.getAcceptedFiles().forEach(function (v) {\r\n            const obj = JSON.parse(v.xhr.response); \r\n            uploadedFileId.push(obj.path);\r\n            uploadedFileName.push(obj.name);\r\n            uploadedFileSize.push(v.size);\r\n            uploadedFileType.push(v.type);\r\n        });\r\n\r\n        const notiObj = {\r\n            SUBJECT: this.subject,\r\n            CONTENTS:   utils.escapeHtml( this.contents),\r\n            STD_DATE: this.date,\r\n            END_DATE: this.enddate,\r\n            TYPE: this.nType,\r\n            STATUS: this.useYn ? \"A\" : \"P\",\r\n            TARGET: target,\r\n            CRD_USER : this.$store.state.userInfo.userName,\r\n            UPLOAD_FILE_ID: uploadedFileId,\r\n            UPLOAD_FILE_NAME: uploadedFileName,\r\n            UPLOAD_FILE_SIZE: uploadedFileSize,\r\n            UPLOAD_FILE_TYPE: uploadedFileType,\r\n            UPLOAD_FILE_GRP_ID : this.fileGrpId,\r\n            NOTIFI_ID : this.$route.query.id,\r\n            NOTIFI_TRAN_MODE: 'UPD'\r\n        };\r\n        //start spinner\r\n        bus.$emit(\"start:spinner\");\r\n\r\n        const result = await comApi.saveNotification(notiObj);\r\n\r\n        if (result.data.success) {\r\n          this.$toasted\r\n            .success(\"It has been processed\", {\r\n              icon: \"check\",\r\n              position: \"bottom-right\",\r\n              action: {\r\n                text: \"Close\",\r\n                onClick: (e, toastObject) => {\r\n                  this.btIsActive = true;\r\n                  toastObject.goAway(0);\r\n                },\r\n              },\r\n            })\r\n            .goAway(2500);\r\n\r\n          this.btIsActive = true;\r\n        } else {\r\n          this.$toasted.show(result.message);\r\n        }\r\n      } catch (error) {\r\n        console.log(\"=========>\" + error);\r\n        bus.$emit(\"end:spinner\");\r\n      } finally {\r\n        bus.$emit(\"end:spinner\");\r\n      }\r\n    },\r\n\r\n    onEditorBlur(quill) {\r\n      //console.log('editor blur!', quill)\r\n    },\r\n    onEditorFocus(quill) {\r\n      // console.log('editor focus!', quill)\r\n    },\r\n    onEditorReady(quill) {\r\n      // quill.getModule('toolbar').addHandler('image', this.imageButtonClickHandler);\r\n      console.log('editor ready!')\r\n    },\r\n    onEditorChange({ quill, html, text }) {\r\n      // console.log('editor change!', quill, html, text)\r\n      this.content = html\r\n    },\r\n\r\n    fileSelected(file) {\r\n      console.log('선택된 파일:', file);\r\n      // 선택된 파일을 여기서 처리할 수 있습니다.\r\n      this.uploadFile(file);\r\n    },\r\n      \r\n    async uploadFile(vFile) {\r\n      let form = new FormData();\r\n      form.append(\"name\", this.$store.state.userName);\r\n      form.append(\"files\", vFile);\r\n            \r\n      fetch('http://localhost:3000/apps/api/upload/mFileUpload', {\r\n          method: 'POST',\r\n          body: form,\r\n      })\r\n      .then((response) => { \r\n          //console.log(response);\r\n      })\r\n      .catch((error) => {\r\n          console.error(error);\r\n      });\r\n\r\n\r\n\r\n      // //start spinner\r\n      // bus.$emit(\"start:spinner\");\r\n      // const result = await comApi.mfileUpLoad(form);\r\n\r\n      // if (result.data.success) {\r\n      //   this.$toasted\r\n      //     .success(\"It has been processed\", {\r\n      //       icon: \"check\",\r\n      //       position: \"bottom-right\",\r\n      //       action: {\r\n      //         text: \"Close\",\r\n      //         onClick: (e, toastObject) => {\r\n      //           toastObject.goAway(0);\r\n      //         },\r\n      //       },\r\n      //     })\r\n      //     .goAway(2500);\r\n      // }\r\n      // bus.$emit(\"end:spinner\");\r\n      // console.log(result);\r\n    },\r\n  }, \r\n  computed: {\r\n      editor() {\r\n        return this.$refs.quillio.quill\r\n      },\r\n      items(){\r\n          return [ \r\n                    {\r\n                      id: \"ALL\",\r\n                      name: \"ALL\",\r\n                      expanded: true,\r\n                      children: [\r\n                        {\r\n                          id: \"SAL\",\r\n                          name: \"SALES\",    \r\n                          checked: false ,\r\n                          children: [\r\n                            { id: \"GM\", name: \"GM\" ,checked: false },\r\n                            { id: \"SM\", name: \"SM\" ,checked: false },\r\n                            { id: \"HM\", name: \"HM\" ,checked: false },\r\n                            { id: \"HP\", name: \"HP\" ,checked: false },\r\n                          ],\r\n                        },\r\n                        {\r\n                          id: \"COD\",\r\n                          name: \"CODY\",\r\n                          checked: false ,\r\n                          children: [\r\n                            { id: \"GCM\", name: \"GCM\" ,checked: false  },\r\n                            { id: \"SCM\", name: \"SCM\" ,checked: false },\r\n                            { id: \"CM\", name: \"CM\" ,checked: false },\r\n                            { id: \"CODY\", name: \"CODY\" ,checked: false },\r\n                          ],\r\n                        },\r\n                      ],\r\n                    },\r\n                 ];\r\n        }\r\n    },\r\n  mounted() {\r\n    //console.log('this is current quill instance object', this.editor);\r\n    this.selectNotification();\r\n    this.selectAttachedFiles();\r\n  }\r\n\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .example {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 23rem;\r\n    .editor {\r\n      height: 15rem;\r\n      margin-bottom: 0;\r\n    }\r\n  \r\n  }\r\n</style>"]}]}