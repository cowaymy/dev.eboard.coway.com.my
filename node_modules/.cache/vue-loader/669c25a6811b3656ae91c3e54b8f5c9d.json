{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingAttendScanQRCodeSetting.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingAttendScanQRCodeSetting.vue","mtime":1709258483415},{"path":"D:\\extrust\\eboard\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1689230669010},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJAY29yZS9wcmVzZXQvcHJlc2V0L3BhZ2VzL2F1dGguc2NzcyI7CiNjYW1lcmEgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBjb2xvcjogIzJjM2U1MDsKfQojdmlkZW8gewogIGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7Cn0KI2NhbnZhcyB7CiAgZGlzcGxheTogbm9uZTsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lOwogIHBhZGRpbmc6IDVweDsKfQoudmFsaWRhdGlvbi1zdWNjZXNzLAoudmFsaWRhdGlvbi1mYWlsdXJlLAoudmFsaWRhdGlvbi1wZW5kaW5nIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwoKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGZvbnQtc2l6ZTogMS40cmVtOwogIHBhZGRpbmc6IDEwcHg7CgogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Ci52YWxpZGF0aW9uLXN1Y2Nlc3MgewogIGNvbG9yOiBncmVlbjsKfQoudmFsaWRhdGlvbi1mYWlsdXJlIHsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["AccountSettingAttendScanQRCodeSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSettingAttendScanQRCodeSetting.vue","sourceRoot":"src/views/account-settings","sourcesContent":["<template>\n  <div class=\"auth-v1\">\n    <div class=\"auth-inner\">\n      <v-card class=\"auth-card\">\n        <v-card-title class=\"d-flex align-center justify-center py-7\">\n          <qrcode-stream :camera=\"camera\" @decode=\"onDecode\" @init=\"onInit\">\n            <div v-if=\"validationSuccess\" class=\"validation-success\">\n              The attendance check is complete.\n            </div>\n\n            <div v-if=\"validationFailure\" class=\"validation-failure\">\n              This is NOT a URL!\n            </div>\n\n            <div v-if=\"validationPending\" class=\"validation-pending\">\n              Long validation in progress...\n            </div>\n          </qrcode-stream>\n        </v-card-title>\n\n        <v-card-text class=\"d-flex align-center mt-5\">\n          <v-avatar\n            size=\"54\"\n            rounded\n            color=\"primary\"\n            class=\"v-avatar-light-bg primary--text mt-1\"\n          >\n            <div>\n              <span class=\"font-weight-medium\">\n                {{ month }}\n              </span>\n              <p class=\"text-xl primary--text font-weight-bold mb-0\">\n                {{ ndate }}\n              </p>\n            </div>\n          </v-avatar>\n\n          <div class=\"ms-3\">\n            <h4 class=\"text-base font-weight-semibold\">\n              {{ this.$store.state.userInfo.userName }}\n            </h4>\n            <p class=\"text-xs mb-0\">Please scan QRcode in the sales office</p>\n          </div>\n        </v-card-text>\n\n        <v-card-text>\n          <v-divider></v-divider>\n        </v-card-text>\n\n        <template v-if=\"validationSuccess\">\n          <v-card-text class=\"d-flex align-center mt-5\">\n            <v-avatar size=\"54\" rounded>\n              <v-icon size=\"30\" color=\"success\"> {{ mdiCheckBold }} </v-icon>\n            </v-avatar>\n\n            <div class=\"ms-3\">\n              <p class=\"text-xs mb-0\">{{ result }}</p>\n            </div>\n          </v-card-text>\n        </template>\n        <template v-if=\"validationFailure\">\n          <v-card-text class=\"d-flex align-center mt-5\">\n            <v-avatar size=\"54\" rounded>\n              <v-icon size=\"30\" color=\"error\">\n                {{ mdiCheckDecagramOutline }}\n              </v-icon>\n            </v-avatar>\n\n            <div class=\"ms-3\">\n              <p class=\"text-xs mb-0\">{{ result }}</p>\n            </div>\n          </v-card-text>\n        </template>\n      </v-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mdiClose, mdiCheckBold, mdiCheckDecagramOutline } from \"@mdi/js\";\n\nimport { QrcodeStream } from \"vue-qrcode-reader\";\n\nimport { getMonthName, getDate } from \"../../utils/validation\";\n\nexport default {\n  components: { QrcodeStream },\n  data() {\n    return {\n      // icon\n      icons: {\n        mdiClose,\n      },\n      isValid: undefined,\n      camera: \"auto\",\n      result: null,\n      month: getMonthName(),\n      ndate: getDate(),\n      mdiCheckBold,\n      mdiCheckDecagramOutline,\n    };\n  },\n\n  computed: {\n    validationPending() {\n      return this.isValid === undefined && this.camera === \"off\";\n    },\n\n    validationSuccess() {\n      return this.isValid === true;\n    },\n\n    validationFailure() {\n      return this.isValid === false;\n    },\n  },\n  methods: {\n    onInit(promise) {\n      promise.catch(console.error).then(this.resetValidationState);\n    },\n\n    resetValidationState() {\n      this.isValid = undefined;\n    },\n\n    async onDecode(content) {\n      this.result = content;\n      this.turnCameraOff();\n\n      //this.isValid = content.startsWith('http');\n\n      // pretend it's taking really long\n      //await this.timeout(1000);\n\n      // some more delay, so users have time to read the message\n      //await this.timeout(100);\n\n      this.turnCameraOn();\n\n      console.log(content);\n      this.$router.push({\n        name: \"AttendScanQRSettingResult\",\n        params: { scandata: content },\n      });\n    },\n\n    turnCameraOn() {\n      this.camera = \"auto\";\n    },\n\n    turnCameraOff() {\n      this.camera = \"off\";\n    },\n\n    timeout(ms) {\n      return new Promise((resolve) => {\n        window.setTimeout(resolve, ms);\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@core/preset/preset/pages/auth.scss\";\n#camera {\n  text-align: center;\n  color: #2c3e50;\n}\n#video {\n  background-color: #000000;\n}\n#canvas {\n  display: none;\n}\nli {\n  display: inline;\n  padding: 5px;\n}\n.validation-success,\n.validation-failure,\n.validation-pending {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(255, 255, 255, 0.8);\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.4rem;\n  padding: 10px;\n\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n}\n.validation-success {\n  color: green;\n}\n.validation-failure {\n  color: red;\n}\n</style>\n"]}]}