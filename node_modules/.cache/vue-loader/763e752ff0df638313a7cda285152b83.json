{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue","mtime":1709258483415},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgbWRpQ2xvc2UsCiAgbWRpQ2hlY2tCb2xkLAogIG1kaUNoZWNrRGVjYWdyYW1PdXRsaW5lLAogIG1kaUhlbHBDaXJjbGVPdXRsaW5lLAogIC8vbWRpQ2hlY2tVbmRlcmxpbmUsCiAgLy9tZGlBbGVydENpcmNsZU91dGxpbmUsCiAgbWRpQWxlcnRDaXJjbGVDaGVjaywKICBtZGlDb21tZW50UHJvY2Vzc2luZ091dGxpbmUsCiAgbWRpQ2hlY2tDaXJjbGUsCiAgbWRpQWxlcnRDaXJjbGVPdXRsaW5lLAp9IGZyb20gIkBtZGkvanMiOwoKaW1wb3J0IHsgZ2V0TW9udGhOYW1lLCBnZXREYXRlIH0gZnJvbSAiLi4vLi4vdXRpbHMvdmFsaWRhdGlvbiI7CmltcG9ydCBiYXNlQXBpIGZyb20gIi4uLy4uL2FwaS9pbmRleC5qcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkFjY291bnRTZXR0aW5nQVNRUkNvZGVTZXR0aW5nUmVzdWx0IiwKICBjb21wb25lbnRzOiB7fSwKICBwcm9wczogewogICAgc2NhbmRhdGE6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAiIiB9LAogICAgLy8gcmVzdWx0Q29kZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6OicnICdmYWlsJyB9LAogICAgLy8gcmVzdWx0TWVzc2FnZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0sCiAgfSwKICBkYXRhKCkgewogICAgY29uc29sZS5sb2codGhpcy5zY2FuZGF0YS5kYXRhKTsKICAgIHJldHVybiB7CiAgICAgIC8vIGljb24KICAgICAgaWNvbnM6IHsKICAgICAgICBtZGlDbG9zZSwKICAgICAgfSwKCiAgICAgIG1vbnRoOiBnZXRNb250aE5hbWUoKSwKICAgICAgbmRhdGU6IGdldERhdGUoKSwKICAgICAgbWRpQ2hlY2tCb2xkLAogICAgICBtZGlDaGVja0RlY2FncmFtT3V0bGluZSwKICAgICAgbWRpSGVscENpcmNsZU91dGxpbmUsCiAgICAgIHByb0NvbG9yOiAic2Vjb25kYXJ5IiwKICAgICAgcHJvVGV4dDogIiIsCiAgICAgIHByb0ljb246IG1kaUFsZXJ0Q2lyY2xlQ2hlY2ssCiAgICAgIHJlc3VsdENvZGU6ICJwcm9jZXNzIiwKICAgICAgcmVzdWx0TWVzc2FnZTogbnVsbCwKICAgICAgbWRpQ2hlY2tDaXJjbGUsCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7fSwKICBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2coIj09PT09PT4iICsgdGhpcy5zY2FuZGF0YSk7CgogICAgdGhpcy5pbml0UHJvZ3Jlc3MoKTsKICAgIHRoaXMudXBkYXRlQXR0ZW5kRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ29Ub0F0dGVuZEhpc3R5KCkgewogICAgICAvL2NvbnNvbGUubG9nKCcxMjMxJyk7CiAgICB9LAogICAgaW5pdFByb2dyZXNzKCkgewogICAgICBpZiAodGhpcy5yZXN1bHRDb2RlID09ICJwcm9jZXNzIikgewogICAgICAgIHRoaXMucHJvQ29sb3IgPSAic2Vjb25kYXJ5ICI7CiAgICAgICAgdGhpcy5wcm9UZXh0ID0gInByb2dyZXNzIjsKICAgICAgICB0aGlzLnJlc3VsdE1lc3NhZ2UgPSAidmFsaWRhdGlvbiBpbiBwcm9ncmVzcy4uLiI7CiAgICAgICAgdGhpcy5wcm9JY29uID0gbWRpQ29tbWVudFByb2Nlc3NpbmdPdXRsaW5lOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICoKICAgICAqLwogICAgdXBkYXRlUHJvZ3Jlc3MoZGF0YSkgewogICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgaWYgKGRhdGEuc3VjY2VzcykgewogICAgICAgIHRoaXMucHJvQ29sb3IgPSAic3VjY2VzcyI7CiAgICAgICAgdGhpcy5wcm9UZXh0ID0gIlN1Y2Nlc3MiOwogICAgICAgIHRoaXMucmVzdWx0TWVzc2FnZSA9IGRhdGEubWVzc2FnZTsKICAgICAgICB0aGlzLnByb0ljb24gPSBtZGlDaGVja0NpcmNsZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnByb0NvbG9yID0gImVycm9yIjsKICAgICAgICB0aGlzLnByb1RleHQgPSAiRmFpbGVkIjsKICAgICAgICB0aGlzLnJlc3VsdE1lc3NhZ2UgPSBkYXRhLm1lc3NhZ2U7CiAgICAgICAgdGhpcy5wcm9JY29uID0gbWRpQWxlcnRDaXJjbGVPdXRsaW5lOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIHVwZGF0ZUF0dGVuZERhdGEoKSB7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2NhbmRhdGEpOwoKICAgICAgLy97ImRldmljZUlkIjoiM2Y3MWY4MjBjNTc4MTA2NSIsImMgdXJyZW50VGltZSI6IjA5OjQ3OjA0IiAsZGF0ZToieXl5eW1tZGQifQoKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBwYXJhbSA9IHRoaXMuc2NhbmRhdGE7CiAgICAgICAgbGV0IG9iaiA9IEpTT04ucGFyc2UocGFyYW0pOwoKICAgICAgICBjb25zb2xlLmxvZyhvYmopOwoKICAgICAgICBjb25zdCBwYXlsb2FkID0gewogICAgICAgICAgc2NhbkRhdGU6IG9iai5kYXRlLAogICAgICAgICAgc2NhblRpbWU6IG9iai5jdXJyZW50VGltZSwKICAgICAgICAgIHNjYW5EZXZpY2U6IG9iai5kZXZpY2VJZCwKICAgICAgICAgIHVzZXJOYW1lOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby51c2VyTmFtZSwKICAgICAgICAgIHVzZXJCcmFuY2hJZDogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8uYnVzaW5lc3NBcmVhSWQsCiAgICAgICAgICB1c2VyQnJhbmNoTmFtZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8uYnVzaW5lc3NBcmVhRGVzYywKICAgICAgICAgIHVzZXJCcmFuY2hDb2RlOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby5jb2RlLAogICAgICAgICAgdXNlckJyYW5jaExhdGl0dWRlOiBvYmouYnJhbmNoTGF0aXR1ZGUsCiAgICAgICAgICB1c2VyQnJhbmNoTG9uZ2l0dWRlOiBvYmouYnJhbmNoTG9uZ2l0dWRlLAogICAgICAgIH07CgogICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYmFzZUFwaS51cGRhdGVBdHRlbmRRUkJyYW5jaERhdGEocGF5bG9hZCk7CgogICAgICAgIHRoaXMudXBkYXRlUHJvZ3Jlc3MoZGF0YSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBjb25zb2xlLmxvZyhlLnRvU3RyaW5nKCkpOwogICAgICAgIGxldCBkYXRhID0gbmV3IE9iamVjdCgpOwogICAgICAgIGRhdGEuc3VjY2VzcyA9IGZhbHNlOwogICAgICAgIGRhdGEubWVzc2FnZSA9IGUudG9TdHJpbmcoKTsKICAgICAgICB0aGlzLnVwZGF0ZVByb2dyZXNzKGRhdGEpOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["AccountSettingASQRCodeSettingResult.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSettingASQRCodeSettingResult.vue","sourceRoot":"src/views/account-settings","sourcesContent":["<template>\n  <v-card color=\"text-center\">\n    <v-card-text class=\"d-flex flex-column justify-center align-center\">\n      <!-- <v-avatar\n\t\t\t\tcolor=\"success\"\n\t\t\t\tclass=\"v-avatar-light-bg primary--text mt-10\"\n\t\t\t\ticon\n\t\t\t\tsize=\"100\"\n\t\t\t> -->\n      <v-icon size=\"4rem\" :color=\"proColor\">\n        {{ proIcon }}\n      </v-icon>\n      <!-- </v-avatar> -->\n      <h6 class=\"text-5xl mt-4 font-weight-semibold\">{{ proText }}</h6>\n    </v-card-text>\n    <v-card-text>\n      {{ resultMessage }}\n    </v-card-text>\n    <!-- <v-card-text>\n\t\t\t<v-btn\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclass=\"mt-4\"\n\t\t\t\t@click.native=\"$router.push('AttendHistory')\"\n\t\t\t>\n\t\t\t\tcheck Histroy</v-btn\n\t\t\t>\n\t\t</v-card-text> -->\n  </v-card>\n</template>\n\n<script>\nimport {\n  mdiClose,\n  mdiCheckBold,\n  mdiCheckDecagramOutline,\n  mdiHelpCircleOutline,\n  //mdiCheckUnderline,\n  //mdiAlertCircleOutline,\n  mdiAlertCircleCheck,\n  mdiCommentProcessingOutline,\n  mdiCheckCircle,\n  mdiAlertCircleOutline,\n} from \"@mdi/js\";\n\nimport { getMonthName, getDate } from \"../../utils/validation\";\nimport baseApi from \"../../api/index.js\";\n\nexport default {\n  name: \"AccountSettingASQRCodeSettingResult\",\n  components: {},\n  props: {\n    scandata: { type: String, default: \"\" },\n    // resultCode: { type: String, default::'' 'fail' },\n    // resultMessage: { type: String, default: '' },\n  },\n  data() {\n    console.log(this.scandata.data);\n    return {\n      // icon\n      icons: {\n        mdiClose,\n      },\n\n      month: getMonthName(),\n      ndate: getDate(),\n      mdiCheckBold,\n      mdiCheckDecagramOutline,\n      mdiHelpCircleOutline,\n      proColor: \"secondary\",\n      proText: \"\",\n      proIcon: mdiAlertCircleCheck,\n      resultCode: \"process\",\n      resultMessage: null,\n      mdiCheckCircle,\n    };\n  },\n\n  computed: {},\n  created() {\n    console.log(\"======>\" + this.scandata);\n\n    this.initProgress();\n    this.updateAttendData();\n  },\n  methods: {\n    goToAttendHisty() {\n      //console.log('1231');\n    },\n    initProgress() {\n      if (this.resultCode == \"process\") {\n        this.proColor = \"secondary \";\n        this.proText = \"progress\";\n        this.resultMessage = \"validation in progress...\";\n        this.proIcon = mdiCommentProcessingOutline;\n      }\n    },\n\n    /**\n     *\n     */\n    updateProgress(data) {\n      console.log(data);\n      if (data.success) {\n        this.proColor = \"success\";\n        this.proText = \"Success\";\n        this.resultMessage = data.message;\n        this.proIcon = mdiCheckCircle;\n      } else {\n        this.proColor = \"error\";\n        this.proText = \"Failed\";\n        this.resultMessage = data.message;\n        this.proIcon = mdiAlertCircleOutline;\n      }\n    },\n\n    async updateAttendData() {\n      console.log(this.scandata);\n\n      //{\"deviceId\":\"3f71f820c5781065\",\"c urrentTime\":\"09:47:04\" ,date:\"yyyymmdd\"}\n\n      try {\n        const param = this.scandata;\n        let obj = JSON.parse(param);\n\n        console.log(obj);\n\n        const payload = {\n          scanDate: obj.date,\n          scanTime: obj.currentTime,\n          scanDevice: obj.deviceId,\n          userName: this.$store.state.userInfo.userName,\n          userBranchId: this.$store.state.userInfo.businessAreaId,\n          userBranchName: this.$store.state.userInfo.businessAreaDesc,\n          userBranchCode: this.$store.state.userInfo.code,\n          userBranchLatitude: obj.branchLatitude,\n          userBranchLongitude: obj.branchLongitude,\n        };\n\n        const { data } = await baseApi.updateAttendQRBranchData(payload);\n\n        this.updateProgress(data);\n      } catch (e) {\n        console.log(e.toString());\n        let data = new Object();\n        data.success = false;\n        data.message = e.toString();\n        this.updateProgress(data);\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@core/preset/preset/pages/auth.scss\";\n</style>\n"]}]}