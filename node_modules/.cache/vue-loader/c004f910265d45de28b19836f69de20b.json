{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingsNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingsNotification.vue","mtime":1709628970397},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1kaUNoYXJ0VGltZWxpbmVWYXJpYW50LCBtZGlFbWFpbE91dGxpbmUsIG1kaUNhbGVuZGFyIH0gZnJvbSAiQG1kaS9qcyI7CgppbXBvcnQgYnVzIGZyb20gIi4uLy4uL3V0aWxzL2J1cyI7CmltcG9ydCBjb21BcGkgZnJvbSAiLi4vLi4vYXBpL2luZGV4IjsKaW1wb3J0ICdxdWlsbC9kaXN0L3F1aWxsLmNvcmUuY3NzJwppbXBvcnQgJ3F1aWxsL2Rpc3QvcXVpbGwuc25vdy5jc3MnCmltcG9ydCAncXVpbGwvZGlzdC9xdWlsbC5idWJibGUuY3NzJwoKaW1wb3J0IHsgcXVpbGxFZGl0b3IgfSBmcm9tICd2dWUtcXVpbGwtZWRpdG9yJwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBub3RpZmljYXRpb25EYXRhOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4ge30sCiAgICB9LAogIH0sCgogIGNvbXBvbmVudHM6IHsKICAgIHF1aWxsRWRpdG9yCiAgfSwKCiAgZGF0YShwcm9wcykgewogICAgY29uc3Qgb3B0aW9uc0xvY2FsZSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocHJvcHMubm90aWZpY2F0aW9uRGF0YSkpOwogICAgY29uc3QgdXNlWW4gPSB0cnVlOwoKICAgIGNvbnN0IGl0ZW1zID0gWwogICAgICB7CiAgICAgICAgaWQ6ICJBTEwiLAogICAgICAgIG5hbWU6ICJBTEwiLAogICAgICAgIGNoaWxkcmVuOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgIGlkOiAiU0FMIiwKICAgICAgICAgICAgbmFtZTogIlNBTEVTIiwKICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICB7IGlkOiAiR00iLCBuYW1lOiAiR00iIH0sCiAgICAgICAgICAgICAgeyBpZDogIlNNIiwgbmFtZTogIlNNIiB9LAogICAgICAgICAgICAgIHsgaWQ6ICJITSIsIG5hbWU6ICJITSIgfSwKICAgICAgICAgICAgICB7IGlkOiAiSFAiLCBuYW1lOiAiSFAiIH0sCiAgICAgICAgICAgIF0sCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBpZDogIkNPRCIsCiAgICAgICAgICAgIG5hbWU6ICJDT0RZIiwKICAgICAgICAgICAgY2hpbGRyZW46IFsKICAgICAgICAgICAgICB7IGlkOiAiR0NNIiwgbmFtZTogIkdDTSIgfSwKICAgICAgICAgICAgICB7IGlkOiAiU0NNIiwgbmFtZTogIlNDTSIgfSwKICAgICAgICAgICAgICB7IGlkOiAiQ00iLCBuYW1lOiAiQ00iIH0sCiAgICAgICAgICAgICAgeyBpZDogIkNPRFkiLCBuYW1lOiAiQ09EWSIgfSwKICAgICAgICAgICAgXSwKICAgICAgICAgIH0sCiAgICAgICAgXSwKICAgICAgfSwKICAgIF07CgogICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApOwogICAgY29uc3QgZW5kZGF0ZSA9IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zdWJzdHIoMCwgMTApOwoKICAgIGNvbnN0IHNtb2RhbCA9ICIiOwogICAgY29uc3QgZW1vZGFsID0gIiI7CiAgICBjb25zdCBuVHlwZSA9ICJFbWVyZ2VuY3kiOwogICAgY29uc3Qgc3ViamVjdCA9ICIiOwogICAgY29uc3QgY29udGVudHMgPSAiIjsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGlvblR5cGU6ICJsZWFmIiwKICAgICAgc2VsZWN0aW9uOiBbXSwKICAgICAgaXRlbXMsCiAgICAgIG9wdGlvbnNMb2NhbGUsCiAgICAgIGRhdGUsCiAgICAgIGVuZGRhdGUsCiAgICAgIHNtb2RhbCwKICAgICAgZW1vZGFsLAogICAgICBuVHlwZSwKICAgICAgdXNlWW4sCiAgICAgIHN1YmplY3QsCiAgICAgIGNvbnRlbnRzLAogICAgICBidElzQWN0aXZlOiBmYWxzZSwKICAgICAgaWNvbnM6IHsgbWRpQ2hhcnRUaW1lbGluZVZhcmlhbnQsIG1kaUVtYWlsT3V0bGluZSwgbWRpQ2FsZW5kYXIgfSwKICAgICAgZWRpdENvbnRlbnQ6ICc8aDI+SSBhbSBFeGFtcGxlPC9oMj4nLAogICAgICAgIGVkaXRvck9wdGlvbjogewogICAgICAgICAgLy8gU29tZSBRdWlsbCBvcHRpb25zLi4uCiAgICAgIH0KICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgc3VibWl0Rm9ybSgpIHsKICAgICAgdHJ5IHsKICAgICAgICBsZXQgdGFyZ2V0ID0gIiI7CiAgICAgICAgdGhpcy5zZWxlY3Rpb24uZm9yRWFjaChmdW5jdGlvbiAodikgewogICAgICAgICAgY29uc29sZS5sb2codik7CiAgICAgICAgICB0YXJnZXQgKz0gIl4iICsgdi5pZDsKICAgICAgICB9KTsKCiAgICAgICAgY29uc3Qgbm90aU9iaiA9IHsKICAgICAgICAgIFNVQkpFQ1Q6IHRoaXMuc3ViamVjdCwKICAgICAgICAgIENPTlRFTlRTOiB0aGlzLmNvbnRlbnRzLAogICAgICAgICAgU1REX0RBVEU6IHRoaXMuZGF0ZSwKICAgICAgICAgIEVORF9EQVRFOiB0aGlzLmVuZGRhdGUsCiAgICAgICAgICBUWVBFOiB0aGlzLm5UeXBlLAogICAgICAgICAgU1RBVFVTOiB0aGlzLnVzZVluID8gIkEiIDogIlAiLAogICAgICAgICAgVEFSR0VUOiB0YXJnZXQsCiAgICAgICAgfTsKICAgICAgICAvL3N0YXJ0IHNwaW5uZXIKICAgICAgICBidXMuJGVtaXQoInN0YXJ0OnNwaW5uZXIiKTsKCiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY29tQXBpLnNhdmVOb3RpZmljYXRpb24obm90aU9iaik7CgogICAgICAgIGlmIChyZXN1bHQuZGF0YS5zdWNjZXNzKSB7CiAgICAgICAgICB0aGlzLiR0b2FzdGVkCiAgICAgICAgICAgIC5zdWNjZXNzKCJJdCBoYXMgYmVlbiBwcm9jZXNzZWQiLCB7CiAgICAgICAgICAgICAgaWNvbjogImNoZWNrIiwKICAgICAgICAgICAgICBwb3NpdGlvbjogImJvdHRvbS1yaWdodCIsCiAgICAgICAgICAgICAgYWN0aW9uOiB7CiAgICAgICAgICAgICAgICB0ZXh0OiAiQ2xvc2UiLAogICAgICAgICAgICAgICAgb25DbGljazogKGUsIHRvYXN0T2JqZWN0KSA9PiB7CiAgICAgICAgICAgICAgICAgIHRoaXMuYnRJc0FjdGl2ZSA9IHRydWU7CiAgICAgICAgICAgICAgICAgIHRvYXN0T2JqZWN0LmdvQXdheSgwKTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmdvQXdheSgyNTAwKTsKCiAgICAgICAgICB0aGlzLmJ0SXNBY3RpdmUgPSB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiR0b2FzdGVkLnNob3cocmVzdWx0Lm1lc3NhZ2UpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygiPT09PT09PT09PiIgKyBlcnJvcik7CiAgICAgICAgYnVzLiRlbWl0KCJlbmQ6c3Bpbm5lciIpOwogICAgICB9IGZpbmFsbHkgewogICAgICAgIGJ1cy4kZW1pdCgiZW5kOnNwaW5uZXIiKTsKICAgICAgfQogICAgfSwKCiAgICBvbkVkaXRvckJsdXIocXVpbGwpIHsKICAgICAgICBjb25zb2xlLmxvZygnZWRpdG9yIGJsdXIhJywgcXVpbGwpCiAgICAgIH0sCiAgICAgIG9uRWRpdG9yRm9jdXMocXVpbGwpIHsKICAgICAgICBjb25zb2xlLmxvZygnZWRpdG9yIGZvY3VzIScsIHF1aWxsKQogICAgICB9LAogICAgICBvbkVkaXRvclJlYWR5KHF1aWxsKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2VkaXRvciByZWFkeSEnLCBxdWlsbCkKICAgICAgfSwKICAgICAgb25FZGl0b3JDaGFuZ2UoeyBxdWlsbCwgaHRtbCwgdGV4dCB9KSB7CiAgICAgICAgY29uc29sZS5sb2coJ2VkaXRvciBjaGFuZ2UhJywgcXVpbGwsIGh0bWwsIHRleHQpCiAgICAgICAgdGhpcy5jb250ZW50ID0gaHRtbAogICAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgICAgZWRpdG9yKCkgewogICAgICAgIHJldHVybiB0aGlzLiRyZWZzLm15UXVpbGxFZGl0b3IucXVpbGwKICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCd0aGlzIGlzIGN1cnJlbnQgcXVpbGwgaW5zdGFuY2Ugb2JqZWN0JywgdGhpcy5lZGl0b3IpCiAgICB9Cgp9Owo="},{"version":3,"sources":["AccountSettingsNotification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"AccountSettingsNotification.vue","sourceRoot":"src/views/account-settings","sourcesContent":["<template>\n  <v-card flat class=\"pa-3\">\n    <v-form class=\"multi-col-validation\" @submit.prevent=\"submitForm\">\n      <v-row>\n        <v-col cols=\"12\" md=\"6\">\n          <v-text-field\n            v-model=\"subject\"\n            label=\"Subject\"\n            dense\n            hide-details\n            outlined\n          ></v-text-field>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <!-- <v-autocomplete\n\t\t\t\t\t\tv-model=\"values\"\n\t\t\t\t\t\t:items=\"items\"\n\t\t\t\t\t\toutlined\n\t\t\t\t\t\tdense\n\t\t\t\t\t\tchips\n\t\t\t\t\t\tsmall-chips\n\t\t\t\t\t\tlabel=\"Notification Channel\"\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t></v-autocomplete> -->\n        </v-col>\n\n        <v-col cols=\"12\">\n          <!-- <v-textarea\n            v-model=\"contents\"\n            label=\"Contents\"\n            outlined\n            rows=\"3\"\n          ></v-textarea> -->\n          <quill-editor\n            ref=\"myQuillEditor\"\n            v-model=\"editContent\"\n            :options=\"editorOption\"\n            @blur=\"onEditorBlur($event)\"\n            @focus=\"onEditorFocus($event)\"\n            @ready=\"onEditorReady($event)\"\n          />\n         </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-dialog\n            ref=\"dialog\"\n            v-model=\"smodal\"\n            :return-value.sync=\"date\"\n            persistent\n            width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"date\"\n                label=\"Start Date\"\n                :prepend-icon=\"icons.mdiCalendar\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n\n            <v-date-picker v-model=\"date\" scrollable color=\"primary\">\n              <v-btn text color=\"primary\" @click=\"smodal = false\">\n                Cancel\n              </v-btn>\n              <v-btn text color=\"primary\" @click=\"$refs.dialog.save(date)\">\n                OK\n              </v-btn>\n            </v-date-picker>\n          </v-dialog>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <v-dialog\n            ref=\"dialog2\"\n            v-model=\"emodal\"\n            :return-value.sync=\"enddate\"\n            persistent\n            width=\"290px\"\n          >\n            <template v-slot:activator=\"{ on, attrs }\">\n              <v-text-field\n                v-model=\"enddate\"\n                label=\"End Date\"\n                :prepend-icon=\"icons.mdiCalendar\"\n                readonly\n                v-bind=\"attrs\"\n                v-on=\"on\"\n              ></v-text-field>\n            </template>\n\n            <v-date-picker v-model=\"enddate\" scrollable color=\"primary\">\n              <v-btn text color=\"primary\" @click=\"emodal = false\">\n                Cancel\n              </v-btn>\n              <v-btn text color=\"primary\" @click=\"$refs.dialog2.save(enddate)\">\n                OK\n              </v-btn>\n            </v-date-picker>\n          </v-dialog>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <label class=\"text-1xl font-weight-semibold\">Target </label>\n          <v-treeview\n            v-model=\"selection\"\n            :items=\"items\"\n            :selection-type=\"selectionType\"\n            selectable\n            return-object\n          ></v-treeview>\n        </v-col>\n        <v-divider vertical></v-divider>\n\n        <v-col cols=\"12\" md=\"6\">\n          <template v-if=\"!selection.length\"> No nodes selected. </template>\n          <template v-else>\n            <div>\n              <v-chip-group\n                column\n                active-class=\"primary accent-4  font-weight-semibold\"\n              >\n                <v-chip v-for=\"node in selection\" :key=\"node.id\">\n                  {{ node.name }}\n                </v-chip>\n              </v-chip-group>\n            </div>\n          </template>\n        </v-col>\n\n        <v-col cols=\"12\" md=\"6\">\n          <label class=\"text-1xl font-weight-semibold\">Use </label>\n          <v-switch\n            v-model=\"useYn\"\n            :label=\"`${useYn.toString()}`\"\n            hide-details\n          ></v-switch>\n        </v-col>\n\n        <v-col cols=\"12\">\n          <label class=\"text-1xl font-weight-semibold\">Notification Type</label>\n          <v-radio-group v-model=\"nType\" mandatory row>\n            <v-radio label=\"Emergency\" value=\"E\"></v-radio>\n            <v-radio label=\"Normal\" value=\"N\"></v-radio>\n          </v-radio-group>\n        </v-col>\n        <v-col offset-md=\"6\" cols=\"12\">\n          <v-btn color=\"primary\" type=\"submit\" :disabled=\"btIsActive\">\n            Submit\n          </v-btn>\n        </v-col>\n      </v-row>\n    </v-form>\n  </v-card>\n\n  <!-- Or manually control the data synchronization -->\n\n\n</template>\n\n<script>\nimport { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar } from \"@mdi/js\";\n\nimport bus from \"../../utils/bus\";\nimport comApi from \"../../api/index\";\nimport 'quill/dist/quill.core.css'\nimport 'quill/dist/quill.snow.css'\nimport 'quill/dist/quill.bubble.css'\n\nimport { quillEditor } from 'vue-quill-editor'\n\nexport default {\n  props: {\n    notificationData: {\n      type: Object,\n      default: () => {},\n    },\n  },\n\n  components: {\n    quillEditor\n  },\n\n  data(props) {\n    const optionsLocale = JSON.parse(JSON.stringify(props.notificationData));\n    const useYn = true;\n\n    const items = [\n      {\n        id: \"ALL\",\n        name: \"ALL\",\n        children: [\n          {\n            id: \"SAL\",\n            name: \"SALES\",\n            children: [\n              { id: \"GM\", name: \"GM\" },\n              { id: \"SM\", name: \"SM\" },\n              { id: \"HM\", name: \"HM\" },\n              { id: \"HP\", name: \"HP\" },\n            ],\n          },\n          {\n            id: \"COD\",\n            name: \"CODY\",\n            children: [\n              { id: \"GCM\", name: \"GCM\" },\n              { id: \"SCM\", name: \"SCM\" },\n              { id: \"CM\", name: \"CM\" },\n              { id: \"CODY\", name: \"CODY\" },\n            ],\n          },\n        ],\n      },\n    ];\n\n    const date = new Date().toISOString().substr(0, 10);\n    const enddate = new Date().toISOString().substr(0, 10);\n\n    const smodal = \"\";\n    const emodal = \"\";\n    const nType = \"Emergency\";\n    const subject = \"\";\n    const contents = \"\";\n    return {\n      selectionType: \"leaf\",\n      selection: [],\n      items,\n      optionsLocale,\n      date,\n      enddate,\n      smodal,\n      emodal,\n      nType,\n      useYn,\n      subject,\n      contents,\n      btIsActive: false,\n      icons: { mdiChartTimelineVariant, mdiEmailOutline, mdiCalendar },\n      editContent: '<h2>I am Example</h2>',\n        editorOption: {\n          // Some Quill options...\n      }\n    };\n  },\n\n  methods: {\n    async submitForm() {\n      try {\n        let target = \"\";\n        this.selection.forEach(function (v) {\n          console.log(v);\n          target += \"^\" + v.id;\n        });\n\n        const notiObj = {\n          SUBJECT: this.subject,\n          CONTENTS: this.contents,\n          STD_DATE: this.date,\n          END_DATE: this.enddate,\n          TYPE: this.nType,\n          STATUS: this.useYn ? \"A\" : \"P\",\n          TARGET: target,\n        };\n        //start spinner\n        bus.$emit(\"start:spinner\");\n\n        const result = await comApi.saveNotification(notiObj);\n\n        if (result.data.success) {\n          this.$toasted\n            .success(\"It has been processed\", {\n              icon: \"check\",\n              position: \"bottom-right\",\n              action: {\n                text: \"Close\",\n                onClick: (e, toastObject) => {\n                  this.btIsActive = true;\n                  toastObject.goAway(0);\n                },\n              },\n            })\n            .goAway(2500);\n\n          this.btIsActive = true;\n        } else {\n          this.$toasted.show(result.message);\n        }\n      } catch (error) {\n        console.log(\"=========>\" + error);\n        bus.$emit(\"end:spinner\");\n      } finally {\n        bus.$emit(\"end:spinner\");\n      }\n    },\n\n    onEditorBlur(quill) {\n        console.log('editor blur!', quill)\n      },\n      onEditorFocus(quill) {\n        console.log('editor focus!', quill)\n      },\n      onEditorReady(quill) {\n        console.log('editor ready!', quill)\n      },\n      onEditorChange({ quill, html, text }) {\n        console.log('editor change!', quill, html, text)\n        this.content = html\n      }\n  },\n\n  computed: {\n      editor() {\n        return this.$refs.myQuillEditor.quill\n      }\n    },\n    mounted() {\n      console.log('this is current quill instance object', this.editor)\n    }\n\n};\n</script>\n"]}]}