{"remainingRequest":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard.coway.com.my\\src\\views\\notification\\NotificationList.vue?vue&type=style&index=0&id=38cedec3&scoped=true&lang=css&","dependencies":[{"path":"D:\\extrust\\eboard.coway.com.my\\src\\views\\notification\\NotificationList.vue","mtime":1710320198801},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\css-loader\\dist\\cjs.js","mtime":1689230672011},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1689230680621},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\postcss-loader\\src\\index.js","mtime":1689230675067},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard.coway.com.my\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbHVtbnMtc3R5bGV7CiAgY29sb3I6ICMyMjBmY2Y7Cn0KCi50YWJsZV9ib2xkLXRleHQgewogIGZvbnQtd2VpZ2h0OiBib2xkOwp9Cg=="},{"version":3,"sources":["NotificationList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2cA;AACA;AACA;;AAEA;AACA;AACA","file":"NotificationList.vue","sourceRoot":"src/views/notification","sourcesContent":["<template>\n  <div id=\"\">\n    <!-- list filters -->\n    <v-card>\n      <v-card-title> Search &amp; Filter </v-card-title>\n      <v-row class=\"px-2 ma-0\">\n        <!-- role filter -->\n        <v-col cols=\"12\" sm=\"4\">\n          <v-select\n            v-model=\"selectedFilter\"\n            :items=\"targetOptions\"\n            label=\"Select Target\"\n            item-text=\"title\"\n            item-value=\"value\"\n            multiple\n            clearable\n          >\n            <template v-slot:prepend-item>\n              <v-list-item ripple @mousedown.prevent @click=\"toggle\">\n                <v-list-item-action>\n                  <v-icon\n                    :color=\"selectedTargrt.length > 0 ? 'indigo darken-4' : ''\"\n                  >\n                    {{ icons.targetBox }}\n                  </v-icon>\n                </v-list-item-action>\n\n                <v-list-item-content>\n                  <v-list-item-title> Select All </v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider class=\"mt-2\"></v-divider>\n            </template>\n          </v-select>\n\n          <!-- <v-select\n\t\t\t\t\t\tv-model=\"targetFilter\"\n\t\t\t\t\t\tclearable\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tclosable-chips=\"true\"\n\t\t\t\t\t\t:items=\"targetOptions\"\n\t\t\t\t\t\tlabel=\"Select Target\"\n\t\t\t\t\t></v-select> -->\n\n          <!-- <v-select\n\t\t\t\t\t\tv-model=\"targetFilter\"\n\t\t\t\t\t\tplaceholder=\"Select Target\"\n\t\t\t\t\t\t:items=\"targetOptions\"\n\t\t\t\t\t\titem-text=\"title\"\n\t\t\t\t\t\titem-value=\"value\"\n\t\t\t\t\t\toutlined\n\t\t\t\t\t\tclearable\n\t\t\t\t\t\tdense\n\t\t\t\t\t\thide-details\n\t\t\t\t\t></v-select> -->\n        </v-col>\n\n        <!-- plan filter -->\n        <v-col cols=\"12\" sm=\"4\">\n          <v-select\n            v-model=\"notificationFilter\"\n            label=\"Select Type\"\n            :items=\"notificationOptions\"\n            item-text=\"title\"\n            item-value=\"value\"\n            clearable\n          ></v-select>\n        </v-col>\n\n        <!-- status filter -->\n        <v-col cols=\"12\" sm=\"4\">\n          <v-select\n            v-model=\"statusFilter\"\n            label=\"Select Status\"\n            :items=\"statusOptions\"\n            item-text=\"title\"\n            item-value=\"value\"\n            clearable\n          ></v-select>\n        </v-col>\n      </v-row>\n\n      <v-divider class=\"mt-4\"></v-divider>\n\n      <!-- actions -->\n      <v-card-text class=\"d-flex align-center flex-wrap pb-0\">\n        <v-text-field\n          v-model=\"search\"\n          placeholder=\"Search\"\n          class=\"user-search me-3 mb-4\"\n        >\n        </v-text-field>\n      \n\n        <v-spacer></v-spacer>\n\n        <div class=\"d-flex align-center flex-wrap\">\n          <v-btn\n            color=\"primary\"\n            class=\"mb-4 me-3\"\n            @click=\"notificationDataList\"\n          >\n            <v-icon>{{ icons.mdiSearchWeb }} </v-icon>\n            <span>search</span>\n          </v-btn>\n        </div>\n      </v-card-text>\n\n      <v-divider class=\"mt-4\"></v-divider>\n\n      <!-- table -->\n      <v-data-table\n        v-model=\"selectedRows\"\n        :headers=\"tableColumns\"\n        :items=\"tableDataList\"\n        :items-per-page=\"20\"\n        :search=\"search\"\n        :loading=\"loading\"\n        :custom-filter=\"filterOnlyCapsText\"\n      >\n        <template v-slot:top>\n          <v-toolbar flat>\n            <v-toolbar-title>Data List</v-toolbar-title>\n          </v-toolbar>\n        </template>\n\n        <!-- id -->\n        <template #[`item.shortSUBJECT`]=\"{item}\">\n            <router-link\n              class=\"font-weight-medium text-decoration-none\"\n              :to=\"{ name: 'NotificationItemDetailView', query: { id: item.ID } }\"\n            >\n              {{ item.shortSUBJECT }}\n          </router-link>\n        </template>\n\n        <!-- type -->\n        <template #[`item.TYPE_NM`]=\"{ item }\">\n          <v-chip small :color=\"resolveTypeVariant(item.TYPE_NM)\">\n            {{ item.TYPE_NM }}\n          </v-chip>\n        </template>\n\n        <!-- status -->\n        <template #[`item.STATUS`]=\"{ item }\">\n          <v-chip small :color=\"resolveUserStatusVariant(item.STATUS)\">\n            <span>{{ item.STATUS }} </span> \n          </v-chip>\n        </template>\n        \n        <!-- read  -->\n        <template #[`item.rcnt`]=\"{ item }\">\n          <span class=\"table_bold-text\">{{ item.rcnt }} </span> \n        </template>\n        \n        <!-- attcheced  -->\n        <template #[`item.acnt`]=\"{ item }\">\n          <span class=\"table_bold-text\">  {{ item.acnt == 0 ? '':item.acnt }}</span>\n        </template>\n\n        \n        <template v-slot:item.actions=\"{ item }\">\n          <router-link  v-if =isCanEditItem(item)\n              class=\"font-weight-medium text-decoration-none\"\n              :to=\"{ name: 'NotificationItemDetailEdit', query: { id: item.ID } }\"\n            >\n            <v-icon > {{ icons.mdiPencil }} </v-icon>\n          </router-link>\n        </template>\n      </v-data-table>\n    </v-card>\n  </div>\n</template>\n\n<script>\n// eslint-disable-next-line object-curly-newline\nimport {\n  mdiSquareEditOutline,\n  mdiDotsVertical,\n  mdiPlus,\n  mdiFileDocumentOutline,\n  mdiDeleteOutline,\n  mdiExportVariant,\n  mdiAccountOutline,\n  mdiSearchWeb,\n  mdiPencil,\n  mdiDelete,\n} from \"@mdi/js\";\n// sidebar\n//import { avatarText } from '@core/utils/filter';\nimport baseApi from \"../../api/index.js\";\nimport utils from \"../../utils/utils.js\";\n\nexport default {\n  components: {},\n  data() {\n    const startdate = new Date().toISOString().substr(0, 10);\n    const enddate = new Date().toISOString().substr(0, 10);\n    const isCanEdit = false;\n\n    const isAddNewUserSidebarActive = false;\n    const targetOptions = [\n        { title: \"ALL\", value: \"ALL\" },\n        { title: \"All Salse\", value: \"^GM^SM^HM^HP\" },\n        { title: \"GM\", value: \"GM\" },\n        { title: \"SM\", value: \"SM\" },\n        { title: \"HM\", value: \"HM\" },\n        { title: \"HP\", value: \"HP\" },\n\n        { title: \"All Cody\", value: \"^GCM^SCM^CM^CODY\" },\n        { title: \"GCM\", value: \"GCM\" },\n        { title: \"SCM\", value: \"SCM\" },\n        { title: \"CM\", value: \"CM\" },\n        { title: \"CODY\", value: \"CODY\" },\n    ];\n\n    const notificationOptions = [\n        { title: \"Emergency\", value: \"E\" },\n        { title: \"Normal\", value: \"N\" },\n    ];\n\n    const statusOptions = [\n        { title: \"Pending\", value: \"P\" },\n        { title: \"Active\", value: \"A\" },\n        { title: \"Inactive\", value: \"I\" },\n    ];\n\n    const tableColumns = [\n        { text: \"ID\",value: \"ID\",align: \"center\", sortable: true,width: '5%' },\n        { text: \"Target\",value: \"TARGET\",align: \"center\",sortable: true,},\n        { text: \"Subject\", value: \"shortSUBJECT\"  , align: 'start', removable: true  ,width: '50%'},\n        { text: \"Status\", value: \"STATUS\", sortable: true , align: 'end',removable: true},\n        { text: \"Read\", value: \"rcnt\", sortable: true , align: 'end',removable: true},\n        { text: \"Attached\", value: \"acnt\", sortable: true , align: 'end',removable: true},\n        { text: \"Actions\", value: \"actions\", sortable: false },\n    ];\n    const options = {\n        sortBy: [\"id\"],\n        sortDesc: [true],\n    };\n\n    const tableDataList  = [];\n    const selectedRows = [];\n\n    return {\n      selectionType: \"leaf\",\n      targetOptions,\n      isAddNewUserSidebarActive,\n      //avatarText,\n      selectedFilter: [],\n      notificationFilter: null,\n      notificationOptions,\n      statusFilter: null,\n      statusOptions,\n      dialog: false,\n      dialogDelete: false,\n      /** DATA TABLE  */\n      selectedRows,\n      tableColumns,\n      tableDataList,\n      searchQuery: \"\",\n      totalDatalListTable: \"\",\n      loading: false,\n      options,\n      startdate,\n      enddate,\n      startdateModel: \"\",\n      enddateModel: \"\",\n      isCanEdit,\n      // icons\n      icons: {\n        mdiSquareEditOutline,\n        mdiFileDocumentOutline,\n        mdiDotsVertical,\n        mdiDeleteOutline,\n        mdiPlus,\n        mdiExportVariant,\n        mdiAccountOutline,\n        mdiSearchWeb,\n        mdiPencil,\n        mdiDelete,\n        targetBox: mdiPlus,\n      },\n      search: \"\",\n      selectedTargrt: [],\n      editedIndex: -1,\n      editedItem: {\n        ID: \"\",\n        SUBJECT: \"\",\n        CONTENTS: \"\",\n        STATUS: \"\",\n        STD_DATE: \"\",\n        END_DATE: \"\",\n        TARGET: \"\",\n        TYPE: \"\",\n        CRD_USER: \"\",\n      },\n\n      defaultItem: {\n        ID: \"\",\n        SUBJECT: \"\",\n        CONTENTS: \"\",\n        STATUS: \"\",\n        STD_DATE: \"\",\n        END_DATE: \"\",\n        TARGET: \"\",\n        TYPE: \"\",\n      },\n    };\n  },\n\n  watch: {\n    dialog(val) {\n      val || this.close();\n    },\n    dialogDelete(val) {\n      val || this.closeDelete();\n    },\n  },\n\n  computed: {\n    clickAllTarget() {\n      return this.selectedFilter.length === this.targetOptions.length;\n    },\n    likesSomeTarget() {\n      return this.selectedFilter.length > 0 && !this.clickAllTarget;\n    },\n   \n  },\n\n  methods: {\n    toggle() {\n      this.$nextTick(() => {\n        if (this.clickAllTarget) {\n          this.selectedFilter = [];\n          this.targetBox = \"mdiAccountOutline\";\n        } else {\n          this.selectedFilter = this.targetOptions.slice();\n          this.targetBox = \"mdiPlus\";\n        }\n      });\n    },\n\n    isCanEditItem(item) {\n      if (this.$store.state.userInfo.userTypeId == 4) {\n          return true;\n      } else {\n         return item.CRD_USER == this.$store.state.userName ? true : false;\n      }\n    },\n    remove (key) {\n        this.headers = this.headers.filter(header => header.key !== key)\n    },\n\n    async notificationDataList() {\n        this.loading =true;\n        const payload = {\n          status: this.statusFilter,\n          notificationTarget: this.selectedFilter,\n          notificationType: this.notificationFilter,\n        };\n\n        const data = await baseApi.getNotificationDataList(payload);\n      \n        if(data){\n          for ( var n in data.data.dataList){  \n              data.data.dataList[n].shortSCONTENTS =  utils.unescapeHTML(data.data.dataList[n].CONTENTS).substr(0,50);\n              data.data.dataList[n].SCONTENTS      =  utils.unescapeHTML(data.data.dataList[n].CONTENTS);\n\n              data.data.dataList[n].shortSUBJECT   =  utils.unescapeHTML(data.data.dataList[n].SUBJECT).substr(0,20);\n              data.data.dataList[n].SUBJECT        =  utils.unescapeHTML(data.data.dataList[n].SUBJECT);\n          }\n          this.tableDataList = data.data.dataList;\n          this.loading =false;\n        }\n      \n    },\n\n    async notificationDataUpdate() {\n      const data = await baseApi.saveNotification(this.editedItem);\n      console.log(data);\n    },\n\n    resolveUserStatusVariant(status) {\n      if (status === \"P\") return \"warning\";\n      if (status === \"A\") return \"success\";\n      if (status === \"I\") return \"secondary\";\n\n      return \"primary\";\n    },\n\n    resolveTypeVariant(status) {\n      if (status === \"Emergency\") return \"error\";\n      if (status === \"Normal\") return \"success\";\n\n      return \"primary\";\n    },\n\n    resolveAttched(cnt) {\n      if (cnt) return \"info\";\n\n      return \"\";\n    },\n\n    editItem(item) {\n      this.editedIndex = this.tableDataList.indexOf(item);\n      this.editedItem = Object.assign({}, item);\n      this.startdate = item.STD_DATE;\n      this.enddate = item.END_DATE;\n      this.editTarget = item.TARGET;\n      this.editType = item.TYPE;\n      this.editState = item.STATUS;\n      this.editState = item.STATUS;\n\n      \n      this.editedItem.CRD_USER = this.$store.state.userInfo.userName;\n      this.dialog = true;\n      this.isCanEditItem(item);\n\n    },\n    deleteItem(item) {\n      console.log(item);\n    },\n\n    close() {\n      this.dialog = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n\n    closeDelete() {\n      this.dialogDelete = false;\n      this.$nextTick(() => {\n        this.editedItem = Object.assign({}, this.defaultItem);\n        this.editedIndex = -1;\n      });\n    },\n    save() {\n      this.editedItem.STD_DATE = this.startdate;\n      this.editedItem.END_DATE = this.enddate;\n      this.notificationDataUpdate();\n      this.close();\n    },\n\n    filterOnlyCapsText(value, search) {\n      return (\n        value != null &&\n        search != null &&\n        typeof value === \"string\" &&\n        value.toString().toLocaleUpperCase().indexOf(search) !== -1\n      );\n    },\n  },\n};\n</script>\n\n<style scoped>\n.columns-style{\n  color: #220fcf;\n}\n\n.table_bold-text {\n  font-weight: bold;\n}\n</style>\n"]}]}