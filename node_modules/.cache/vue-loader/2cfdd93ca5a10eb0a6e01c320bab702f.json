{"remainingRequest":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\extrust\\eboard\\src\\views\\account-settings\\AccountSettingASQRCodeSettingResult.vue","mtime":1687773334236},{"path":"D:\\extrust\\eboard\\node_modules\\babel-loader\\lib\\index.js","mtime":1689230675098},{"path":"D:\\extrust\\eboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1689230669062},{"path":"D:\\extrust\\eboard\\node_modules\\vue-loader\\lib\\index.js","mtime":1689230676606}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CgltZGlDbG9zZSwKCW1kaUNoZWNrQm9sZCwKCW1kaUNoZWNrRGVjYWdyYW1PdXRsaW5lLAoJbWRpSGVscENpcmNsZU91dGxpbmUsCgkvL21kaUNoZWNrVW5kZXJsaW5lLAoJLy9tZGlBbGVydENpcmNsZU91dGxpbmUsCgltZGlBbGVydENpcmNsZUNoZWNrLAoJbWRpQ29tbWVudFByb2Nlc3NpbmdPdXRsaW5lLAoJbWRpQ2hlY2tDaXJjbGUsCgltZGlBbGVydENpcmNsZU91dGxpbmUsCn0gZnJvbSAnQG1kaS9qcyc7CgppbXBvcnQgeyBnZXRNb250aE5hbWUsIGdldERhdGUgfSBmcm9tICcuLi8uLi91dGlscy92YWxpZGF0aW9uJzsKaW1wb3J0IGJhc2VBcGkgZnJvbSAnLi4vLi4vYXBpL2luZGV4LmpzJzsKCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWU6ICdBY2NvdW50U2V0dGluZ0FTUVJDb2RlU2V0dGluZ1Jlc3VsdCcsCgljb21wb25lbnRzOiB7fSwKCXByb3BzOiB7CgkJc2NhbmRhdGE6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnJyB9LAoJCS8vIHJlc3VsdENvZGU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OjonJyAnZmFpbCcgfSwKCQkvLyByZXN1bHRNZXNzYWdlOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJycgfSwKCX0sCglkYXRhKCkgewoJCWNvbnNvbGUubG9nKHRoaXMuc2NhbmRhdGEuZGF0YSk7CgkJcmV0dXJuIHsKCQkJLy8gaWNvbgoJCQlpY29uczogewoJCQkJbWRpQ2xvc2UsCgkJCX0sCgoJCQltb250aDogZ2V0TW9udGhOYW1lKCksCgkJCW5kYXRlOiBnZXREYXRlKCksCgkJCW1kaUNoZWNrQm9sZCwKCQkJbWRpQ2hlY2tEZWNhZ3JhbU91dGxpbmUsCgkJCW1kaUhlbHBDaXJjbGVPdXRsaW5lLAoJCQlwcm9Db2xvcjogJ3NlY29uZGFyeScsCgkJCXByb1RleHQ6ICcnLAoJCQlwcm9JY29uOiBtZGlBbGVydENpcmNsZUNoZWNrLAoJCQlyZXN1bHRDb2RlOiAncHJvY2VzcycsCgkJCXJlc3VsdE1lc3NhZ2U6IG51bGwsCgkJCW1kaUNoZWNrQ2lyY2xlLAoJCX07Cgl9LAoKCWNvbXB1dGVkOiB7fSwKCWNyZWF0ZWQoKSB7CgkJY29uc29sZS5sb2coJz09PT09PT4nICsgdGhpcy5zY2FuZGF0YSk7CgoJCXRoaXMuaW5pdFByb2dyZXNzKCk7CgkJdGhpcy51cGRhdGVBdHRlbmREYXRhKCk7Cgl9LAoJbWV0aG9kczogewoJCWdvVG9BdHRlbmRIaXN0eSgpIHsKCQkJLy9jb25zb2xlLmxvZygnMTIzMScpOwoJCX0sCgkJaW5pdFByb2dyZXNzKCkgewoJCQlpZiAodGhpcy5yZXN1bHRDb2RlID09ICdwcm9jZXNzJykgewoJCQkJdGhpcy5wcm9Db2xvciA9ICdzZWNvbmRhcnkgJzsKCQkJCXRoaXMucHJvVGV4dCA9ICdwcm9ncmVzcyc7CgkJCQl0aGlzLnJlc3VsdE1lc3NhZ2UgPSAndmFsaWRhdGlvbiBpbiBwcm9ncmVzcy4uLic7CgkJCQl0aGlzLnByb0ljb24gPSBtZGlDb21tZW50UHJvY2Vzc2luZ091dGxpbmU7CgkJCX0KCQl9LAoKCQkvKioKCQkgKgoJCSAqLwoJCXVwZGF0ZVByb2dyZXNzKGRhdGEpIHsKCQkJY29uc29sZS5sb2coZGF0YSk7CgkJCWlmIChkYXRhLnN1Y2Nlc3MpIHsKCQkJCXRoaXMucHJvQ29sb3IgPSAnc3VjY2Vzcyc7CgkJCQl0aGlzLnByb1RleHQgPSAnU3VjY2Vzcyc7CgkJCQl0aGlzLnJlc3VsdE1lc3NhZ2UgPSBkYXRhLm1lc3NhZ2U7CgkJCQl0aGlzLnByb0ljb24gPSBtZGlDaGVja0NpcmNsZTsKCQkJfSBlbHNlIHsKCQkJCXRoaXMucHJvQ29sb3IgPSAnZXJyb3InOwoJCQkJdGhpcy5wcm9UZXh0ID0gJ0ZhaWxlZCc7CgkJCQl0aGlzLnJlc3VsdE1lc3NhZ2UgPSBkYXRhLm1lc3NhZ2U7CgkJCQl0aGlzLnByb0ljb24gPSBtZGlBbGVydENpcmNsZU91dGxpbmU7CgkJCX0KCQl9LAoKCQlhc3luYyB1cGRhdGVBdHRlbmREYXRhKCkgewoJCQljb25zb2xlLmxvZyh0aGlzLnNjYW5kYXRhKTsKCgkJCS8veyJkZXZpY2VJZCI6IjNmNzFmODIwYzU3ODEwNjUiLCJjIHVycmVudFRpbWUiOiIwOTo0NzowNCIgLGRhdGU6Inl5eXltbWRkIn0KCgkJCXRyeSB7CgkJCQljb25zdCBwYXJhbSA9IHRoaXMuc2NhbmRhdGE7CgkJCQlsZXQgb2JqID0gSlNPTi5wYXJzZShwYXJhbSk7CgoJCQkJY29uc29sZS5sb2cob2JqKTsKCgkJCQljb25zdCBwYXlsb2FkID0gewoJCQkJCXNjYW5EYXRlOiBvYmouZGF0ZSwKCQkJCQlzY2FuVGltZTogb2JqLmN1cnJlbnRUaW1lLAoJCQkJCXNjYW5EZXZpY2U6IG9iai5kZXZpY2VJZCwKCQkJCQl1c2VyTmFtZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8udXNlck5hbWUsCgkJCQkJdXNlckJyYW5jaElkOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby51c2VyQnJhbmNoSWQsCgkJCQkJdXNlckJyYW5jaE5hbWU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLmJyYW5jaE5hbWUsCgkJCQkJdXNlckJyYW5jaENvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLmNvZGUsCgkJCQl9OwoJCQkJY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBiYXNlQXBpLnVwZGF0ZUF0dGVuZFFSQnJhbmNoRGF0YShwYXlsb2FkKTsKCgkJCQl0aGlzLnVwZGF0ZVByb2dyZXNzKGRhdGEpOwoJCQl9IGNhdGNoIChlKSB7CgkJCQljb25zb2xlLmxvZyhlLnRvU3RyaW5nKCkpOwoJCQkJbGV0IGRhdGEgPSBuZXcgT2JqZWN0KCk7CgkJCQlkYXRhLnN1Y2Nlc3MgPSBmYWxzZTsKCQkJCWRhdGEubWVzc2FnZSA9IGUudG9TdHJpbmcoKTsKCQkJCXRoaXMudXBkYXRlUHJvZ3Jlc3MoZGF0YSk7CgkJCX0KCQl9LAoJfSwKfTsK"},{"version":3,"sources":["AccountSettingASQRCodeSettingResult.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountSettingASQRCodeSettingResult.vue","sourceRoot":"src/views/account-settings","sourcesContent":["<template>\n\t<v-card color=\"text-center\">\n\t\t<v-card-text class=\"d-flex flex-column justify-center align-center\">\n\t\t\t<!-- <v-avatar\n\t\t\t\tcolor=\"success\"\n\t\t\t\tclass=\"v-avatar-light-bg primary--text mt-10\"\n\t\t\t\ticon\n\t\t\t\tsize=\"100\"\n\t\t\t> -->\n\t\t\t<v-icon size=\"4rem\" :color=\"proColor\">\n\t\t\t\t{{ proIcon }}\n\t\t\t</v-icon>\n\t\t\t<!-- </v-avatar> -->\n\t\t\t<h6 class=\"text-5xl mt-4 font-weight-semibold\">{{ proText }}</h6>\n\t\t</v-card-text>\n\t\t<v-card-text>\n\t\t\t{{ resultMessage }}\n\t\t</v-card-text>\n\t\t<!-- <v-card-text>\n\t\t\t<v-btn\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tclass=\"mt-4\"\n\t\t\t\t@click.native=\"$router.push('AttendHistory')\"\n\t\t\t>\n\t\t\t\tcheck Histroy</v-btn\n\t\t\t>\n\t\t</v-card-text> -->\n\t</v-card>\n</template>\n\n<script>\nimport {\n\tmdiClose,\n\tmdiCheckBold,\n\tmdiCheckDecagramOutline,\n\tmdiHelpCircleOutline,\n\t//mdiCheckUnderline,\n\t//mdiAlertCircleOutline,\n\tmdiAlertCircleCheck,\n\tmdiCommentProcessingOutline,\n\tmdiCheckCircle,\n\tmdiAlertCircleOutline,\n} from '@mdi/js';\n\nimport { getMonthName, getDate } from '../../utils/validation';\nimport baseApi from '../../api/index.js';\n\nexport default {\n\tname: 'AccountSettingASQRCodeSettingResult',\n\tcomponents: {},\n\tprops: {\n\t\tscandata: { type: String, default: '' },\n\t\t// resultCode: { type: String, default::'' 'fail' },\n\t\t// resultMessage: { type: String, default: '' },\n\t},\n\tdata() {\n\t\tconsole.log(this.scandata.data);\n\t\treturn {\n\t\t\t// icon\n\t\t\ticons: {\n\t\t\t\tmdiClose,\n\t\t\t},\n\n\t\t\tmonth: getMonthName(),\n\t\t\tndate: getDate(),\n\t\t\tmdiCheckBold,\n\t\t\tmdiCheckDecagramOutline,\n\t\t\tmdiHelpCircleOutline,\n\t\t\tproColor: 'secondary',\n\t\t\tproText: '',\n\t\t\tproIcon: mdiAlertCircleCheck,\n\t\t\tresultCode: 'process',\n\t\t\tresultMessage: null,\n\t\t\tmdiCheckCircle,\n\t\t};\n\t},\n\n\tcomputed: {},\n\tcreated() {\n\t\tconsole.log('======>' + this.scandata);\n\n\t\tthis.initProgress();\n\t\tthis.updateAttendData();\n\t},\n\tmethods: {\n\t\tgoToAttendHisty() {\n\t\t\t//console.log('1231');\n\t\t},\n\t\tinitProgress() {\n\t\t\tif (this.resultCode == 'process') {\n\t\t\t\tthis.proColor = 'secondary ';\n\t\t\t\tthis.proText = 'progress';\n\t\t\t\tthis.resultMessage = 'validation in progress...';\n\t\t\t\tthis.proIcon = mdiCommentProcessingOutline;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t *\n\t\t */\n\t\tupdateProgress(data) {\n\t\t\tconsole.log(data);\n\t\t\tif (data.success) {\n\t\t\t\tthis.proColor = 'success';\n\t\t\t\tthis.proText = 'Success';\n\t\t\t\tthis.resultMessage = data.message;\n\t\t\t\tthis.proIcon = mdiCheckCircle;\n\t\t\t} else {\n\t\t\t\tthis.proColor = 'error';\n\t\t\t\tthis.proText = 'Failed';\n\t\t\t\tthis.resultMessage = data.message;\n\t\t\t\tthis.proIcon = mdiAlertCircleOutline;\n\t\t\t}\n\t\t},\n\n\t\tasync updateAttendData() {\n\t\t\tconsole.log(this.scandata);\n\n\t\t\t//{\"deviceId\":\"3f71f820c5781065\",\"c urrentTime\":\"09:47:04\" ,date:\"yyyymmdd\"}\n\n\t\t\ttry {\n\t\t\t\tconst param = this.scandata;\n\t\t\t\tlet obj = JSON.parse(param);\n\n\t\t\t\tconsole.log(obj);\n\n\t\t\t\tconst payload = {\n\t\t\t\t\tscanDate: obj.date,\n\t\t\t\t\tscanTime: obj.currentTime,\n\t\t\t\t\tscanDevice: obj.deviceId,\n\t\t\t\t\tuserName: this.$store.state.userInfo.userName,\n\t\t\t\t\tuserBranchId: this.$store.state.userInfo.userBranchId,\n\t\t\t\t\tuserBranchName: this.$store.state.userInfo.branchName,\n\t\t\t\t\tuserBranchCode: this.$store.state.userInfo.code,\n\t\t\t\t};\n\t\t\t\tconst { data } = await baseApi.updateAttendQRBranchData(payload);\n\n\t\t\t\tthis.updateProgress(data);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e.toString());\n\t\t\t\tlet data = new Object();\n\t\t\t\tdata.success = false;\n\t\t\t\tdata.message = e.toString();\n\t\t\t\tthis.updateProgress(data);\n\t\t\t}\n\t\t},\n\t},\n};\n</script>\n\n<style lang=\"scss\">\n@import '@core/preset/preset/pages/auth.scss';\n</style>\n"]}]}